# ========================
# ==== argN Constants ====
# ========================

# (bug in yml library keeps from factoring)

argN: &argN
  name: arg[0:9]+
  type: unknown
  docs: The argument to the call at the specific index, [0:9]+. (For example, the number of arguments to a call changes based on the targeted function.)
  lifetime: dynamic
  derived_from: null

arg0_i32: &arg0_i32
  name: arg0
  type: i32
  docs: The argument to the opcode at index 0.
  lifetime: dynamic
  derived_from: null

arg0_u32: &arg0_u32
  name: arg0
  type: u32
  docs: The argument to the opcode at index 0.
  lifetime: dynamic
  derived_from: null

arg0_i64: &arg0_i64
  name: arg0
  type: i64
  docs: The argument to the opcode at index 0.
  lifetime: dynamic
  derived_from: null

arg0_u64: &arg0_u64
  name: arg0
  type: u64
  docs: The argument to the opcode at index 0.
  lifetime: dynamic
  derived_from: null

arg0_f32: &arg0_f32
  name: arg0
  type: f32
  docs: The argument to the opcode at index 0.
  lifetime: dynamic
  derived_from: null

arg0_f64: &arg0_f64
  name: arg0
  type: f64
  docs: The argument to the opcode at index 0.
  lifetime: dynamic
  derived_from: null

arg0_unknown: &arg0_unknown
  name: arg0
  type: unknown
  docs: The argument to the opcode at index 0.
  lifetime: dynamic
  derived_from: null

arg1_i32: &arg1_i32
  name: arg1
  type: i32
  docs: The argument to the opcode at index 1.
  lifetime: dynamic
  derived_from: null

arg1_u32: &arg1_u32
  name: arg1
  type: u32
  docs: The argument to the opcode at index 1.
  lifetime: dynamic
  derived_from: null

arg1_i64: &arg1_i64
  name: arg1
  type: i64
  docs: The argument to the opcode at index 1.
  lifetime: dynamic
  derived_from: null

arg1_u64: &arg1_u64
  name: arg1
  type: u64
  docs: The argument to the opcode at index 1.
  lifetime: dynamic
  derived_from: null

arg1_f32: &arg1_f32
  name: arg1
  type: f32
  docs: The argument to the opcode at index 1.
  lifetime: dynamic
  derived_from: null

arg1_f64: &arg1_f64
  name: arg1
  type: f64
  docs: The argument to the opcode at index 1.
  lifetime: dynamic
  derived_from: null

arg2_i32: &arg2_i32
  name: arg2
  type: i32
  docs: The argument to the opcode at index 2.
  lifetime: dynamic
  derived_from: null

arg2_u32: &arg2_u32
  name: arg2
  type: u32
  docs: The argument to the opcode at index 2.
  lifetime: dynamic
  derived_from: null

# ===========================
# ==== resultN Constants ====
# ===========================

res0_i32: &res0_i32
  name: res0
  type: i32
  docs: The result of the opcode at index 0.
  lifetime: dynamic
  derived_from: null

res0_i64: &res0_i64
  name: res0
  type: i64
  docs: The result of the opcode at index 0.
  lifetime: dynamic
  derived_from: null

res0_f32: &res0_f32
  name: res0
  type: f32
  docs: The result of the opcode at index 0.
  lifetime: dynamic
  derived_from: null

res0_f64: &res0_f64
  name: res0
  type: f64
  docs: The result of the opcode at index 0.
  lifetime: dynamic
  derived_from: null

# ========================
# ==== immN Constants ====
# ========================

immN_unknown: &immN
  name: imm[0:9]+
  type: unknown
  docs: The immediate to the opcode at the specific index, e.g. [0:9]+, not including the default target. The number of immediates on the br_table is not statically known.
  lifetime: static
  derived_from: null

immN_u32: &immN_u32
  name: imm[0:9]+
  type: u32
  docs: The immediate to the opcode at the specific index, e.g. [0:9]+, not including the default target. The number of immediates on the br_table is not statically known.
  lifetime: static
  derived_from: null

imm0_i32: &imm0_i32
  name: imm0
  type: i32
  docs: The immediate to the opcode at index 0.
  lifetime: static
  derived_from: null

imm0_u32: &imm0_u32
  name: imm0
  type: u32
  docs: The immediate to the opcode at index 0.
  lifetime: static
  derived_from: null

imm0_i64: &imm0_i64
  name: imm0
  type: i64
  docs: The immediate to the opcode at index 0.
  lifetime: static
  derived_from: null

imm0_f32: &imm0_f32
  name: imm0
  type: f32
  docs: The immediate to the opcode at index 0.
  lifetime: static
  derived_from: null

imm0_f64: &imm0_f64
  name: imm0
  type: f64
  docs: The immediate to the opcode at index 0.
  lifetime: static
  derived_from: null

imm1_u32: &imm1_u32
  name: imm1
  type: u32
  docs: The immediate to the opcode at index 1.
  lifetime: static
  derived_from: null

imm1_unknown: &imm1_unknown
  name: imm1
  type: unknown
  docs: The immediate to the opcode at index 1.
  lifetime: static
  derived_from: null

imm2_unknown: &imm2_unknown
  name: imm2
  type: unknown
  docs: The immediate to the opcode at index 2.
  lifetime: static
  derived_from: null

# ============================
# ==== Category Constants ====
# ============================

# CATEGORY ID
# (bug in yml library keeps from factoring)

category_id_arith: &category_id_arith
  name: category_id
  docs: The ID of the category of this opcode.
  type: u32
  lifetime: static
  derived_from: 0
category_id_atomic: &category_id_atomic
  name: category_id
  docs: The ID of the category of this opcode.
  type: u32
  lifetime: static
  derived_from: 1
category_id_compare: &category_id_compare
  name: category_id
  docs: The ID of the category of this opcode.
  type: u32
  lifetime: static
  derived_from: 2
category_id_const: &category_id_const
  name: category_id
  docs: The ID of the category of this opcode.
  type: u32
  lifetime: static
  derived_from: 3
category_id_control: &category_id_control
  name: category_id
  docs: The ID of the category of this opcode.
  type: u32
  lifetime: static
  derived_from: 4
category_id_convert: &category_id_convert
  name: category_id
  docs: The ID of the category of this opcode.
  type: u32
  lifetime: static
  derived_from: 5
category_id_exn: &category_id_exn
  name: category_id
  docs: The ID of the category of this opcode.
  type: u32
  lifetime: static
  derived_from: 6
category_id_gc: &category_id_gc
  name: category_id
  docs: The ID of the category of this opcode.
  type: u32
  lifetime: static
  derived_from: 7
category_id_global: &category_id_global
  name: category_id
  docs: The ID of the category of this opcode.
  type: u32
  lifetime: static
  derived_from: 8
category_id_load: &category_id_load
  name: category_id
  docs: The ID of the category of this opcode.
  type: u32
  lifetime: static
  derived_from: 9
category_id_local: &category_id_local
  name: category_id
  docs: The ID of the category of this opcode.
  type: u32
  lifetime: static
  derived_from: 10
category_id_memory: &category_id_memory
  name: category_id
  docs: The ID of the category of this opcode.
  type: u32
  lifetime: static
  derived_from: 11
category_id_misc: &category_id_misc
  name: category_id
  docs: The ID of the category of this opcode.
  type: u32
  lifetime: static
  derived_from: 12
category_id_ref: &category_id_ref
  name: category_id
  docs: The ID of the category of this opcode.
  type: u32
  lifetime: static
  derived_from: 13
category_id_simd: &category_id_simd
  name: category_id
  docs: The ID of the category of this opcode.
  type: u32
  lifetime: static
  derived_from: 14
category_id_store: &category_id_store
  name: category_id
  docs: The ID of the category of this opcode.
  type: u32
  lifetime: static
  derived_from: 15
category_id_table: &category_id_table
  name: category_id
  docs: The ID of the category of this opcode.
  type: u32
  lifetime: static
  derived_from: 16

# CATEGORY NAME

category_name_arith: &category_name_arith
  name: category_name
  docs: The category name of this opcode.
  type: str
  lifetime: static
  derived_from: '"arith"'
category_name_atomic: &category_name_atomic
  name: category_name
  docs: The category name of this opcode.
  type: str
  lifetime: static
  derived_from: '"atomic"'
category_name_compare: &category_name_compare
  name: category_name
  docs: The category name of this opcode.
  type: str
  lifetime: static
  derived_from: '"compare"'
category_name_const: &category_name_const
  name: category_name
  docs: The category name of this opcode.
  type: str
  lifetime: static
  derived_from: '"const"'
category_name_control: &category_name_control
  name: category_name
  docs: The category name of this opcode.
  type: str
  lifetime: static
  derived_from: '"control"'
category_name_convert: &category_name_convert
  name: category_name
  docs: The category name of this opcode.
  type: str
  lifetime: static
  derived_from: '"convert"'
category_name_exn: &category_name_exn
  name: category_name
  docs: The category name of this opcode.
  type: str
  lifetime: static
  derived_from: '"exn"'
category_name_gc: &category_name_gc
  name: category_name
  docs: The category name of this opcode.
  type: str
  lifetime: static
  derived_from: '"gc"'
category_name_global: &category_name_global
  name: category_name
  docs: The category name of this opcode.
  type: str
  lifetime: static
  derived_from: '"global"'
category_name_load: &category_name_load
  name: category_name
  docs: The category name of this opcode.
  type: str
  lifetime: static
  derived_from: '"load"'
category_name_local: &category_name_local
  name: category_name
  docs: The category name of this opcode.
  type: str
  lifetime: static
  derived_from: '"local"'
category_name_memory: &category_name_memory
  name: category_name
  docs: The category name of this opcode.
  type: str
  lifetime: static
  derived_from: '"memory"'
category_name_misc: &category_name_misc
  name: category_name
  docs: The category name of this opcode.
  type: str
  lifetime: static
  derived_from: '"misc"'
category_name_ref: &category_name_ref
  name: category_name
  docs: The category name of this opcode.
  type: str
  lifetime: static
  derived_from: '"ref"'
category_name_simd: &category_name_simd
  name: category_name
  docs: The category name of this opcode.
  type: str
  lifetime: static
  derived_from: '"simd"'
category_name_store: &category_name_store
  name: category_name
  docs: The category name of this opcode.
  type: str
  lifetime: static
  derived_from: '"store"'
category_name_table: &category_name_table
  name: category_name
  docs: The category name of this opcode.
  type: str
  lifetime: static
  derived_from: '"table"'

# ========================
# ==== MODE Constants ====
# ========================

before: &before
  alias_to: null
  name: before
  docs: This mode will cause the instrumentation logic to run *before* the probed event (if the predicate evaluates to `true`).
after: &after
  alias_to: null
  name: after
  docs:  This mode will cause the instrumentation logic to run *after* the probed event (if the predicate evaluates to `true`). For block-structured opcodes, the probe will be injected after the 'end' of the block.
semantic_after: &semantic_after
  alias_to: after
  name: semantic_after
  docs: This mode will cause the instrumentation logic to run *semantically after* the instrumented location, meaning it will find the target point in the bytecode that will be executed *after* the point is reached (consider blocks and br* opcodes).
branching_after: &branching_after
  alias_to: at_target
  name: semantic_after
  docs: This mode will cause the instrumentation logic to run *semantically after* the instrumented location, meaning it will find the target point in the bytecode that will be executed *after* the point is reached (consider blocks and br* opcodes).
alt: &alt
  alias_to: null
  name: alt
  docs: This mode will cause the instrumentation logic to run *instead of* the probed event (if the predicate evaluates to `true`).
block_alt: &block_alt
  alias_to: alt
  name: block_alt
  docs: This mode will cause the instrumentation logic to run *instead of* the probed block (if the predicate evaluates to `true`).
entry: &entry
  alias_to: null
  name: entry
  docs: This mode will cause the instrumentation logic to run *on entry* to the instrumentation point (e.g. functions bodies, blocks, etc.).
exit: &exit
  alias_to: null
  name: exit
  docs: This mode will cause the instrumentation logic to run *on exiting* to the instrumentation point (e.g. function bodies, blocks, etc.).

default_modes: &default_modes
  - *before
  - *after
  - *alt
default_modes_no_alt: &default_modes_no_alt
  - *before
  - *after
block_modes: &block_modes
  - *before
  - *semantic_after
  - *block_alt
  - *entry
  - *exit
branching_modes: &branching_modes
  - *before
  - *after
  - *alt
  - *branching_after

# ==========================
# ==== *call* Constants ====
# ==========================

target_imp_module: &target_imp_module
  name: target_imp_module
  type: str
  docs: The name of the module that the imported function comes from. To improve performance, pair with `target_fn_type == "import"` for faster short-circuiting.
  lifetime: static
  derived_from: null
target_fn_name: &target_fn_name
  name: target_fn_name
  type: str
  docs: The function name of the call target. Local functions get this from the custom section, imports from the import name. To improve performance for imports, pair with `target_fn_type == "import"` for faster short-circuiting.
  lifetime: static
  derived_from: null
target_fn_type: &target_fn_type
  name: target_fn_type
  type: str
  docs: The type of function being called at this call site. This constant will evaluate to either `local` or `import`.
  lifetime: static
  derived_from: null
alt_call_by_id: &alt_call_by_id
  name: alt_call_by_id
  lifetime: static
  params: "(func_id: i32)"
  results: ()
  req_args: -1
  docs: Insert an alternate call (targeting the passed function ID) into the Wasm bytecode. Will also emit the original parameters onto the stack.
alt_call_by_name: &alt_call_by_name
  name: alt_call_by_name
  lifetime: static
  params: "(func_name: str)"
  results: ()
  req_args: -1
  docs: Insert an alternate call (targeting the passed function name) into the Wasm bytecode. Will also emit the original parameters onto the stack.

# ============================
# ==== *struct* Constants ====
# ============================

struct_tid: &struct_tid
  name: tid
  type: u32
  docs: The type ID of this struct.
  lifetime: static
  derived_from: imm0

field_idx: &field_idx
  name: field_idx
  type: u32
  docs: The index of the struct field being accessed.
  lifetime: static
  derived_from: imm1

# ============================
# ==== *struct* Constants ====
# ============================

array_tid: &array_tid
  name: tid
  type: u32
  docs: The type ID of this array.
  lifetime: static
  derived_from: imm0

# ==========================
# ==== MemArg Constants ====
# ==========================

memory: &memory
  name: memory
  type: u32
  docs: The ID of memory to load from.
  lifetime: static
  derived_from: null
align: &align
  name: align
  type: u32
  docs: The alignment of the load.
  lifetime: static
  derived_from: null
effective_addr: &effective_addr
  name: effective_addr
  type: u32
  docs: "The address in memory that will be loaded from, shorthand for: `addr + offset as u32`"
  lifetime: dynamic
  derived_from: addr + offset as u32
offset: &offset
  name: offset
  type: u64
  docs: The static offset of the load's target address.
  lifetime: static
  derived_from: null
is_write_true: &is_write_true
  name: is_write
  type: bool
  docs: "Whether this memory operation is a write."
  lifetime: static
  derived_from: true
is_write_false: &is_write_false
  name: is_write
  type: bool
  docs: "Whether this memory operation is a write."
  lifetime: static
  derived_from: false

# =======================
# ==== wasm:opcode:* ====
# =======================

unreachable: &unreachable
  name: unreachable
  bound_vars:
    - name: opname
      type: str
      docs: The name of the activated opcode.
      lifetime: static
      derived_from: "\"unreachable\""
    - name: bytecode
      type: u16
      docs: The byte(s) that identify this opcode in the Wasm binary format.
      lifetime: static
      derived_from: 0x0000
    - *category_id_misc
    - *category_name_misc
  bound_fns: []
  supported_modes:
  - *alt
  - *before

  docs: "https://developer.mozilla.org/en-US/docs/WebAssembly/Reference/Control_flow/unreachable"

nop: &nop
  name: nop
  bound_vars:
    - name: opname
      type: str
      docs: The name of the activated opcode.
      lifetime: static
      derived_from: "\"nop\""
    - name: bytecode
      type: u16
      docs: The byte(s) that identify this opcode in the Wasm binary format.
      lifetime: static
      derived_from: 0x0001
    - *category_id_misc
    - *category_name_misc
  bound_fns: []
  supported_modes: *default_modes

  docs: "https://www.w3.org/TR/wasm-core-2/#syntax-instr-control"

block: &block
  name: block
  bound_vars:
    - name: opname
      type: str
      docs: The name of the activated opcode.
      lifetime: static
      derived_from: "\"block\""
    - name: bytecode
      type: u16
      docs: The byte(s) that identify this opcode in the Wasm binary format.
      lifetime: static
      derived_from: 0x0002
    - *category_id_control
    - *category_name_control
    - *argN
  bound_fns: []
  supported_modes: *block_modes

  docs: "https://developer.mozilla.org/en-US/docs/WebAssembly/Reference/Control_flow/block"

loop: &loop
  name: loop
  bound_vars:
    - name: opname
      type: str
      docs: The name of the activated opcode.
      lifetime: static
      derived_from: "\"loop\""
    - name: bytecode
      type: u16
      docs: The byte(s) that identify this opcode in the Wasm binary format.
      lifetime: static
      derived_from: 0x0003
    - *category_id_control
    - *category_name_control
    - *argN
  bound_fns: []
  supported_modes: *block_modes

  docs: "https://developer.mozilla.org/en-US/docs/WebAssembly/Reference/Control_flow/loop"

if: &if
  name: if
  bound_vars:
    - name: opname
      type: str
      docs: The name of the activated opcode.
      lifetime: static
      derived_from: "\"if\""
    - name: bytecode
      type: u16
      docs: The byte(s) that identify this opcode in the Wasm binary format.
      lifetime: static
      derived_from: 0x0004
    - *category_id_control
    - *category_name_control
    - *arg0_u32
  bound_fns: []
  supported_modes: *block_modes

  docs: "https://developer.mozilla.org/en-US/docs/WebAssembly/Reference/Control_flow/if...else"

else: &else
  name: else
  bound_vars:
    - name: opname
      type: str
      docs: The name of the activated opcode.
      lifetime: static
      derived_from: "\"else\""
    - name: bytecode
      type: u16
      docs: The byte(s) that identify this opcode in the Wasm binary format.
      lifetime: static
      derived_from: 0x0005
    - *category_id_control
    - *category_name_control
  bound_fns: []
  supported_modes: *block_modes

  docs: "https://developer.mozilla.org/en-US/docs/WebAssembly/Reference/Control_flow/if...else"

# TODO: try (0x0006) / catch (0x0007)

throw: &throw
  name: throw
  bound_vars:
    - name: opname
      type: str
      docs: The name of the activated opcode.
      lifetime: static
      derived_from: "\"throw\""
    - name: bytecode
      type: u16
      docs: The byte(s) that identify this opcode in the Wasm binary format.
      lifetime: static
      derived_from: 0x0008
    - *category_id_exn
    - *category_name_exn
    - *argN
    - *imm0_u32
  bound_fns: []
  supported_modes: *default_modes

  docs: "https://github.com/WebAssembly/exception-handling/blob/e7c7c313d26f6b0fe8f1bda33cd6ab5e9edd838b/proposals/exception-handling/Exceptions.md#throwing-an-exception"

# TODO: rethrow (0x0009)

throw_ref: &throw_ref
  name: throw_ref
  bound_vars:
    - name: opname
      type: str
      docs: The name of the activated opcode.
      lifetime: static
      derived_from: "\"throw_ref\""
    - name: bytecode
      type: u16
      docs: The byte(s) that identify this opcode in the Wasm binary format.
      lifetime: static
      derived_from: 0x000A
    - *category_id_exn
    - *category_name_exn
    - *argN
  bound_fns: []
  supported_modes: *default_modes

  docs: "https://github.com/WebAssembly/exception-handling/blob/e7c7c313d26f6b0fe8f1bda33cd6ab5e9edd838b/proposals/exception-handling/Exceptions.md#rethrowing-an-exception"

end: &end
  name: end
  bound_vars:
    - name: opname
      type: str
      docs: The name of the activated opcode.
      lifetime: static
      derived_from: "\"end\""
    - name: bytecode
      type: u16
      docs: The byte(s) that identify this opcode in the Wasm binary format.
      lifetime: static
      derived_from: 0x000B
    - *category_id_control
    - *category_name_control
  bound_fns: []
  supported_modes: *default_modes_no_alt

  docs: "https://developer.mozilla.org/en-US/docs/WebAssembly/Reference/Control_flow/end"

br: &br
  name: br
  bound_vars:
    - name: opname
      type: str
      docs: The name of the activated opcode.
      lifetime: static
      derived_from: "\"br\""
    - name: bytecode
      type: u16
      docs: The byte(s) that identify this opcode in the Wasm binary format.
      lifetime: static
      derived_from: 0x000C
    - *category_id_control
    - *category_name_control
    - *imm0_u32
  bound_fns: []
  supported_modes: *branching_modes

  docs: "https://developer.mozilla.org/en-US/docs/WebAssembly/Reference/Control_flow/br"

br_if: &br_if
  name: br_if
  bound_vars:
    - name: opname
      type: str
      docs: The name of the activated opcode.
      lifetime: static
      derived_from: "\"br_if\""
    - name: bytecode
      type: u16
      docs: The byte(s) that identify this opcode in the Wasm binary format.
      lifetime: static
      derived_from: 0x000D
    - *category_id_control
    - *category_name_control
    - *arg0_u32
    - *imm0_u32
  bound_fns: []
  supported_modes: *branching_modes

  docs: "https://developer.mozilla.org/en-US/docs/WebAssembly/Reference/Control_flow/br"

br_table: &br_table
  name: br_table
  bound_vars:
    - name: opname
      type: str
      docs: The name of the activated opcode.
      lifetime: static
      derived_from: "\"br_table\""
    - name: bytecode
      type: u16
      docs: The byte(s) that identify this opcode in the Wasm binary format.
      lifetime: static
      derived_from: 0x000E
    - *category_id_control
    - *category_name_control
    - *arg0_u32
    - *immN_u32
    - name: targets
      type: map<u32, u32>
      docs: "The NON-DEFAULT target branches for this br_table instruction represented as a map. The map follows the pattern: [0->imm0, 1->imm1, .. N->immN]."
      lifetime: static
      derived_from: null
    - name: default_target
      type: u32
      docs: The default target of this br_table instruction.
      lifetime: static
      derived_from: null
    - name: num_targets
      type: u32
      docs: "The number of NON-DEFAULT target branches for this br_table instruction (correlates with the number of immediates, e.g. `immN`).This means the total number of targets is really num_targets + 1, to include the default target. NOTE: This can be used in a predicate to ensure that the current br_table has the immN you need to interact with for the probe."
      lifetime: static
      derived_from: null
    - name: target
      type: u32
      docs: The actual dynamic target of this br_table instruction.
      lifetime: static
      derived_from: "arg0 <= (num_targets - 1) ? arg0 : num_targets"
  bound_fns: []
  supported_modes: *branching_modes

  docs: "https://musteresel.github.io/posts/2020/01/webassembly-text-br_table-example.html"

return: &return
  name: return
  bound_vars:
    - name: opname
      type: str
      docs: The name of the activated opcode.
      lifetime: static
      derived_from: "\"return\""
    - name: bytecode
      type: u16
      docs: The byte(s) that identify this opcode in the Wasm binary format.
      lifetime: static
      derived_from: 0x000F
    - *category_id_control
    - *category_name_control
  bound_fns: []
  supported_modes: *default_modes

  docs: "https://developer.mozilla.org/en-US/docs/WebAssembly/Reference/Control_flow/return"


call: &call
  name: call
  bound_vars:
    - name: opname
      type: str
      docs: The name of the activated opcode.
      lifetime: static
      derived_from: "\"call\""
    - name: bytecode
      type: u16
      docs: The byte(s) that identify this opcode in the Wasm binary format.
      lifetime: static
      derived_from: 0x0010
    - *category_id_control
    - *category_name_control
    - *argN
    - *imm0_u32
    - *target_imp_module
    - *target_fn_name
    - *target_fn_type
  bound_fns:
    - *alt_call_by_id
    - *alt_call_by_name
  supported_modes: *default_modes

  docs: "https://developer.mozilla.org/en-US/docs/WebAssembly/Reference/Control_flow/call"

call_indirect: &call_indirect
  name: call_indirect
  bound_vars:
    - name: opname
      type: str
      docs: The name of the activated opcode.
      lifetime: static
      derived_from: "\"call_indirect\""
    - name: bytecode
      type: u16
      docs: The byte(s) that identify this opcode in the Wasm binary format.
      lifetime: static
      derived_from: 0x0011
    - *category_id_control
    - *category_name_control
    - *argN
    - *imm0_u32
    - *imm1_u32
  bound_fns: []
  supported_modes: *default_modes

  docs: "https://developer.mozilla.org/en-US/docs/WebAssembly/Reference/Control_flow/call"

return_call: &return_call
  name: return_call
  bound_vars:
    - name: opname
      type: str
      docs: The name of the activated opcode.
      lifetime: static
      derived_from: "\"return_call\""
    - name: bytecode
      type: u16
      docs: The byte(s) that identify this opcode in the Wasm binary format.
      lifetime: static
      derived_from: 0x0012
    - *category_id_control
    - *category_name_control
    - *argN
    - *imm0_u32
    - *target_imp_module
    - *target_fn_name
    - *target_fn_type
  bound_fns:
    - *alt_call_by_id
    - *alt_call_by_name
  supported_modes: *default_modes

  docs: "https://developer.mozilla.org/en-US/docs/WebAssembly/Reference/Control_flow/call"

return_call_indirect: &return_call_indirect
  name: return_call_indirect
  bound_vars:
    - name: opname
      type: str
      docs: The name of the activated opcode.
      lifetime: static
      derived_from: "\"return_call_indirect\""
    - name: bytecode
      type: u16
      docs: The byte(s) that identify this opcode in the Wasm binary format.
      lifetime: static
      derived_from: 0x0013
    - *category_id_control
    - *category_name_control
    - *argN
    - *imm0_u32
    - *imm1_u32
  bound_fns: []
  supported_modes: *default_modes

  docs: "https://developer.mozilla.org/en-US/docs/WebAssembly/Reference/Control_flow/call"

call_ref: &call_ref
  name: call_ref
  bound_vars:
    - name: opname
      type: str
      docs: The name of the activated opcode.
      lifetime: static
      derived_from: "\"call_ref\""
    - name: bytecode
      type: u16
      docs: The byte(s) that identify this opcode in the Wasm binary format.
      lifetime: static
      derived_from: 0x0014
    - *category_id_control
    - *category_name_control
    - *imm0_u32
    - *argN
  bound_fns: []
  supported_modes: *default_modes

  docs: "https://github.com/WebAssembly/reference-types/blob/master/proposals/reference-types/Overview.md"

return_call_ref: &return_call_ref
  name: return_call_ref
  bound_vars:
    - name: opname
      type: str
      docs: The name of the activated opcode.
      lifetime: static
      derived_from: "\"return_call_ref\""
    - name: bytecode
      type: u16
      docs: The byte(s) that identify this opcode in the Wasm binary format.
      lifetime: static
      derived_from: 0x0015
    - *category_id_control
    - *category_name_control
    - *imm0_u32
    - *argN
  bound_fns: []
  supported_modes: *default_modes

  docs: "https://github.com/WebAssembly/reference-types/blob/master/proposals/reference-types/Overview.md"

# TODO: delegate/catch_all

drop: &drop
  name: drop
  bound_vars:
    - name: opname
      type: str
      docs: The name of the activated opcode.
      lifetime: static
      derived_from: "\"drop\""
    - name: bytecode
      type: u16
      docs: The byte(s) that identify this opcode in the Wasm binary format.
      lifetime: static
      derived_from: 0x001A
    - *category_id_misc
    - *category_name_misc
    - *argN
  bound_fns: []
  supported_modes: *default_modes

  docs: "https://developer.mozilla.org/en-US/docs/WebAssembly/Reference/Control_flow/Drop"

select: &select
  name: select
  bound_vars:
    - name: opname
      type: str
      docs: The name of the activated opcode.
      lifetime: static
      derived_from: "\"select\""
    - name: bytecode
      type: u16
      docs: The byte(s) that identify this opcode in the Wasm binary format.
      lifetime: static
      derived_from: 0x001B
    - *category_id_control
    - *category_name_control
    - *argN
  bound_fns: []
  supported_modes: *default_modes

  docs: "https://developer.mozilla.org/en-US/docs/WebAssembly/Reference/Control_flow/Select"

# TODO -- support pulling the type!
#         TypedSelect { ty: $crate::ValType } => visit_typed_select
typed_select: &typed_select
  name: typed_select
  bound_vars:
    - name: opname
      type: str
      docs: The name of the activated opcode.
      lifetime: static
      derived_from: "\"select\""
    - name: bytecode
      type: u16
      docs: The byte(s) that identify this opcode in the Wasm binary format.
      lifetime: static
      derived_from: 0x001C
    - *category_id_control
    - *category_name_control
    - *argN
  bound_fns: []
  supported_modes: *default_modes

  docs: "https://developer.mozilla.org/en-US/docs/WebAssembly/Reference/Control_flow/Select"

try_table: &try_table
  name: try_table
  bound_vars:
    - name: opname
      type: str
      docs: The name of the activated opcode.
      lifetime: static
      derived_from: "\"try_table\""
    - name: bytecode
      type: u16
      docs: The byte(s) that identify this opcode in the Wasm binary format.
      lifetime: static
      derived_from: 0x001F
    - *category_id_table
    - *category_name_table
  bound_fns: []
  supported_modes: *block_modes

  docs: "https://github.com/WebAssembly/exception-handling/blob/e7c7c313d26f6b0fe8f1bda33cd6ab5e9edd838b/proposals/exception-handling/Exceptions.md#try-blocks"

local_get: &local_get
  name: local.get
  bound_vars:
    - name: opname
      type: str
      docs: The name of the activated opcode.
      lifetime: static
      derived_from: "\"local.get\""
    - name: bytecode
      type: u16
      docs: The byte(s) that identify this opcode in the Wasm binary format.
      lifetime: static
      derived_from: 0x0020
    - *category_id_local
    - *category_name_local
    - *imm0_u32
  bound_fns: []
  supported_modes: *default_modes

  docs: "https://developer.mozilla.org/en-US/docs/WebAssembly/Reference/Variables/Local_get"

local_set: &local_set
  name: local.set
  bound_vars:
    - name: opname
      type: str
      docs: The name of the activated opcode.
      lifetime: static
      derived_from: "\"local.set\""
    - name: bytecode
      type: u16
      docs: The byte(s) that identify this opcode in the Wasm binary format.
      lifetime: static
      derived_from: 0x0021
    - *category_id_local
    - *category_name_local
    - *arg0_unknown
    - *imm0_u32
  bound_fns: []
  supported_modes: *default_modes

  docs: "https://developer.mozilla.org/en-US/docs/WebAssembly/Reference/Variables/Local_set"

local_tee: &local_tee
  name: local.tee
  bound_vars:
    - name: opname
      type: str
      docs: The name of the activated opcode.
      lifetime: static
      derived_from: "\"local.tee\""
    - name: bytecode
      type: u16
      docs: The byte(s) that identify this opcode in the Wasm binary format.
      lifetime: static
      derived_from: 0x0022
    - *category_id_local
    - *category_name_local
    - *arg0_unknown
    - *imm0_u32
  bound_fns: []
  supported_modes: *default_modes

  docs: "https://developer.mozilla.org/en-US/docs/WebAssembly/Reference/Variables/Local_tee"

global_get: &global_get
  name: global.get
  bound_vars:
    - name: opname
      type: str
      docs: The name of the activated opcode.
      lifetime: static
      derived_from: "\"global.get\""
    - name: bytecode
      type: u16
      docs: The byte(s) that identify this opcode in the Wasm binary format.
      lifetime: static
      derived_from: 0x0023
    - *category_id_global
    - *category_name_global
    - *imm0_u32
  bound_fns: []
  supported_modes: *default_modes

  docs: "https://developer.mozilla.org/en-US/docs/WebAssembly/Reference/Variables/Global_get"

global_set: &global_set
  name: global.set
  bound_vars:
    - name: opname
      type: str
      docs: The name of the activated opcode.
      lifetime: static
      derived_from: "\"global.set\""
    - name: bytecode
      type: u16
      docs: The byte(s) that identify this opcode in the Wasm binary format.
      lifetime: static
      derived_from: 0x0024
    - *category_id_global
    - *category_name_global
    - *arg0_unknown
    - *imm0_u32
  bound_fns: []
  supported_modes: *default_modes

  docs: "https://developer.mozilla.org/en-US/docs/WebAssembly/Reference/Variables/Global_set"

table_get: &table_get
  name: table.get
  bound_vars:
    - name: opname
      type: str
      docs: The name of the activated opcode.
      lifetime: static
      derived_from: "\"table.get\""
    - name: bytecode
      type: u16
      docs: The byte(s) that identify this opcode in the Wasm binary format.
      lifetime: static
      derived_from: 0x0025
    - *category_id_table
    - *category_name_table
    - *imm0_u32
    - *arg0_i32
  bound_fns: []
  supported_modes: *default_modes

  docs: "https://github.com/WebAssembly/reference-types/blob/master/proposals/reference-types/Overview.md"

table_set: &table_set
  name: table.set
  bound_vars:
    - name: opname
      type: str
      docs: The name of the activated opcode.
      lifetime: static
      derived_from: "\"table.set\""
    - name: bytecode
      type: u16
      docs: The byte(s) that identify this opcode in the Wasm binary format.
      lifetime: static
      derived_from: 0x0026
    - *category_id_table
    - *category_name_table
    - *imm0_u32
    - *argN
  bound_fns: []
  supported_modes: *default_modes

  docs: "https://github.com/WebAssembly/reference-types/blob/master/proposals/reference-types/Overview.md"

i32_load: &i32_load
  name: i32.load
  bound_vars:
    - name: opname
      type: str
      docs: The name of the activated opcode.
      lifetime: static
      derived_from: "\"i32.load\""
    - name: bytecode
      type: u16
      docs: The byte(s) that identify this opcode in the Wasm binary format.
      lifetime: static
      derived_from: 0x0028
    - name: data_size
      type: u32
      derived_from: 4
      lifetime: static
      docs: The number of bytes that the memory operation is on, e.g. i32.load8_u is 1
    - name: addr
      type: u32
      derived_from: arg0
      lifetime: dynamic
      docs: The memory address argument passed to the opcode.
    - *category_id_load
    - *category_name_load
    - *arg0_u32
    - *res0_i32
    - *memory
    - *align
    - *effective_addr
    - *is_write_false
    - *offset
  bound_fns: []
  supported_modes: *default_modes

  docs: "https://developer.mozilla.org/en-US/docs/WebAssembly/Reference/Memory/Load"

i64_load: &i64_load
  name: i64.load
  bound_vars:
    - name: opname
      type: str
      docs: The name of the activated opcode.
      lifetime: static
      derived_from: "\"i64.load\""
    - name: bytecode
      type: u16
      docs: The byte(s) that identify this opcode in the Wasm binary format.
      lifetime: static
      derived_from: 0x0029
    - name: data_size
      type: u32
      derived_from: 8
      lifetime: static
      docs: The number of bytes that the memory operation is on, e.g. i32.load8_u is 1
    - name: addr
      type: u32
      derived_from: arg0
      lifetime: dynamic
      docs: The memory address argument passed to the opcode.
    - *category_id_load
    - *category_name_load
    - *arg0_u32
    - *res0_i64
    - *memory
    - *align
    - *effective_addr
    - *is_write_false
    - *offset
  bound_fns: []
  supported_modes: *default_modes

  docs: "https://developer.mozilla.org/en-US/docs/WebAssembly/Reference/Memory/Load"

f32_load: &f32_load
  name: f32.load
  bound_vars:
    - name: opname
      type: str
      docs: The name of the activated opcode.
      lifetime: static
      derived_from: "\"f32.load\""
    - name: bytecode
      type: u16
      docs: The byte(s) that identify this opcode in the Wasm binary format.
      lifetime: static
      derived_from: 0x002A
    - name: data_size
      type: u32
      derived_from: 4
      lifetime: static
      docs: The number of bytes that the memory operation is on, e.g. i32.load8_u is 1
    - name: addr
      type: u32
      derived_from: arg0
      lifetime: dynamic
      docs: The memory address argument passed to the opcode.
    - *category_id_load
    - *category_name_load
    - *arg0_u32
    - *res0_f32
    - *memory
    - *align
    - *effective_addr
    - *is_write_false
    - *offset
  bound_fns: []
  supported_modes: *default_modes

  docs: "https://developer.mozilla.org/en-US/docs/WebAssembly/Reference/Memory/Load"

f64_load: &f64_load
  name: f64.load
  bound_vars:
    - name: opname
      type: str
      docs: The name of the activated opcode.
      lifetime: static
      derived_from: "\"f64.load\""
    - name: bytecode
      type: u16
      docs: The byte(s) that identify this opcode in the Wasm binary format.
      lifetime: static
      derived_from: 0x002B
    - name: data_size
      type: u32
      derived_from: 8
      lifetime: static
      docs: The number of bytes that the memory operation is on, e.g. i32.load8_u is 1
    - name: addr
      type: u32
      derived_from: arg0
      lifetime: dynamic
      docs: The memory address argument passed to the opcode.
    - *category_id_load
    - *category_name_load
    - *arg0_u32
    - *res0_f64
    - *memory
    - *align
    - *effective_addr
    - *is_write_false
    - *offset
  bound_fns: []
  supported_modes: *default_modes

  docs: "https://developer.mozilla.org/en-US/docs/WebAssembly/Reference/Memory/Load"

i32_load8_s: &i32_load8_s
  name: i32.load8_s
  bound_vars:
    - name: opname
      type: str
      docs: The name of the activated opcode.
      lifetime: static
      derived_from: "\"i32.load8_s\""
    - name: bytecode
      type: u16
      docs: The byte(s) that identify this opcode in the Wasm binary format.
      lifetime: static
      derived_from: 0x002C
    - name: data_size
      type: u32
      derived_from: 1
      lifetime: static
      docs: The number of bytes that the memory operation is on, e.g. i32.load8_u is 1
    - name: addr
      type: u32
      derived_from: arg0
      lifetime: dynamic
      docs: The memory address argument passed to the opcode.
    - *category_id_load
    - *category_name_load
    - *arg0_u32
    - *res0_i32
    - *memory
    - *align
    - *effective_addr
    - *is_write_false
    - *offset
  bound_fns: []
  supported_modes: *default_modes

  docs: "https://developer.mozilla.org/en-US/docs/WebAssembly/Reference/Memory/Load"

i32_load8_u: &i32_load8_u
  name: i32.load8_u
  bound_vars:
    - name: opname
      type: str
      docs: The name of the activated opcode.
      lifetime: static
      derived_from: "\"i32.load8_u\""
    - name: bytecode
      type: u16
      docs: The byte(s) that identify this opcode in the Wasm binary format.
      lifetime: static
      derived_from: 0x002D
    - name: data_size
      type: u32
      derived_from: 1
      lifetime: static
      docs: The number of bytes that the memory operation is on, e.g. i32.load8_u is 1
    - name: addr
      type: u32
      derived_from: arg0
      lifetime: dynamic
      docs: The memory address argument passed to the opcode.
    - *category_id_load
    - *category_name_load
    - *arg0_u32
    - *res0_i32
    - *memory
    - *align
    - *effective_addr
    - *is_write_false
    - *offset
  bound_fns: []
  supported_modes: *default_modes

  docs: "https://developer.mozilla.org/en-US/docs/WebAssembly/Reference/Memory/Load"

i32_load16_s: &i32_load16_s
  name: i32.load16_s
  bound_vars:
    - name: opname
      type: str
      docs: The name of the activated opcode.
      lifetime: static
      derived_from: "\"i32.load16_s\""
    - name: bytecode
      type: u16
      docs: The byte(s) that identify this opcode in the Wasm binary format.
      lifetime: static
      derived_from: 0x002E
    - name: data_size
      type: u32
      derived_from: 2
      lifetime: static
      docs: The number of bytes that the memory operation is on, e.g. i32.load8_u is 1
    - name: addr
      type: u32
      derived_from: arg0
      lifetime: dynamic
      docs: The memory address argument passed to the opcode.
    - *category_id_load
    - *category_name_load
    - *arg0_u32
    - *res0_i32
    - *memory
    - *align
    - *effective_addr
    - *is_write_false
    - *offset
  bound_fns: []
  supported_modes: *default_modes

  docs: "https://developer.mozilla.org/en-US/docs/WebAssembly/Reference/Memory/Load"

i32_load16_u: &i32_load16_u
  name: i32.load16_u
  bound_vars:
    - name: opname
      type: str
      docs: The name of the activated opcode.
      lifetime: static
      derived_from: "\"i32.load16_u\""
    - name: bytecode
      type: u16
      docs: The byte(s) that identify this opcode in the Wasm binary format.
      lifetime: static
      derived_from: 0x002F
    - name: data_size
      type: u32
      derived_from: 2
      lifetime: static
      docs: The number of bytes that the memory operation is on, e.g. i32.load8_u is 1
    - name: addr
      type: u32
      derived_from: arg0
      lifetime: dynamic
      docs: The memory address argument passed to the opcode.
    - *category_id_load
    - *category_name_load
    - *arg0_u32
    - *res0_i32
    - *memory
    - *align
    - *effective_addr
    - *is_write_false
    - *offset
  bound_fns: []
  supported_modes: *default_modes

  docs: "https://developer.mozilla.org/en-US/docs/WebAssembly/Reference/Memory/Load"

i64_load8_s: &i64_load8_s
  name: i64.load8_s
  bound_vars:
    - name: opname
      type: str
      docs: The name of the activated opcode.
      lifetime: static
      derived_from: "\"i64.load8_s\""
    - name: bytecode
      type: u16
      docs: The byte(s) that identify this opcode in the Wasm binary format.
      lifetime: static
      derived_from: 0x0030
    - name: data_size
      type: u32
      derived_from: 1
      lifetime: static
      docs: The number of bytes that the memory operation is on, e.g. i32.load8_u is 1
    - name: addr
      type: u32
      derived_from: arg0
      lifetime: dynamic
      docs: The memory address argument passed to the opcode.
    - *category_id_load
    - *category_name_load
    - *arg0_u32
    - *res0_i64
    - *memory
    - *align
    - *effective_addr
    - *is_write_false
    - *offset
  bound_fns: []
  supported_modes: *default_modes

  docs: "https://developer.mozilla.org/en-US/docs/WebAssembly/Reference/Memory/Load"

i64_load8_u: &i64_load8_u
  name: i64.load8_u
  bound_vars:
    - name: opname
      type: str
      docs: The name of the activated opcode.
      lifetime: static
      derived_from: "\"i64.load8_u\""
    - name: bytecode
      type: u16
      docs: The byte(s) that identify this opcode in the Wasm binary format.
      lifetime: static
      derived_from: 0x0031
    - name: data_size
      type: u32
      derived_from: 1
      lifetime: static
      docs: The number of bytes that the memory operation is on, e.g. i32.load8_u is 1
    - name: addr
      type: u32
      derived_from: arg0
      lifetime: dynamic
      docs: The memory address argument passed to the opcode.
    - *category_id_load
    - *category_name_load
    - *arg0_u32
    - *res0_i64
    - *memory
    - *align
    - *effective_addr
    - *is_write_false
    - *offset
  bound_fns: []
  supported_modes: *default_modes

  docs: "https://developer.mozilla.org/en-US/docs/WebAssembly/Reference/Memory/Load"

i64_load16_s: &i64_load16_s
  name: i64.load16_s
  bound_vars:
    - name: opname
      type: str
      docs: The name of the activated opcode.
      lifetime: static
      derived_from: "\"i64.load16_s\""
    - name: bytecode
      type: u16
      docs: The byte(s) that identify this opcode in the Wasm binary format.
      lifetime: static
      derived_from: 0x0032
    - name: data_size
      type: u32
      derived_from: 2
      lifetime: static
      docs: The number of bytes that the memory operation is on, e.g. i32.load8_u is 1
    - name: addr
      type: u32
      derived_from: arg0
      lifetime: dynamic
      docs: The memory address argument passed to the opcode.
    - *category_id_load
    - *category_name_load
    - *arg0_u32
    - *res0_i64
    - *memory
    - *align
    - *effective_addr
    - *is_write_false
    - *offset
  bound_fns: []
  supported_modes: *default_modes

  docs: "https://developer.mozilla.org/en-US/docs/WebAssembly/Reference/Memory/Load"

i64_load16_u: &i64_load16_u
  name: i64.load16_u
  bound_vars:
    - name: opname
      type: str
      docs: The name of the activated opcode.
      lifetime: static
      derived_from: "\"i64.load16_u\""
    - name: bytecode
      type: u16
      docs: The byte(s) that identify this opcode in the Wasm binary format.
      lifetime: static
      derived_from: 0x0033
    - name: data_size
      type: u32
      derived_from: 2
      lifetime: static
      docs: The number of bytes that the memory operation is on, e.g. i32.load8_u is 1
    - name: addr
      type: u32
      derived_from: arg0
      lifetime: dynamic
      docs: The memory address argument passed to the opcode.
    - *category_id_load
    - *category_name_load
    - *arg0_u32
    - *res0_i64
    - *memory
    - *align
    - *effective_addr
    - *is_write_false
    - *offset
  bound_fns: []
  supported_modes: *default_modes

  docs: "https://developer.mozilla.org/en-US/docs/WebAssembly/Reference/Memory/Load"

i64_load32_s: &i64_load32_s
  name: i64.load32_s
  bound_vars:
    - name: opname
      type: str
      docs: The name of the activated opcode.
      lifetime: static
      derived_from: "\"i64.load32_s\""
    - name: bytecode
      type: u16
      docs: The byte(s) that identify this opcode in the Wasm binary format.
      lifetime: static
      derived_from: 0x0034
    - name: data_size
      type: u32
      derived_from: 4
      lifetime: static
      docs: The number of bytes that the memory operation is on, e.g. i32.load8_u is 1
    - name: addr
      type: u32
      derived_from: arg0
      lifetime: dynamic
      docs: The memory address argument passed to the opcode.
    - *category_id_load
    - *category_name_load
    - *arg0_u32
    - *res0_i64
    - *memory
    - *align
    - *effective_addr
    - *is_write_false
    - *offset
  bound_fns: []
  supported_modes: *default_modes

  docs: "https://developer.mozilla.org/en-US/docs/WebAssembly/Reference/Memory/Load"

i64_load32_u: &i64_load32_u
  name: i64.load32_u
  bound_vars:
    - name: opname
      type: str
      docs: The name of the activated opcode.
      lifetime: static
      derived_from: "\"i64.load32_u\""
    - name: bytecode
      type: u16
      docs: The byte(s) that identify this opcode in the Wasm binary format.
      lifetime: static
      derived_from: 0x0035
    - name: data_size
      type: u32
      derived_from: 4
      lifetime: static
      docs: The number of bytes that the memory operation is on, e.g. i32.load8_u is 1
    - name: addr
      type: u32
      derived_from: arg0
      lifetime: dynamic
      docs: The memory address argument passed to the opcode.
    - *category_id_load
    - *category_name_load
    - *arg0_u32
    - *res0_i64
    - *memory
    - *align
    - *effective_addr
    - *is_write_false
    - *offset
  bound_fns: []
  supported_modes: *default_modes

  docs: "https://developer.mozilla.org/en-US/docs/WebAssembly/Reference/Memory/Load"

i32_store: &i32_store
  name: i32.store
  bound_vars:
    - name: opname
      type: str
      docs: The name of the activated opcode.
      lifetime: static
      derived_from: "\"i32.store\""
    - name: bytecode
      type: u16
      docs: The byte(s) that identify this opcode in the Wasm binary format.
      lifetime: static
      derived_from: 0x0036
    - name: data_size
      type: u32
      derived_from: 4
      lifetime: static
      docs: The number of bytes that the memory operation is on, e.g. i32.store8_u is 1
    - name: addr
      type: u32
      derived_from: arg1
      lifetime: dynamic
      docs: The memory address argument passed to the opcode.
    - *category_id_store
    - *category_name_store
    - *arg0_i32
    - *arg1_u32
    - *memory
    - *align
    - *effective_addr
    - *is_write_true
    - *offset
  bound_fns: []
  supported_modes: *default_modes

  docs: "https://developer.mozilla.org/en-US/docs/WebAssembly/Reference/Memory/Store"

i64_store: &i64_store
  name: i64.store
  bound_vars:
    - name: opname
      type: str
      docs: The name of the activated opcode.
      lifetime: static
      derived_from: "\"i64.store\""
    - name: bytecode
      type: u16
      docs: The byte(s) that identify this opcode in the Wasm binary format.
      lifetime: static
      derived_from: 0x0037
    - name: data_size
      type: u32
      derived_from: 8
      lifetime: static
      docs: The number of bytes that the memory operation is on, e.g. i32.store8_u is 1
    - name: addr
      type: u32
      derived_from: arg1
      lifetime: dynamic
      docs: The memory address argument passed to the opcode.
    - *category_id_store
    - *category_name_store
    - *arg0_i64
    - *arg1_u32
    - *memory
    - *align
    - *effective_addr
    - *is_write_true
    - *offset
  bound_fns: []
  supported_modes: *default_modes

  docs: "https://developer.mozilla.org/en-US/docs/WebAssembly/Reference/Memory/Store"

f32_store: &f32_store
  name: f32.store
  bound_vars:
    - name: opname
      type: str
      docs: The name of the activated opcode.
      lifetime: static
      derived_from: "\"f32.store\""
    - name: bytecode
      type: u16
      docs: The byte(s) that identify this opcode in the Wasm binary format.
      lifetime: static
      derived_from: 0x0038
    - name: data_size
      type: u32
      derived_from: 4
      lifetime: static
      docs: The number of bytes that the memory operation is on, e.g. i32.store8_u is 1
    - name: addr
      type: u32
      derived_from: arg1
      lifetime: dynamic
      docs: The memory address argument passed to the opcode.
    - *category_id_store
    - *category_name_store
    - *arg0_f32
    - *arg1_u32
    - *memory
    - *align
    - *effective_addr
    - *is_write_true
    - *offset
  bound_fns: []
  supported_modes: *default_modes

  docs: "https://developer.mozilla.org/en-US/docs/WebAssembly/Reference/Memory/Store"

f64_store: &f64_store
  name: f64.store
  bound_vars:
    - name: opname
      type: str
      docs: The name of the activated opcode.
      lifetime: static
      derived_from: "\"f64.store\""
    - name: bytecode
      type: u16
      docs: The byte(s) that identify this opcode in the Wasm binary format.
      lifetime: static
      derived_from: 0x0039
    - name: data_size
      type: u32
      derived_from: 8
      lifetime: static
      docs: The number of bytes that the memory operation is on, e.g. i32.store8_u is 1
    - name: addr
      type: u32
      derived_from: arg1
      lifetime: dynamic
      docs: The memory address argument passed to the opcode.
    - *category_id_store
    - *category_name_store
    - *arg0_f64
    - *arg1_u32
    - *memory
    - *align
    - *effective_addr
    - *is_write_true
    - *offset
  bound_fns: []
  supported_modes: *default_modes

  docs: "https://developer.mozilla.org/en-US/docs/WebAssembly/Reference/Memory/Store"

i32_store8: &i32_store8
  name: i32.store8
  bound_vars:
    - name: opname
      type: str
      docs: The name of the activated opcode.
      lifetime: static
      derived_from: "\"i32.store8\""
    - name: bytecode
      type: u16
      docs: The byte(s) that identify this opcode in the Wasm binary format.
      lifetime: static
      derived_from: 0x003A
    - name: data_size
      type: u32
      derived_from: 1
      lifetime: static
      docs: The number of bytes that the memory operation is on, e.g. i32.store8_u is 1
    - name: addr
      type: u32
      derived_from: arg1
      lifetime: dynamic
      docs: The memory address argument passed to the opcode.
    - *category_id_store
    - *category_name_store
    - *arg0_i32
    - *arg1_u32
    - *memory
    - *align
    - *effective_addr
    - *is_write_true
    - *offset
  bound_fns: []
  supported_modes: *default_modes

  docs: "https://developer.mozilla.org/en-US/docs/WebAssembly/Reference/Memory/Store"

i32_store16: &i32_store16
  name: i32.store16
  bound_vars:
    - name: opname
      type: str
      docs: The name of the activated opcode.
      lifetime: static
      derived_from: "\"i32.store16\""
    - name: bytecode
      type: u16
      docs: The byte(s) that identify this opcode in the Wasm binary format.
      lifetime: static
      derived_from: 0x003B
    - name: data_size
      type: u32
      derived_from: 2
      lifetime: static
      docs: The number of bytes that the memory operation is on, e.g. i32.store8_u is 1
    - name: addr
      type: u32
      derived_from: arg1
      lifetime: dynamic
      docs: The memory address argument passed to the opcode.
    - *category_id_store
    - *category_name_store
    - *arg0_i32
    - *arg1_u32
    - *memory
    - *align
    - *effective_addr
    - *is_write_true
    - *offset
  bound_fns: []
  supported_modes: *default_modes

  docs: "https://developer.mozilla.org/en-US/docs/WebAssembly/Reference/Memory/Store"

i64_store8: &i64_store8
  name: i64.store8
  bound_vars:
    - name: opname
      type: str
      docs: The name of the activated opcode.
      lifetime: static
      derived_from: "\"i64.store8\""
    - name: bytecode
      type: u16
      docs: The byte(s) that identify this opcode in the Wasm binary format.
      lifetime: static
      derived_from: 0x003C
    - name: data_size
      type: u32
      derived_from: 1
      lifetime: static
      docs: The number of bytes that the memory operation is on, e.g. i32.store8_u is 1
    - name: addr
      type: u32
      derived_from: arg1
      lifetime: dynamic
      docs: The memory address argument passed to the opcode.
    - *category_id_store
    - *category_name_store
    - *arg0_i64
    - *arg1_u32
    - *memory
    - *align
    - *effective_addr
    - *is_write_true
    - *offset
  bound_fns: []
  supported_modes: *default_modes

  docs: "https://developer.mozilla.org/en-US/docs/WebAssembly/Reference/Memory/Store"


i64_store16: &i64_store16
  name: i64.store16
  bound_vars:
    - name: opname
      type: str
      docs: The name of the activated opcode.
      lifetime: static
      derived_from: "\"i64.store16\""
    - name: bytecode
      type: u16
      docs: The byte(s) that identify this opcode in the Wasm binary format.
      lifetime: static
      derived_from: 0x003D
    - name: data_size
      type: u32
      derived_from: 2
      lifetime: static
      docs: The number of bytes that the memory operation is on, e.g. i32.store8_u is 1
    - name: addr
      type: u32
      derived_from: arg1
      lifetime: dynamic
      docs: The memory address argument passed to the opcode.
    - *category_id_store
    - *category_name_store
    - *arg0_i64
    - *arg1_u32
    - *memory
    - *align
    - *effective_addr
    - *is_write_true
    - *offset
  bound_fns: []
  supported_modes: *default_modes

  docs: "https://developer.mozilla.org/en-US/docs/WebAssembly/Reference/Memory/Store"

i64_store32: &i64_store32
  name: i64.store32
  bound_vars:
    - name: opname
      type: str
      docs: The name of the activated opcode.
      lifetime: static
      derived_from: "\"i64.store32\""
    - name: bytecode
      type: u16
      docs: The byte(s) that identify this opcode in the Wasm binary format.
      lifetime: static
      derived_from: 0x003E
    - name: data_size
      type: u32
      derived_from: 4
      lifetime: static
      docs: The number of bytes that the memory operation is on, e.g. i32.store8_u is 1
    - name: addr
      type: u32
      derived_from: arg1
      lifetime: dynamic
      docs: The memory address argument passed to the opcode.
    - *category_id_store
    - *category_name_store
    - *arg0_i64
    - *arg1_u32
    - *memory
    - *align
    - *effective_addr
    - *is_write_true
    - *offset
  bound_fns: []
  supported_modes: *default_modes

  docs: "https://developer.mozilla.org/en-US/docs/WebAssembly/Reference/Memory/Store"

memory_size: &memory_size
  name: memory.size
  bound_vars:
    - name: opname
      type: str
      docs: The name of the activated opcode.
      lifetime: static
      derived_from: "\"memory.size\""
    - name: bytecode
      type: u16
      docs: The byte(s) that identify this opcode in the Wasm binary format.
      lifetime: static
      derived_from: 0x003F
    - *category_id_memory
    - *category_name_memory
    - *imm0_u32
  bound_fns: []
  supported_modes: *default_modes

  docs: "https://developer.mozilla.org/en-US/docs/WebAssembly/Reference/Memory/Size"

memory_grow: &memory_grow
  name: memory.grow
  bound_vars:
    - name: opname
      type: str
      docs: The name of the activated opcode.
      lifetime: static
      derived_from: "\"memory.grow\""
    - name: bytecode
      type: u16
      docs: The byte(s) that identify this opcode in the Wasm binary format.
      lifetime: static
      derived_from: 0x0040
    - *category_id_memory
    - *category_name_memory
    - *arg0_u32
    - *imm0_u32
  bound_fns: []
  supported_modes: *default_modes

  docs: "https://developer.mozilla.org/en-US/docs/WebAssembly/Reference/Memory/Grow"

i32_const: &i32_const
  name: i32.const
  bound_vars:
    - name: opname
      type: str
      docs: The name of the activated opcode.
      lifetime: static
      derived_from: "\"i32.const\""
    - name: bytecode
      type: u16
      docs: The byte(s) that identify this opcode in the Wasm binary format.
      lifetime: static
      derived_from: 0x0041
    - *category_id_const
    - *category_name_const
    - *imm0_i32
  bound_fns: []
  supported_modes: *default_modes

  docs: "https://developer.mozilla.org/en-US/docs/WebAssembly/Reference/Numeric/Const"

i64_const: &i64_const
  name: i64.const
  bound_vars:
    - name: opname
      type: str
      docs: The name of the activated opcode.
      lifetime: static
      derived_from: "\"i64.const\""
    - name: bytecode
      type: u16
      docs: The byte(s) that identify this opcode in the Wasm binary format.
      lifetime: static
      derived_from: 0x0042
    - *category_id_const
    - *category_name_const
    - *imm0_i64
  bound_fns: []
  supported_modes: *default_modes

  docs: "https://developer.mozilla.org/en-US/docs/WebAssembly/Reference/Numeric/Const"

f32_const: &f32_const
  name: f32.const
  bound_vars:
    - name: opname
      type: str
      docs: The name of the activated opcode.
      lifetime: static
      derived_from: "\"f32.const\""
    - name: bytecode
      type: u16
      docs: The byte(s) that identify this opcode in the Wasm binary format.
      lifetime: static
      derived_from: 0x0043
    - *category_id_const
    - *category_name_const
    - *imm0_f32
  bound_fns: []
  supported_modes: *default_modes

  docs: "https://developer.mozilla.org/en-US/docs/WebAssembly/Reference/Numeric/Const"

f64_const: &f64_const
  name: f64.const
  bound_vars:
    - name: opname
      type: str
      docs: The name of the activated opcode.
      lifetime: static
      derived_from: "\"f64.const\""
    - name: bytecode
      type: u16
      docs: The byte(s) that identify this opcode in the Wasm binary format.
      lifetime: static
      derived_from: 0x0044
    - *category_id_const
    - *category_name_const
    - *imm0_f64
  bound_fns: []
  supported_modes: *default_modes

  docs: "https://developer.mozilla.org/en-US/docs/WebAssembly/Reference/Numeric/Const"

#TODO: comparisons are next (by bytecode)

i32_eqz: &i32_eqz
  name: i32.eqz
  bound_vars:
    - name: opname
      type: str
      docs: The name of the activated opcode.
      lifetime: static
      derived_from: "\"i32.eqz\""
    - name: bytecode
      type: u16
      docs: The byte(s) that identify this opcode in the Wasm binary format.
      lifetime: static
      derived_from: 0x0045
    - *category_id_compare
    - *category_name_compare
    - *arg0_i32
  bound_fns: []
  supported_modes: *default_modes

  docs: "https://developer.mozilla.org/en-US/docs/WebAssembly/Reference/Numeric/Equal"

i32_eq: &i32_eq
  name: i32.eq
  bound_vars:
    - name: opname
      type: str
      docs: The name of the activated opcode.
      lifetime: static
      derived_from: "\"i32.eq\""
    - name: bytecode
      type: u16
      docs: The byte(s) that identify this opcode in the Wasm binary format.
      lifetime: static
      derived_from: 0x0046
    - *category_id_compare
    - *category_name_compare
    - *arg0_i32
    - *arg1_i32
  bound_fns: []
  supported_modes: *default_modes

  docs: "https://developer.mozilla.org/en-US/docs/WebAssembly/Reference/Numeric/Equal"

i32_ne: &i32_ne
  name: i32.ne
  bound_vars:
    - name: opname
      type: str
      docs: The name of the activated opcode.
      lifetime: static
      derived_from: "\"i32.ne\""
    - name: bytecode
      type: u16
      docs: The byte(s) that identify this opcode in the Wasm binary format.
      lifetime: static
      derived_from: 0x0047
    - *category_id_compare
    - *category_name_compare
    - *arg0_i32
    - *arg1_i32
  bound_fns: []
  supported_modes: *default_modes

  docs: "https://developer.mozilla.org/en-US/docs/WebAssembly/Reference/Numeric/Not_equal"

i32_lt_s: &i32_lt_s
  name: i32.lt_s
  bound_vars:
    - name: opname
      type: str
      docs: The name of the activated opcode.
      lifetime: static
      derived_from: "\"i32.lt_s\""
    - name: bytecode
      type: u16
      docs: The byte(s) that identify this opcode in the Wasm binary format.
      lifetime: static
      derived_from: 0x0048
    - *category_id_compare
    - *category_name_compare
    - *arg0_i32
    - *arg1_i32
  bound_fns: []
  supported_modes: *default_modes

  docs: "https://developer.mozilla.org/en-US/docs/WebAssembly/Reference/Numeric/Less_than"

i32_lt_u: &i32_lt_u
  name: i32.lt_u
  bound_vars:
    - name: opname
      type: str
      docs: The name of the activated opcode.
      lifetime: static
      derived_from: "\"i32.lt_u\""
    - name: bytecode
      type: u16
      docs: The byte(s) that identify this opcode in the Wasm binary format.
      lifetime: static
      derived_from: 0x0049
    - *category_id_compare
    - *category_name_compare
    - *arg0_u32
    - *arg1_u32
  bound_fns: []
  supported_modes: *default_modes

  docs: "https://developer.mozilla.org/en-US/docs/WebAssembly/Reference/Numeric/Less_than"

i32_gt_s: &i32_gt_s
  name: i32.gt_s
  bound_vars:
    - name: opname
      type: str
      docs: The name of the activated opcode.
      lifetime: static
      derived_from: "\"i32.gt_s\""
    - name: bytecode
      type: u16
      docs: The byte(s) that identify this opcode in the Wasm binary format.
      lifetime: static
      derived_from: 0x004A
    - *category_id_compare
    - *category_name_compare
    - *arg0_i32
    - *arg1_i32
  bound_fns: []
  supported_modes: *default_modes

  docs: "https://developer.mozilla.org/en-US/docs/WebAssembly/Reference/Numeric/Greater_than"

i32_gt_u: &i32_gt_u
  name: i32.gt_u
  bound_vars:
    - name: opname
      type: str
      docs: The name of the activated opcode.
      lifetime: static
      derived_from: "\"i32.gt_u\""
    - name: bytecode
      type: u16
      docs: The byte(s) that identify this opcode in the Wasm binary format.
      lifetime: static
      derived_from: 0x004B
    - *category_id_compare
    - *category_name_compare
    - *arg0_u32
    - *arg1_u32
  bound_fns: []
  supported_modes: *default_modes

  docs: "https://developer.mozilla.org/en-US/docs/WebAssembly/Reference/Numeric/Greater_than"

i32_le_s: &i32_le_s
  name: i32.le_s
  bound_vars:
    - name: opname
      type: str
      docs: The name of the activated opcode.
      lifetime: static
      derived_from: "\"i32.le_s\""
    - name: bytecode
      type: u16
      docs: The byte(s) that identify this opcode in the Wasm binary format.
      lifetime: static
      derived_from: 0x004C
    - *category_id_compare
    - *category_name_compare
    - *arg0_i32
    - *arg1_i32
  bound_fns: []
  supported_modes: *default_modes

  docs: "https://developer.mozilla.org/en-US/docs/WebAssembly/Reference/Numeric/Less_or_equal"

i32_le_u: &i32_le_u
  name: i32.le_u
  bound_vars:
    - name: opname
      type: str
      docs: The name of the activated opcode.
      lifetime: static
      derived_from: "\"i32.le_u\""
    - name: bytecode
      type: u16
      docs: The byte(s) that identify this opcode in the Wasm binary format.
      lifetime: static
      derived_from: 0x004D
    - *category_id_compare
    - *category_name_compare
    - *arg0_u32
    - *arg1_u32
  bound_fns: []
  supported_modes: *default_modes

  docs: "https://developer.mozilla.org/en-US/docs/WebAssembly/Reference/Numeric/Less_or_equal"

i32_ge_s: &i32_ge_s
  name: i32.ge_s
  bound_vars:
    - name: opname
      type: str
      docs: The name of the activated opcode.
      lifetime: static
      derived_from: "\"i32.ge_s\""
    - name: bytecode
      type: u16
      docs: The byte(s) that identify this opcode in the Wasm binary format.
      lifetime: static
      derived_from: 0x004E
    - *category_id_compare
    - *category_name_compare
    - *arg0_i32
    - *arg1_i32
  bound_fns: []
  supported_modes: *default_modes

  docs: "https://developer.mozilla.org/en-US/docs/WebAssembly/Reference/Numeric/Greater_or_equal"

i32_ge_u: &i32_ge_u
  name: i32.ge_u
  bound_vars:
    - name: opname
      type: str
      docs: The name of the activated opcode.
      lifetime: static
      derived_from: "\"i32.ge_u\""
    - name: bytecode
      type: u16
      docs: The byte(s) that identify this opcode in the Wasm binary format.
      lifetime: static
      derived_from: 0x004F
    - *category_id_compare
    - *category_name_compare
    - *arg0_u32
    - *arg1_u32
  bound_fns: []
  supported_modes: *default_modes

  docs: "https://developer.mozilla.org/en-US/docs/WebAssembly/Reference/Numeric/Greater_or_equal"

i64_eqz: &i64_eqz
  name: i64.eqz
  bound_vars:
    - name: opname
      type: str
      docs: The name of the activated opcode.
      lifetime: static
      derived_from: "\"i64.eqz\""
    - name: bytecode
      type: u16
      docs: The byte(s) that identify this opcode in the Wasm binary format.
      lifetime: static
      derived_from: 0x0050
    - *category_id_compare
    - *category_name_compare
    - *arg0_i64
  bound_fns: []
  supported_modes: *default_modes

  docs: "https://developer.mozilla.org/en-US/docs/WebAssembly/Reference/Numeric/Equal"

i64_eq: &i64_eq
  name: i64.eq
  bound_vars:
    - name: opname
      type: str
      docs: The name of the activated opcode.
      lifetime: static
      derived_from: "\"i64.eq\""
    - name: bytecode
      type: u16
      docs: The byte(s) that identify this opcode in the Wasm binary format.
      lifetime: static
      derived_from: 0x0051
    - *category_id_compare
    - *category_name_compare
    - *arg0_i64
  bound_fns: []
  supported_modes: *default_modes

  docs: "https://developer.mozilla.org/en-US/docs/WebAssembly/Reference/Numeric/Equal"

i64_ne: &i64_ne
  name: i64.ne
  bound_vars:
    - name: opname
      type: str
      docs: The name of the activated opcode.
      lifetime: static
      derived_from: "\"i64.ne\""
    - name: bytecode
      type: u16
      docs: The byte(s) that identify this opcode in the Wasm binary format.
      lifetime: static
      derived_from: 0x0052
    - *category_id_compare
    - *category_name_compare
    - *arg0_i64
    - *arg1_i64
  bound_fns: []
  supported_modes: *default_modes

  docs: "https://developer.mozilla.org/en-US/docs/WebAssembly/Reference/Numeric/Not_equal"

i64_lt_s: &i64_lt_s
  name: i64.lt_s
  bound_vars:
    - name: opname
      type: str
      docs: The name of the activated opcode.
      lifetime: static
      derived_from: "\"i64.lt_s\""
    - name: bytecode
      type: u16
      docs: The byte(s) that identify this opcode in the Wasm binary format.
      lifetime: static
      derived_from: 0x0053
    - *category_id_compare
    - *category_name_compare
    - *arg0_i64
    - *arg1_i64
  bound_fns: []
  supported_modes: *default_modes

  docs: "https://developer.mozilla.org/en-US/docs/WebAssembly/Reference/Numeric/Less_than"

i64_lt_u: &i64_lt_u
  name: i64.lt_u
  bound_vars:
    - name: opname
      type: str
      docs: The name of the activated opcode.
      lifetime: static
      derived_from: "\"i64.lt_u\""
    - name: bytecode
      type: u16
      docs: The byte(s) that identify this opcode in the Wasm binary format.
      lifetime: static
      derived_from: 0x0054
    - *category_id_compare
    - *category_name_compare
    - *arg0_u64
    - *arg1_u64
  bound_fns: []
  supported_modes: *default_modes

  docs: "https://developer.mozilla.org/en-US/docs/WebAssembly/Reference/Numeric/Less_than"

i64_gt_s: &i64_gt_s
  name: i64.gt_s
  bound_vars:
    - name: opname
      type: str
      docs: The name of the activated opcode.
      lifetime: static
      derived_from: "\"i64.gt_s\""
    - name: bytecode
      type: u16
      docs: The byte(s) that identify this opcode in the Wasm binary format.
      lifetime: static
      derived_from: 0x0055
    - *category_id_compare
    - *category_name_compare
    - *arg0_i64
    - *arg1_i64
  bound_fns: []
  supported_modes: *default_modes

  docs: "https://developer.mozilla.org/en-US/docs/WebAssembly/Reference/Numeric/Greater_than"

i64_gt_u: &i64_gt_u
  name: i64.gt_u
  bound_vars:
    - name: opname
      type: str
      docs: The name of the activated opcode.
      lifetime: static
      derived_from: "\"i64.gt_u\""
    - name: bytecode
      type: u16
      docs: The byte(s) that identify this opcode in the Wasm binary format.
      lifetime: static
      derived_from: 0x0056
    - *category_id_compare
    - *category_name_compare
    - *arg0_u64
    - *arg1_u64
  bound_fns: []
  supported_modes: *default_modes

  docs: "https://developer.mozilla.org/en-US/docs/WebAssembly/Reference/Numeric/Greater_than"

i64_le_s: &i64_le_s
  name: i64.le_s
  bound_vars:
    - name: opname
      type: str
      docs: The name of the activated opcode.
      lifetime: static
      derived_from: "\"i64.le_s\""
    - name: bytecode
      type: u16
      docs: The byte(s) that identify this opcode in the Wasm binary format.
      lifetime: static
      derived_from: 0x0057
    - *category_id_compare
    - *category_name_compare
    - *arg0_i64
    - *arg1_i64
  bound_fns: []
  supported_modes: *default_modes

  docs: "https://developer.mozilla.org/en-US/docs/WebAssembly/Reference/Numeric/Less_or_equal"

i64_le_u: &i64_le_u
  name: i64.le_u
  bound_vars:
    - name: opname
      type: str
      docs: The name of the activated opcode.
      lifetime: static
      derived_from: "\"i64.le_u\""
    - name: bytecode
      type: u16
      docs: The byte(s) that identify this opcode in the Wasm binary format.
      lifetime: static
      derived_from: 0x0058
    - *category_id_compare
    - *category_name_compare
    - *arg0_u64
    - *arg1_u64
  bound_fns: []
  supported_modes: *default_modes

  docs: "https://developer.mozilla.org/en-US/docs/WebAssembly/Reference/Numeric/Less_or_equal"

i64_ge_s: &i64_ge_s
  name: i64.ge_s
  bound_vars:
    - name: opname
      type: str
      docs: The name of the activated opcode.
      lifetime: static
      derived_from: "\"i64.ge_s\""
    - name: bytecode
      type: u16
      docs: The byte(s) that identify this opcode in the Wasm binary format.
      lifetime: static
      derived_from: 0x0059
    - *category_id_compare
    - *category_name_compare
    - *arg0_i64
    - *arg1_i64
  bound_fns: []
  supported_modes: *default_modes

  docs: "https://developer.mozilla.org/en-US/docs/WebAssembly/Reference/Numeric/Greater_or_equal"

i64_ge_u: &i64_ge_u
  name: i64.ge_u
  bound_vars:
    - name: opname
      type: str
      docs: The name of the activated opcode.
      lifetime: static
      derived_from: "\"i64.ge_u\""
    - name: bytecode
      type: u16
      docs: The byte(s) that identify this opcode in the Wasm binary format.
      lifetime: static
      derived_from: 0x005A
    - *category_id_compare
    - *category_name_compare
    - *arg0_u64
    - *arg1_u64
  bound_fns: []
  supported_modes: *default_modes

  docs: "https://developer.mozilla.org/en-US/docs/WebAssembly/Reference/Numeric/Greater_or_equal"

f32_eq: &f32_eq
  name: f32.eq
  bound_vars:
    - name: opname
      type: str
      docs: The name of the activated opcode.
      lifetime: static
      derived_from: "\"f32.eq\""
    - name: bytecode
      type: u16
      docs: The byte(s) that identify this opcode in the Wasm binary format.
      lifetime: static
      derived_from: 0x005B
    - *category_id_compare
    - *category_name_compare
    - *arg0_f32
    - *arg1_f32
  bound_fns: []
  supported_modes: *default_modes

  docs: "https://developer.mozilla.org/en-US/docs/WebAssembly/Reference/Numeric/Equal"

f32_ne: &f32_ne
  name: f32.ne
  bound_vars:
    - name: opname
      type: str
      docs: The name of the activated opcode.
      lifetime: static
      derived_from: "\"f32.ne\""
    - name: bytecode
      type: u16
      docs: The byte(s) that identify this opcode in the Wasm binary format.
      lifetime: static
      derived_from: 0x005C
    - *category_id_compare
    - *category_name_compare
    - *arg0_f32
    - *arg1_f32
  bound_fns: []
  supported_modes: *default_modes

  docs: "https://developer.mozilla.org/en-US/docs/WebAssembly/Reference/Numeric/Not_equal"

f32_lt: &f32_lt
  name: f32.lt
  bound_vars:
    - name: opname
      type: str
      docs: The name of the activated opcode.
      lifetime: static
      derived_from: "\"f32.lt\""
    - name: bytecode
      type: u16
      docs: The byte(s) that identify this opcode in the Wasm binary format.
      lifetime: static
      derived_from: 0x005D
    - *category_id_compare
    - *category_name_compare
    - *arg0_f32
    - *arg1_f32
  bound_fns: []
  supported_modes: *default_modes

  docs: "https://developer.mozilla.org/en-US/docs/WebAssembly/Reference/Numeric/Less_than"

f32_gt: &f32_gt
  name: f32.gt
  bound_vars:
    - name: opname
      type: str
      docs: The name of the activated opcode.
      lifetime: static
      derived_from: "\"f32.gt\""
    - name: bytecode
      type: u16
      docs: The byte(s) that identify this opcode in the Wasm binary format.
      lifetime: static
      derived_from: 0x005E
    - *category_id_compare
    - *category_name_compare
    - *arg0_f32
    - *arg1_f32
  bound_fns: []
  supported_modes: *default_modes

  docs: "https://developer.mozilla.org/en-US/docs/WebAssembly/Reference/Numeric/Greater_than"

f32_le: &f32_le
  name: f32.le
  bound_vars:
    - name: opname
      type: str
      docs: The name of the activated opcode.
      lifetime: static
      derived_from: "\"f32.le\""
    - name: bytecode
      type: u16
      docs: The byte(s) that identify this opcode in the Wasm binary format.
      lifetime: static
      derived_from: 0x005F
    - *category_id_compare
    - *category_name_compare
    - *arg0_f32
    - *arg1_f32
  bound_fns: []
  supported_modes: *default_modes

  docs: "https://developer.mozilla.org/en-US/docs/WebAssembly/Reference/Numeric/Less_or_equal"

f32_ge: &f32_ge
  name: f32.ge
  bound_vars:
    - name: opname
      type: str
      docs: The name of the activated opcode.
      lifetime: static
      derived_from: "\"f32.ge\""
    - name: bytecode
      type: u16
      docs: The byte(s) that identify this opcode in the Wasm binary format.
      lifetime: static
      derived_from: 0x0060
    - *category_id_compare
    - *category_name_compare
    - *arg0_f32
    - *arg1_f32
  bound_fns: []
  supported_modes: *default_modes

  docs: "https://developer.mozilla.org/en-US/docs/WebAssembly/Reference/Numeric/Greater_or_equal"

f64_eq: &f64_eq
  name: f64.eq
  bound_vars:
    - name: opname
      type: str
      docs: The name of the activated opcode.
      lifetime: static
      derived_from: "\"f64.eq\""
    - name: bytecode
      type: u16
      docs: The byte(s) that identify this opcode in the Wasm binary format.
      lifetime: static
      derived_from: 0x0061
    - *category_id_compare
    - *category_name_compare
    - *arg0_f64
    - *arg1_f64
  bound_fns: []
  supported_modes: *default_modes

  docs: "https://developer.mozilla.org/en-US/docs/WebAssembly/Reference/Numeric/Equal"

f64_ne: &f64_ne
  name: f64.ne
  bound_vars:
    - name: opname
      type: str
      docs: The name of the activated opcode.
      lifetime: static
      derived_from: "\"f64.ne\""
    - name: bytecode
      type: u16
      docs: The byte(s) that identify this opcode in the Wasm binary format.
      lifetime: static
      derived_from: 0x0062
    - *category_id_compare
    - *category_name_compare
    - *arg0_f64
    - *arg1_f64
  bound_fns: []
  supported_modes: *default_modes

  docs: "https://developer.mozilla.org/en-US/docs/WebAssembly/Reference/Numeric/Not_equal"

f64_lt: &f64_lt
  name: f64.lt
  bound_vars:
    - name: opname
      type: str
      docs: The name of the activated opcode.
      lifetime: static
      derived_from: "\"f64.lt\""
    - name: bytecode
      type: u16
      docs: The byte(s) that identify this opcode in the Wasm binary format.
      lifetime: static
      derived_from: 0x0063
    - *category_id_compare
    - *category_name_compare
    - *arg0_f64
    - *arg1_f64
  bound_fns: []
  supported_modes: *default_modes

  docs: "https://developer.mozilla.org/en-US/docs/WebAssembly/Reference/Numeric/Less_than"

f64_gt: &f64_gt
  name: f64.gt
  bound_vars:
    - name: opname
      type: str
      docs: The name of the activated opcode.
      lifetime: static
      derived_from: "\"f64.gt\""
    - name: bytecode
      type: u16
      docs: The byte(s) that identify this opcode in the Wasm binary format.
      lifetime: static
      derived_from: 0x0064
    - *category_id_compare
    - *category_name_compare
    - *arg0_f64
    - *arg1_f64
  bound_fns: []
  supported_modes: *default_modes

  docs: "https://developer.mozilla.org/en-US/docs/WebAssembly/Reference/Numeric/Greater_than"

f64_le: &f64_le
  name: f64.le
  bound_vars:
    - name: opname
      type: str
      docs: The name of the activated opcode.
      lifetime: static
      derived_from: "\"f64.le\""
    - name: bytecode
      type: u16
      docs: The byte(s) that identify this opcode in the Wasm binary format.
      lifetime: static
      derived_from: 0x0065
    - *category_id_compare
    - *category_name_compare
    - *arg0_f64
    - *arg1_f64
  bound_fns: []
  supported_modes: *default_modes

  docs: "https://developer.mozilla.org/en-US/docs/WebAssembly/Reference/Numeric/Less_or_equal"

f64_ge: &f64_ge
  name: f64.ge
  bound_vars:
    - name: opname
      type: str
      docs: The name of the activated opcode.
      lifetime: static
      derived_from: "\"f64.ge\""
    - name: bytecode
      type: u16
      docs: The byte(s) that identify this opcode in the Wasm binary format.
      lifetime: static
      derived_from: 0x0066
    - *category_id_compare
    - *category_name_compare
    - *arg0_f64
    - *arg1_f64
  bound_fns: []
  supported_modes: *default_modes

  docs: "https://developer.mozilla.org/en-US/docs/WebAssembly/Reference/Numeric/Greater_or_equal"

i32_clz: &i32_clz
  name: i32.clz
  bound_vars:
    - name: opname
      type: str
      docs: The name of the activated opcode.
      lifetime: static
      derived_from: "\"i32.clz\""
    - name: bytecode
      type: u16
      docs: The byte(s) that identify this opcode in the Wasm binary format.
      lifetime: static
      derived_from: 0x0067
    - *category_id_arith
    - *category_name_arith
    - *arg0_i32
  bound_fns: []
  supported_modes: *default_modes

  docs: "https://developer.mozilla.org/en-US/docs/WebAssembly/Reference/Numeric/Count_leading_zeros"

i32_ctz: &i32_ctz
  name: i32.ctz
  bound_vars:
    - name: opname
      type: str
      docs: The name of the activated opcode.
      lifetime: static
      derived_from: "\"i32.ctz\""
    - name: bytecode
      type: u16
      docs: The byte(s) that identify this opcode in the Wasm binary format.
      lifetime: static
      derived_from: 0x0068
    - *category_id_arith
    - *category_name_arith
    - *arg0_i32
  bound_fns: []
  supported_modes: *default_modes

  docs: "https://developer.mozilla.org/en-US/docs/WebAssembly/Reference/Numeric/Count_trailing_zeros"

i32_popcnt: &i32_popcnt
  name: i32.popcnt
  bound_vars:
    - name: opname
      type: str
      docs: The name of the activated opcode.
      lifetime: static
      derived_from: "\"i32.popcnt\""
    - name: bytecode
      type: u16
      docs: The byte(s) that identify this opcode in the Wasm binary format.
      lifetime: static
      derived_from: 0x0069
    - *category_id_arith
    - *category_name_arith
    - *arg0_i32
  bound_fns: []
  supported_modes: *default_modes

  docs: "https://developer.mozilla.org/en-US/docs/WebAssembly/Reference/Numeric/Population_count"

i32_add: &i32_add
  name: i32.add
  bound_vars:
    - name: opname
      type: str
      docs: The name of the activated opcode.
      lifetime: static
      derived_from: "\"i32.add\""
    - name: bytecode
      type: u16
      docs: The byte(s) that identify this opcode in the Wasm binary format.
      lifetime: static
      derived_from: 0x006A
    - *category_id_arith
    - *category_name_arith
    - *arg0_i32
    - *arg1_i32
  bound_fns: []
  supported_modes: *default_modes

  docs: "https://developer.mozilla.org/en-US/docs/WebAssembly/Reference/Numeric/Addition"

i32_sub: &i32_sub
  name: i32.sub
  bound_vars:
    - name: opname
      type: str
      docs: The name of the activated opcode.
      lifetime: static
      derived_from: "\"i32.sub\""
    - name: bytecode
      type: u16
      docs: The byte(s) that identify this opcode in the Wasm binary format.
      lifetime: static
      derived_from: 0x006B
    - *category_id_arith
    - *category_name_arith
    - *arg0_i32
    - *arg1_i32
  bound_fns: []
  supported_modes: *default_modes

  docs: "https://developer.mozilla.org/en-US/docs/WebAssembly/Reference/Numeric/Subtraction"

i32_mul: &i32_mul
  name: i32.mul
  bound_vars:
    - name: opname
      type: str
      docs: The name of the activated opcode.
      lifetime: static
      derived_from: "\"i32.mul\""
    - name: bytecode
      type: u16
      docs: The byte(s) that identify this opcode in the Wasm binary format.
      lifetime: static
      derived_from: 0x006C
    - *category_id_arith
    - *category_name_arith
    - *arg0_i32
    - *arg1_i32
  bound_fns: []
  supported_modes: *default_modes

  docs: "https://developer.mozilla.org/en-US/docs/WebAssembly/Reference/Numeric/Multiplication"

i32_div_s: &i32_div_s
  name: i32.div_s
  bound_vars:
    - name: opname
      type: str
      docs: The name of the activated opcode.
      lifetime: static
      derived_from: "\"i32.div_s\""
    - name: bytecode
      type: u16
      docs: The byte(s) that identify this opcode in the Wasm binary format.
      lifetime: static
      derived_from: 0x006D
    - *category_id_arith
    - *category_name_arith
    - *arg0_i32
    - *arg1_i32
  bound_fns: []
  supported_modes: *default_modes

  docs: "https://developer.mozilla.org/en-US/docs/WebAssembly/Reference/Numeric/Division"

i32_div_u: &i32_div_u
  name: i32.div_u
  bound_vars:
    - name: opname
      type: str
      docs: The name of the activated opcode.
      lifetime: static
      derived_from: "\"i32.div_u\""
    - name: bytecode
      type: u16
      docs: The byte(s) that identify this opcode in the Wasm binary format.
      lifetime: static
      derived_from: 0x006E
    - *category_id_arith
    - *category_name_arith
    - *arg0_u32
    - *arg1_u32
  bound_fns: []
  supported_modes: *default_modes

  docs: "https://developer.mozilla.org/en-US/docs/WebAssembly/Reference/Numeric/Division"

i32_rem_s: &i32_rem_s
  name: i32.rem_s
  bound_vars:
    - name: opname
      type: str
      docs: The name of the activated opcode.
      lifetime: static
      derived_from: "\"i32.rem_s\""
    - name: bytecode
      type: u16
      docs: The byte(s) that identify this opcode in the Wasm binary format.
      lifetime: static
      derived_from: 0x006F
    - *category_id_arith
    - *category_name_arith
    - *arg0_i32
    - *arg1_i32
  bound_fns: []
  supported_modes: *default_modes

  docs: "https://developer.mozilla.org/en-US/docs/WebAssembly/Reference/Numeric/Remainder"

i32_rem_u: &i32_rem_u
  name: i32.rem_u
  bound_vars:
    - name: opname
      type: str
      docs: The name of the activated opcode.
      lifetime: static
      derived_from: "\"i32.rem_u\""
    - name: bytecode
      type: u16
      docs: The byte(s) that identify this opcode in the Wasm binary format.
      lifetime: static
      derived_from: 0x0070
    - *category_id_arith
    - *category_name_arith
    - *arg0_u32
    - *arg1_u32
  bound_fns: []
  supported_modes: *default_modes

  docs: "https://developer.mozilla.org/en-US/docs/WebAssembly/Reference/Numeric/Remainder"

i32_and: &i32_and
  name: i32.and
  bound_vars:
    - name: opname
      type: str
      docs: The name of the activated opcode.
      lifetime: static
      derived_from: "\"i32.and\""
    - name: bytecode
      type: u16
      docs: The byte(s) that identify this opcode in the Wasm binary format.
      lifetime: static
      derived_from: 0x0071
    - *category_id_arith
    - *category_name_arith
    - *arg0_i32
    - *arg1_i32
  bound_fns: []
  supported_modes: *default_modes

  docs: "https://developer.mozilla.org/en-US/docs/WebAssembly/Reference/Numeric/AND"

i32_or: &i32_or
  name: i32.or
  bound_vars:
    - name: opname
      type: str
      docs: The name of the activated opcode.
      lifetime: static
      derived_from: "\"i32.or\""
    - name: bytecode
      type: u16
      docs: The byte(s) that identify this opcode in the Wasm binary format.
      lifetime: static
      derived_from: 0x0072
    - *category_id_arith
    - *category_name_arith
    - *arg0_i32
    - *arg1_i32
  bound_fns: []
  supported_modes: *default_modes

  docs: "https://developer.mozilla.org/en-US/docs/WebAssembly/Reference/Numeric/OR"

i32_xor: &i32_xor
  name: i32.xor
  bound_vars:
    - name: opname
      type: str
      docs: The name of the activated opcode.
      lifetime: static
      derived_from: "\"i32.xor\""
    - name: bytecode
      type: u16
      docs: The byte(s) that identify this opcode in the Wasm binary format.
      lifetime: static
      derived_from: 0x0073
    - *category_id_arith
    - *category_name_arith
    - *arg0_i32
    - *arg1_i32
  bound_fns: []
  supported_modes: *default_modes

  docs: "https://developer.mozilla.org/en-US/docs/WebAssembly/Reference/Numeric/XOR"

i32_shl: &i32_shl
  name: i32.shl
  bound_vars:
    - name: opname
      type: str
      docs: The name of the activated opcode.
      lifetime: static
      derived_from: "\"i32.shl\""
    - name: bytecode
      type: u16
      docs: The byte(s) that identify this opcode in the Wasm binary format.
      lifetime: static
      derived_from: 0x0074
    - *category_id_arith
    - *category_name_arith
    - *arg0_i32
    - *arg1_i32
  bound_fns: []
  supported_modes: *default_modes

  docs: "https://developer.mozilla.org/en-US/docs/WebAssembly/Reference/Numeric/Left_shift"

i32_shr_s: &i32_shr_s
  name: i32.shr_s
  bound_vars:
    - name: opname
      type: str
      docs: The name of the activated opcode.
      lifetime: static
      derived_from: "\"i32.shr_s\""
    - name: bytecode
      type: u16
      docs: The byte(s) that identify this opcode in the Wasm binary format.
      lifetime: static
      derived_from: 0x0075
    - *category_id_arith
    - *category_name_arith
    - *arg0_i32
    - *arg1_i32
  bound_fns: []
  supported_modes: *default_modes

  docs: "https://developer.mozilla.org/en-US/docs/WebAssembly/Reference/Numeric/Right_shift"

i32_shr_u: &i32_shr_u
  name: i32.shr_u
  bound_vars:
    - name: opname
      type: str
      docs: The name of the activated opcode.
      lifetime: static
      derived_from: "\"i32.shr_u\""
    - name: bytecode
      type: u16
      docs: The byte(s) that identify this opcode in the Wasm binary format.
      lifetime: static
      derived_from: 0x0076
    - *category_id_arith
    - *category_name_arith
    - *arg0_i32
    - *arg1_i32
  bound_fns: []
  supported_modes: *default_modes

  docs: "https://developer.mozilla.org/en-US/docs/WebAssembly/Reference/Numeric/Right_shift"

i32_rotl: &i32_rotl
  name: i32.rotl
  bound_vars:
    - name: opname
      type: str
      docs: The name of the activated opcode.
      lifetime: static
      derived_from: "\"i32.rotl\""
    - name: bytecode
      type: u16
      docs: The byte(s) that identify this opcode in the Wasm binary format.
      lifetime: static
      derived_from: 0x0077
    - *category_id_arith
    - *category_name_arith
    - *arg0_i32
    - *arg1_i32
  bound_fns: []
  supported_modes: *default_modes

  docs: "https://developer.mozilla.org/en-US/docs/WebAssembly/Reference/Numeric/Left_rotate"

i32_rotr: &i32_rotr
  name: i32.rotr
  bound_vars:
    - name: opname
      type: str
      docs: The name of the activated opcode.
      lifetime: static
      derived_from: "\"i32.rotr\""
    - name: bytecode
      type: u16
      docs: The byte(s) that identify this opcode in the Wasm binary format.
      lifetime: static
      derived_from: 0x0078
    - *category_id_arith
    - *category_name_arith
    - *arg0_i32
    - *arg1_i32
  bound_fns: []
  supported_modes: *default_modes

  docs: "https://developer.mozilla.org/en-US/docs/WebAssembly/Reference/Numeric/Right_rotate"

i64_clz: &i64_clz
  name: i64.clz
  bound_vars:
    - name: opname
      type: str
      docs: The name of the activated opcode.
      lifetime: static
      derived_from: "\"i64.clz\""
    - name: bytecode
      type: u16
      docs: The byte(s) that identify this opcode in the Wasm binary format.
      lifetime: static
      derived_from: 0x0079
    - *category_id_arith
    - *category_name_arith
    - *arg0_i64
  bound_fns: []
  supported_modes: *default_modes

  docs: "https://developer.mozilla.org/en-US/docs/WebAssembly/Reference/Numeric/Count_leading_zeros"

i64_ctz: &i64_ctz
  name: i64.ctz
  bound_vars:
    - name: opname
      type: str
      docs: The name of the activated opcode.
      lifetime: static
      derived_from: "\"i64.ctz\""
    - name: bytecode
      type: u16
      docs: The byte(s) that identify this opcode in the Wasm binary format.
      lifetime: static
      derived_from: 0x007A
    - *category_id_arith
    - *category_name_arith
    - *arg0_i64
  bound_fns: []
  supported_modes: *default_modes

  docs: "https://developer.mozilla.org/en-US/docs/WebAssembly/Reference/Numeric/Count_trailing_zeros"

i64_popcnt: &i64_popcnt
  name: i64.popcnt
  bound_vars:
    - name: opname
      type: str
      docs: The name of the activated opcode.
      lifetime: static
      derived_from: "\"i64.popcnt\""
    - name: bytecode
      type: u16
      docs: The byte(s) that identify this opcode in the Wasm binary format.
      lifetime: static
      derived_from: 0x007B
    - *category_id_arith
    - *category_name_arith
    - *arg0_i64
  bound_fns: []
  supported_modes: *default_modes

  docs: "https://developer.mozilla.org/en-US/docs/WebAssembly/Reference/Numeric/Population_count"

i64_add: &i64_add
  name: i64.add
  bound_vars:
    - name: opname
      type: str
      docs: The name of the activated opcode.
      lifetime: static
      derived_from: "\"i64.add\""
    - name: bytecode
      type: u16
      docs: The byte(s) that identify this opcode in the Wasm binary format.
      lifetime: static
      derived_from: 0x007C
    - *category_id_arith
    - *category_name_arith
    - *arg0_i64
    - *arg1_i64
  bound_fns: []
  supported_modes: *default_modes

  docs: "https://developer.mozilla.org/en-US/docs/WebAssembly/Reference/Numeric/Addition"

i64_sub: &i64_sub
  name: i64.sub
  bound_vars:
    - name: opname
      type: str
      docs: The name of the activated opcode.
      lifetime: static
      derived_from: "\"i64.sub\""
    - name: bytecode
      type: u16
      docs: The byte(s) that identify this opcode in the Wasm binary format.
      lifetime: static
      derived_from: 0x007D
    - *category_id_arith
    - *category_name_arith
    - *arg0_i64
    - *arg1_i64
  bound_fns: []
  supported_modes: *default_modes

  docs: "https://developer.mozilla.org/en-US/docs/WebAssembly/Reference/Numeric/Subtraction"

i64_mul: &i64_mul
  name: i64.mul
  bound_vars:
    - name: opname
      type: str
      docs: The name of the activated opcode.
      lifetime: static
      derived_from: "\"i64.mul\""
    - name: bytecode
      type: u16
      docs: The byte(s) that identify this opcode in the Wasm binary format.
      lifetime: static
      derived_from: 0x007E
    - *category_id_arith
    - *category_name_arith
    - *arg0_i64
    - *arg1_i64
  bound_fns: []
  supported_modes: *default_modes

  docs: "https://developer.mozilla.org/en-US/docs/WebAssembly/Reference/Numeric/Multiplication"

i64_div_s: &i64_div_s
  name: i64.div_s
  bound_vars:
    - name: opname
      type: str
      docs: The name of the activated opcode.
      lifetime: static
      derived_from: "\"i64.div_s\""
    - name: bytecode
      type: u16
      docs: The byte(s) that identify this opcode in the Wasm binary format.
      lifetime: static
      derived_from: 0x007F
    - *category_id_arith
    - *category_name_arith
    - *arg0_i64
    - *arg1_i64
  bound_fns: []
  supported_modes: *default_modes

  docs: "https://developer.mozilla.org/en-US/docs/WebAssembly/Reference/Numeric/Division"

i64_div_u: &i64_div_u
  name: i64.div_u
  bound_vars:
    - name: opname
      type: str
      docs: The name of the activated opcode.
      lifetime: static
      derived_from: "\"i64.div_u\""
    - name: bytecode
      type: u16
      docs: The byte(s) that identify this opcode in the Wasm binary format.
      lifetime: static
      derived_from: 0x0080
    - *category_id_arith
    - *category_name_arith
    - *arg0_i64
    - *arg1_i64
  bound_fns: []
  supported_modes: *default_modes

  docs: "https://developer.mozilla.org/en-US/docs/WebAssembly/Reference/Numeric/Division"

i64_rem_s: &i64_rem_s
  name: i64.rem_s
  bound_vars:
    - name: opname
      type: str
      docs: The name of the activated opcode.
      lifetime: static
      derived_from: "\"i64.rem_s\""
    - name: bytecode
      type: u16
      docs: The byte(s) that identify this opcode in the Wasm binary format.
      lifetime: static
      derived_from: 0x0081
    - *category_id_arith
    - *category_name_arith
    - *arg0_i64
    - *arg1_i64
  bound_fns: []
  supported_modes: *default_modes

  docs: "https://developer.mozilla.org/en-US/docs/WebAssembly/Reference/Numeric/Remainder"

i64_rem_u: &i64_rem_u
  name: i64.rem_u
  bound_vars:
    - name: opname
      type: str
      docs: The name of the activated opcode.
      lifetime: static
      derived_from: "\"i64.rem_u\""
    - name: bytecode
      type: u16
      docs: The byte(s) that identify this opcode in the Wasm binary format.
      lifetime: static
      derived_from: 0x0082
    - *category_id_arith
    - *category_name_arith
    - *arg0_i64
    - *arg1_i64
  bound_fns: []
  supported_modes: *default_modes

  docs: "https://developer.mozilla.org/en-US/docs/WebAssembly/Reference/Numeric/Remainder"

i64_and: &i64_and
  name: i64.and
  bound_vars:
    - name: opname
      type: str
      docs: The name of the activated opcode.
      lifetime: static
      derived_from: "\"i64.and\""
    - name: bytecode
      type: u16
      docs: The byte(s) that identify this opcode in the Wasm binary format.
      lifetime: static
      derived_from: 0x0083
    - *category_id_arith
    - *category_name_arith
    - *arg0_i64
    - *arg1_i64
  bound_fns: []
  supported_modes: *default_modes

  docs: "https://developer.mozilla.org/en-US/docs/WebAssembly/Reference/Numeric/AND"

i64_or: &i64_or
  name: i64.or
  bound_vars:
    - name: opname
      type: str
      docs: The name of the activated opcode.
      lifetime: static
      derived_from: "\"i64.or\""
    - name: bytecode
      type: u16
      docs: The byte(s) that identify this opcode in the Wasm binary format.
      lifetime: static
      derived_from: 0x0084
    - *category_id_arith
    - *category_name_arith
    - *arg0_i64
    - *arg1_i64
  bound_fns: []
  supported_modes: *default_modes

  docs: "https://developer.mozilla.org/en-US/docs/WebAssembly/Reference/Numeric/OR"

i64_xor: &i64_xor
  name: i64.xor
  bound_vars:
    - name: opname
      type: str
      docs: The name of the activated opcode.
      lifetime: static
      derived_from: "\"i64.xor\""
    - name: bytecode
      type: u16
      docs: The byte(s) that identify this opcode in the Wasm binary format.
      lifetime: static
      derived_from: 0x0085
    - *category_id_arith
    - *category_name_arith
    - *arg0_i64
    - *arg1_i64
  bound_fns: []
  supported_modes: *default_modes

  docs: "https://developer.mozilla.org/en-US/docs/WebAssembly/Reference/Numeric/XOR"

i64_shl: &i64_shl
  name: i64.shl
  bound_vars:
    - name: opname
      type: str
      docs: The name of the activated opcode.
      lifetime: static
      derived_from: "\"i64.shl\""
    - name: bytecode
      type: u16
      docs: The byte(s) that identify this opcode in the Wasm binary format.
      lifetime: static
      derived_from: 0x0086
    - *category_id_arith
    - *category_name_arith
    - *arg0_i64
    - *arg1_i64
  bound_fns: []
  supported_modes: *default_modes

  docs: "https://developer.mozilla.org/en-US/docs/WebAssembly/Reference/Numeric/Left_shift"

i64_shr_s: &i64_shr_s
  name: i64.shr_s
  bound_vars:
    - name: opname
      type: str
      docs: The name of the activated opcode.
      lifetime: static
      derived_from: "\"i64.shr_s\""
    - name: bytecode
      type: u16
      docs: The byte(s) that identify this opcode in the Wasm binary format.
      lifetime: static
      derived_from: 0x0087
    - *category_id_arith
    - *category_name_arith
    - *arg0_i64
    - *arg1_i64
  bound_fns: []
  supported_modes: *default_modes

  docs: "https://developer.mozilla.org/en-US/docs/WebAssembly/Reference/Numeric/Right_shift"

i64_shr_u: &i64_shr_u
  name: i64.shr_u
  bound_vars:
    - name: opname
      type: str
      docs: The name of the activated opcode.
      lifetime: static
      derived_from: "\"i64.shr_u\""
    - name: bytecode
      type: u16
      docs: The byte(s) that identify this opcode in the Wasm binary format.
      lifetime: static
      derived_from: 0x0088
    - *category_id_arith
    - *category_name_arith
    - *arg0_i64
    - *arg1_i64
  bound_fns: []
  supported_modes: *default_modes

  docs: "https://developer.mozilla.org/en-US/docs/WebAssembly/Reference/Numeric/Right_shift"

i64_rotl: &i64_rotl
  name: i64.rotl
  bound_vars:
    - name: opname
      type: str
      docs: The name of the activated opcode.
      lifetime: static
      derived_from: "\"i64.rotl\""
    - name: bytecode
      type: u16
      docs: The byte(s) that identify this opcode in the Wasm binary format.
      lifetime: static
      derived_from: 0x0089
    - *category_id_arith
    - *category_name_arith
    - *arg0_i64
    - *arg1_i64
  bound_fns: []
  supported_modes: *default_modes

  docs: "https://developer.mozilla.org/en-US/docs/WebAssembly/Reference/Numeric/Left_rotate"

i64_rotr: &i64_rotr
  name: i64.rotr
  bound_vars:
    - name: opname
      type: str
      docs: The name of the activated opcode.
      lifetime: static
      derived_from: "\"i64.rotr\""
    - name: bytecode
      type: u16
      docs: The byte(s) that identify this opcode in the Wasm binary format.
      lifetime: static
      derived_from: 0x008A
    - *category_id_arith
    - *category_name_arith
    - *arg0_i64
    - *arg1_i64
  bound_fns: []
  supported_modes: *default_modes

  docs: "https://developer.mozilla.org/en-US/docs/WebAssembly/Reference/Numeric/Right_rotate"

f32_abs: &f32_abs
  name: f32.abs
  bound_vars:
    - name: opname
      type: str
      docs: The name of the activated opcode.
      lifetime: static
      derived_from: "\"f32.abs\""
    - name: bytecode
      type: u16
      docs: The byte(s) that identify this opcode in the Wasm binary format.
      lifetime: static
      derived_from: 0x008B
    - *category_id_arith
    - *category_name_arith
    - *arg0_f32
  bound_fns: []
  supported_modes: *default_modes

  docs: "https://developer.mozilla.org/en-US/docs/WebAssembly/Reference/Numeric/Absolute"

f32_neg: &f32_neg
  name: f32.neg
  bound_vars:
    - name: opname
      type: str
      docs: The name of the activated opcode.
      lifetime: static
      derived_from: "\"f32.neg\""
    - name: bytecode
      type: u16
      docs: The byte(s) that identify this opcode in the Wasm binary format.
      lifetime: static
      derived_from: 0x008C
    - *category_id_arith
    - *category_name_arith
    - *arg0_f32
  bound_fns: []
  supported_modes: *default_modes

  docs: "https://developer.mozilla.org/en-US/docs/WebAssembly/Reference/Numeric/Negate"

f32_ceil: &f32_ceil
  name: f32.ceil
  bound_vars:
    - name: opname
      type: str
      docs: The name of the activated opcode.
      lifetime: static
      derived_from: "\"f32.ceil\""
    - name: bytecode
      type: u16
      docs: The byte(s) that identify this opcode in the Wasm binary format.
      lifetime: static
      derived_from: 0x008D
    - *category_id_arith
    - *category_name_arith
    - *arg0_f32
  bound_fns: []
  supported_modes: *default_modes

  docs: "https://developer.mozilla.org/en-US/docs/WebAssembly/Reference/Numeric/Ceil"

f32_floor: &f32_floor
  name: f32.floor
  bound_vars:
    - name: opname
      type: str
      docs: The name of the activated opcode.
      lifetime: static
      derived_from: "\"f32.floor\""
    - name: bytecode
      type: u16
      docs: The byte(s) that identify this opcode in the Wasm binary format.
      lifetime: static
      derived_from: 0x008E
    - *category_id_arith
    - *category_name_arith
    - *arg0_f32
  bound_fns: []
  supported_modes: *default_modes

  docs: "https://developer.mozilla.org/en-US/docs/WebAssembly/Reference/Numeric/Floor"

f32_trunc: &f32_trunc
  name: f32.trunc
  bound_vars:
    - name: opname
      type: str
      docs: The name of the activated opcode.
      lifetime: static
      derived_from: "\"f32.trunc\""
    - name: bytecode
      type: u16
      docs: The byte(s) that identify this opcode in the Wasm binary format.
      lifetime: static
      derived_from: 0x008F
    - *category_id_arith
    - *category_name_arith
    - *arg0_f32
  bound_fns: []
  supported_modes: *default_modes

  docs: "https://developer.mozilla.org/en-US/docs/WebAssembly/Reference/Numeric/Truncate_float_to_float"

f32_nearest: &f32_nearest
  name: f32.nearest
  bound_vars:
    - name: opname
      type: str
      docs: The name of the activated opcode.
      lifetime: static
      derived_from: "\"f32.nearest\""
    - name: bytecode
      type: u16
      docs: The byte(s) that identify this opcode in the Wasm binary format.
      lifetime: static
      derived_from: 0x0090
    - *category_id_arith
    - *category_name_arith
    - *arg0_f32
  bound_fns: []
  supported_modes: *default_modes

  docs: "https://developer.mozilla.org/en-US/docs/WebAssembly/Reference/Numeric/Nearest"

f32_sqrt: &f32_sqrt
  name: f32.sqrt
  bound_vars:
    - name: opname
      type: str
      docs: The name of the activated opcode.
      lifetime: static
      derived_from: "\"f32.sqrt\""
    - name: bytecode
      type: u16
      docs: The byte(s) that identify this opcode in the Wasm binary format.
      lifetime: static
      derived_from: 0x0091
    - *category_id_arith
    - *category_name_arith
    - *arg0_f32
  bound_fns: []
  supported_modes: *default_modes

  docs: "https://developer.mozilla.org/en-US/docs/WebAssembly/Reference/Numeric/Square_root"

f32_add: &f32_add
  name: f32.add
  bound_vars:
    - name: opname
      type: str
      docs: The name of the activated opcode.
      lifetime: static
      derived_from: "\"f32.add\""
    - name: bytecode
      type: u16
      docs: The byte(s) that identify this opcode in the Wasm binary format.
      lifetime: static
      derived_from: 0x0092
    - *category_id_arith
    - *category_name_arith
    - *arg0_f32
    - *arg1_f32
  bound_fns: []
  supported_modes: *default_modes

  docs: "https://developer.mozilla.org/en-US/docs/WebAssembly/Reference/Numeric/Addition"

f32_sub: &f32_sub
  name: f32.sub
  bound_vars:
    - name: opname
      type: str
      docs: The name of the activated opcode.
      lifetime: static
      derived_from: "\"f32.sub\""
    - name: bytecode
      type: u16
      docs: The byte(s) that identify this opcode in the Wasm binary format.
      lifetime: static
      derived_from: 0x0093
    - *category_id_arith
    - *category_name_arith
    - *arg0_f32
    - *arg1_f32
  bound_fns: []
  supported_modes: *default_modes

  docs: "https://developer.mozilla.org/en-US/docs/WebAssembly/Reference/Numeric/Subtraction"

f32_mul: &f32_mul
  name: f32.mul
  bound_vars:
    - name: opname
      type: str
      docs: The name of the activated opcode.
      lifetime: static
      derived_from: "\"f32.mul\""
    - name: bytecode
      type: u16
      docs: The byte(s) that identify this opcode in the Wasm binary format.
      lifetime: static
      derived_from: 0x0094
    - *category_id_arith
    - *category_name_arith
    - *arg0_f32
    - *arg1_f32
  bound_fns: []
  supported_modes: *default_modes

  docs: "https://developer.mozilla.org/en-US/docs/WebAssembly/Reference/Numeric/Multiplication"

f32_div: &f32_div
  name: f32.div
  bound_vars:
    - name: opname
      type: str
      docs: The name of the activated opcode.
      lifetime: static
      derived_from: "\"f32.div\""
    - name: bytecode
      type: u16
      docs: The byte(s) that identify this opcode in the Wasm binary format.
      lifetime: static
      derived_from: 0x0095
    - *category_id_arith
    - *category_name_arith
    - *arg0_f32
    - *arg1_f32
  bound_fns: []
  supported_modes: *default_modes

  docs: "https://developer.mozilla.org/en-US/docs/WebAssembly/Reference/Numeric/Division"

f32_min: &f32_min
  name: f32.min
  bound_vars:
    - name: opname
      type: str
      docs: The name of the activated opcode.
      lifetime: static
      derived_from: "\"f32.min\""
    - name: bytecode
      type: u16
      docs: The byte(s) that identify this opcode in the Wasm binary format.
      lifetime: static
      derived_from: 0x0096
    - *category_id_arith
    - *category_name_arith
    - *arg0_f32
    - *arg1_f32
  bound_fns: []
  supported_modes: *default_modes

  docs: "https://developer.mozilla.org/en-US/docs/WebAssembly/Reference/Numeric/Min"

f32_max: &f32_max
  name: f32.max
  bound_vars:
    - name: opname
      type: str
      docs: The name of the activated opcode.
      lifetime: static
      derived_from: "\"f32.max\""
    - name: bytecode
      type: u16
      docs: The byte(s) that identify this opcode in the Wasm binary format.
      lifetime: static
      derived_from: 0x0097
    - *category_id_arith
    - *category_name_arith
    - *arg0_f32
    - *arg1_f32
  bound_fns: []
  supported_modes: *default_modes

  docs: "https://developer.mozilla.org/en-US/docs/WebAssembly/Reference/Numeric/Max"

f32_copysign: &f32_copysign
  name: f32.copysign
  bound_vars:
    - name: opname
      type: str
      docs: The name of the activated opcode.
      lifetime: static
      derived_from: "\"f32.copysign\""
    - name: bytecode
      type: u16
      docs: The byte(s) that identify this opcode in the Wasm binary format.
      lifetime: static
      derived_from: 0x0098
    - *category_id_arith
    - *category_name_arith
    - *arg0_f32
    - *arg1_f32
  bound_fns: []
  supported_modes: *default_modes

  docs: "https://developer.mozilla.org/en-US/docs/WebAssembly/Reference/Numeric/Copy_sign"

f64_abs: &f64_abs
  name: f64.abs
  bound_vars:
    - name: opname
      type: str
      docs: The name of the activated opcode.
      lifetime: static
      derived_from: "\"f64.abs\""
    - name: bytecode
      type: u16
      docs: The byte(s) that identify this opcode in the Wasm binary format.
      lifetime: static
      derived_from: 0x0099
    - *category_id_arith
    - *category_name_arith
    - *arg0_f64
  bound_fns: []
  supported_modes: *default_modes

  docs: "https://developer.mozilla.org/en-US/docs/WebAssembly/Reference/Numeric/Absolute"

f64_neg: &f64_neg
  name: f64.neg
  bound_vars:
    - name: opname
      type: str
      docs: The name of the activated opcode.
      lifetime: static
      derived_from: "\"f64.neg\""
    - name: bytecode
      type: u16
      docs: The byte(s) that identify this opcode in the Wasm binary format.
      lifetime: static
      derived_from: 0x009A
    - *category_id_arith
    - *category_name_arith
    - *arg0_f64
  bound_fns: []
  supported_modes: *default_modes

  docs: "https://developer.mozilla.org/en-US/docs/WebAssembly/Reference/Numeric/Negate"

f64_ceil: &f64_ceil
  name: f64.ceil
  bound_vars:
    - name: opname
      type: str
      docs: The name of the activated opcode.
      lifetime: static
      derived_from: "\"f64.ceil\""
    - name: bytecode
      type: u16
      docs: The byte(s) that identify this opcode in the Wasm binary format.
      lifetime: static
      derived_from: 0x009B
    - *category_id_arith
    - *category_name_arith
    - *arg0_f64
  bound_fns: []
  supported_modes: *default_modes

  docs: "https://developer.mozilla.org/en-US/docs/WebAssembly/Reference/Numeric/Ceil"

f64_floor: &f64_floor
  name: f64.floor
  bound_vars:
    - name: opname
      type: str
      docs: The name of the activated opcode.
      lifetime: static
      derived_from: "\"f64.floor\""
    - name: bytecode
      type: u16
      docs: The byte(s) that identify this opcode in the Wasm binary format.
      lifetime: static
      derived_from: 0x009C
    - *category_id_arith
    - *category_name_arith
    - *arg0_f64
  bound_fns: []
  supported_modes: *default_modes

  docs: "https://developer.mozilla.org/en-US/docs/WebAssembly/Reference/Numeric/Floor"

f64_trunc: &f64_trunc
  name: f64.trunc
  bound_vars:
    - name: opname
      type: str
      docs: The name of the activated opcode.
      lifetime: static
      derived_from: "\"f64.trunc\""
    - name: bytecode
      type: u16
      docs: The byte(s) that identify this opcode in the Wasm binary format.
      lifetime: static
      derived_from: 0x009D
    - *category_id_arith
    - *category_name_arith
    - *arg0_f64
  bound_fns: []
  supported_modes: *default_modes

  docs: "https://developer.mozilla.org/en-US/docs/WebAssembly/Reference/Numeric/Trunc"

f64_nearest: &f64_nearest
  name: f64.nearest
  bound_vars:
    - name: opname
      type: str
      docs: The name of the activated opcode.
      lifetime: static
      derived_from: "\"f64.nearest\""
    - name: bytecode
      type: u16
      docs: The byte(s) that identify this opcode in the Wasm binary format.
      lifetime: static
      derived_from: 0x009E
    - *category_id_arith
    - *category_name_arith
    - *arg0_f64
  bound_fns: []
  supported_modes: *default_modes

  docs: "https://developer.mozilla.org/en-US/docs/WebAssembly/Reference/Numeric/Nearest"

f64_sqrt: &f64_sqrt
  name: f64.sqrt
  bound_vars:
    - name: opname
      type: str
      docs: The name of the activated opcode.
      lifetime: static
      derived_from: "\"f64.sqrt\""
    - name: bytecode
      type: u16
      docs: The byte(s) that identify this opcode in the Wasm binary format.
      lifetime: static
      derived_from: 0x009F
    - *category_id_arith
    - *category_name_arith
    - *arg0_f64
  bound_fns: []
  supported_modes: *default_modes

  docs: "https://developer.mozilla.org/en-US/docs/WebAssembly/Reference/Numeric/Square_root"

f64_add: &f64_add
  name: f64.add
  bound_vars:
    - name: opname
      type: str
      docs: The name of the activated opcode.
      lifetime: static
      derived_from: "\"f64.add\""
    - name: bytecode
      type: u16
      docs: The byte(s) that identify this opcode in the Wasm binary format.
      lifetime: static
      derived_from: 0x00A0
    - *category_id_arith
    - *category_name_arith
    - *arg0_f64
    - *arg1_f64
  bound_fns: []
  supported_modes: *default_modes

  docs: "https://developer.mozilla.org/en-US/docs/WebAssembly/Reference/Numeric/Addition"

f64_sub: &f64_sub
  name: f64.sub
  bound_vars:
    - name: opname
      type: str
      docs: The name of the activated opcode.
      lifetime: static
      derived_from: "\"f64.sub\""
    - name: bytecode
      type: u16
      docs: The byte(s) that identify this opcode in the Wasm binary format.
      lifetime: static
      derived_from: 0x00A1
    - *category_id_arith
    - *category_name_arith
    - *arg0_f64
    - *arg1_f64
  bound_fns: []
  supported_modes: *default_modes

  docs: "https://developer.mozilla.org/en-US/docs/WebAssembly/Reference/Numeric/Subtraction"

f64_mul: &f64_mul
  name: f64.mul
  bound_vars:
    - name: opname
      type: str
      docs: The name of the activated opcode.
      lifetime: static
      derived_from: "\"f64.mul\""
    - name: bytecode
      type: u16
      docs: The byte(s) that identify this opcode in the Wasm binary format.
      lifetime: static
      derived_from: 0x00A2
    - *category_id_arith
    - *category_name_arith
    - *arg0_f64
    - *arg1_f64
  bound_fns: []
  supported_modes: *default_modes

  docs: "https://developer.mozilla.org/en-US/docs/WebAssembly/Reference/Numeric/Multiplication"

f64_div: &f64_div
  name: f64.div
  bound_vars:
    - name: opname
      type: str
      docs: The name of the activated opcode.
      lifetime: static
      derived_from: "\"f64.div\""
    - name: bytecode
      type: u16
      docs: The byte(s) that identify this opcode in the Wasm binary format.
      lifetime: static
      derived_from: 0x00A3
    - *category_id_arith
    - *category_name_arith
    - *arg0_f64
    - *arg1_f64
  bound_fns: []
  supported_modes: *default_modes

  docs: "https://developer.mozilla.org/en-US/docs/WebAssembly/Reference/Numeric/Division"

f64_min: &f64_min
  name: f64.min
  bound_vars:
    - name: opname
      type: str
      docs: The name of the activated opcode.
      lifetime: static
      derived_from: "\"f64.min\""
    - name: bytecode
      type: u16
      docs: The byte(s) that identify this opcode in the Wasm binary format.
      lifetime: static
      derived_from: 0x00A4
    - *category_id_arith
    - *category_name_arith
    - *arg0_f64
    - *arg1_f64
  bound_fns: []
  supported_modes: *default_modes

  docs: "https://developer.mozilla.org/en-US/docs/WebAssembly/Reference/Numeric/Min"

f64_max: &f64_max
  name: f64.max
  bound_vars:
    - name: opname
      type: str
      docs: The name of the activated opcode.
      lifetime: static
      derived_from: "\"f64.max\""
    - name: bytecode
      type: u16
      docs: The byte(s) that identify this opcode in the Wasm binary format.
      lifetime: static
      derived_from: 0x00A5
    - *category_id_arith
    - *category_name_arith
    - *arg0_f64
    - *arg1_f64
  bound_fns: []
  supported_modes: *default_modes

  docs: "https://developer.mozilla.org/en-US/docs/WebAssembly/Reference/Numeric/Max"

f64_copysign: &f64_copysign
  name: f64.copysign
  bound_vars:
    - name: opname
      type: str
      docs: The name of the activated opcode.
      lifetime: static
      derived_from: "\"f64.copysign\""
    - name: bytecode
      type: u16
      docs: The byte(s) that identify this opcode in the Wasm binary format.
      lifetime: static
      derived_from: 0x00A6
    - *category_id_arith
    - *category_name_arith
    - *arg0_f64
    - *arg1_f64
  bound_fns: []
  supported_modes: *default_modes

  docs: "https://developer.mozilla.org/en-US/docs/WebAssembly/Reference/Numeric/Copy_sign"

i32_wrap_i64: &i32_wrap_i64
  name: i32.wrap_i64
  bound_vars:
    - name: opname
      type: str
      docs: The name of the activated opcode.
      lifetime: static
      derived_from: "\"i32.wrap_i64\""
    - name: bytecode
      type: u16
      docs: The byte(s) that identify this opcode in the Wasm binary format.
      lifetime: static
      derived_from: 0x00A7
    - *category_id_convert
    - *category_name_convert
    - *arg0_i64
  bound_fns: []
  supported_modes: *default_modes

  docs: "https://developer.mozilla.org/en-US/docs/WebAssembly/Reference/Numeric/Wrap"

i32_trunc_f32_s: &i32_trunc_f32_s
  name: i32.trunc_f32_s
  bound_vars:
    - name: opname
      type: str
      docs: The name of the activated opcode.
      lifetime: static
      derived_from: "\"i32.trunc_f32_s\""
    - name: bytecode
      type: u16
      docs: The byte(s) that identify this opcode in the Wasm binary format.
      lifetime: static
      derived_from: 0x00A8
    - *category_id_convert
    - *category_name_convert
    - *arg0_f32
  bound_fns: []
  supported_modes: *default_modes

  docs: "https://developer.mozilla.org/en-US/docs/WebAssembly/Reference/Numeric/Truncate_float_to_int"

i32_trunc_f32_u: &i32_trunc_f32_u
  name: i32.trunc_f32_u
  bound_vars:
    - name: opname
      type: str
      docs: The name of the activated opcode.
      lifetime: static
      derived_from: "\"i32.trunc_f32_u\""
    - name: bytecode
      type: u16
      docs: The byte(s) that identify this opcode in the Wasm binary format.
      lifetime: static
      derived_from: 0x00A9
    - *category_id_convert
    - *category_name_convert
    - *arg0_f32
  bound_fns: []
  supported_modes: *default_modes

  docs: "https://developer.mozilla.org/en-US/docs/WebAssembly/Reference/Numeric/Truncate_float_to_int"

i32_trunc_f64_s: &i32_trunc_f64_s
  name: i32.trunc_f64_s
  bound_vars:
    - name: opname
      type: str
      docs: The name of the activated opcode.
      lifetime: static
      derived_from: "\"i32.trunc_f64_s\""
    - name: bytecode
      type: u16
      docs: The byte(s) that identify this opcode in the Wasm binary format.
      lifetime: static
      derived_from: 0x00AA
    - *category_id_convert
    - *category_name_convert
    - *arg0_f64
  bound_fns: []
  supported_modes: *default_modes

  docs: "https://developer.mozilla.org/en-US/docs/WebAssembly/Reference/Numeric/Truncate_float_to_int"

i32_trunc_f64_u: &i32_trunc_f64_u
  name: i32.trunc_f64_u
  bound_vars:
    - name: opname
      type: str
      docs: The name of the activated opcode.
      lifetime: static
      derived_from: "\"i32.trunc_f64_u\""
    - name: bytecode
      type: u16
      docs: The byte(s) that identify this opcode in the Wasm binary format.
      lifetime: static
      derived_from: 0x00AB
    - *category_id_convert
    - *category_name_convert
    - *arg0_f64
  bound_fns: []
  supported_modes: *default_modes

  docs: "https://developer.mozilla.org/en-US/docs/WebAssembly/Reference/Numeric/Truncate_float_to_int"

i64_extend_i32_s: &i64_extend_i32_s
  name: i64.extend_i32_s
  bound_vars:
    - name: opname
      type: str
      docs: The name of the activated opcode.
      lifetime: static
      derived_from: "\"i64.extend_i32_s\""
    - name: bytecode
      type: u16
      docs: The byte(s) that identify this opcode in the Wasm binary format.
      lifetime: static
      derived_from: 0x00AC
    - *category_id_convert
    - *category_name_convert
    - *arg0_i32
  bound_fns: []
  supported_modes: *default_modes

  docs: "https://developer.mozilla.org/en-US/docs/WebAssembly/Reference/Numeric/Extend"

i64_extend_i32_u: &i64_extend_i32_u
  name: i64.extend_i32_u
  bound_vars:
    - name: opname
      type: str
      docs: The name of the activated opcode.
      lifetime: static
      derived_from: "\"i64.extend_i32_u\""
    - name: bytecode
      type: u16
      docs: The byte(s) that identify this opcode in the Wasm binary format.
      lifetime: static
      derived_from: 0x00AD
    - *category_id_convert
    - *category_name_convert
    - *arg0_u32
  bound_fns: []
  supported_modes: *default_modes

  docs: "https://developer.mozilla.org/en-US/docs/WebAssembly/Reference/Numeric/Extend"

i64_trunc_f32_s: &i64_trunc_f32_s
  name: i64.trunc_f32_s
  bound_vars:
    - name: opname
      type: str
      docs: The name of the activated opcode.
      lifetime: static
      derived_from: "\"i64.trunc_f32_s\""
    - name: bytecode
      type: u16
      docs: The byte(s) that identify this opcode in the Wasm binary format.
      lifetime: static
      derived_from: 0x00AE
    - *category_id_convert
    - *category_name_convert
    - *arg0_f32
  bound_fns: []
  supported_modes: *default_modes

  docs: "https://developer.mozilla.org/en-US/docs/WebAssembly/Reference/Numeric/Truncate_float_to_int"

i64_trunc_f32_u: &i64_trunc_f32_u
  name: i64.trunc_f32_u
  bound_vars:
    - name: opname
      type: str
      docs: The name of the activated opcode.
      lifetime: static
      derived_from: "\"i64.trunc_f32_u\""
    - name: bytecode
      type: u16
      docs: The byte(s) that identify this opcode in the Wasm binary format.
      lifetime: static
      derived_from: 0x00AF
    - *category_id_convert
    - *category_name_convert
    - *arg0_f32
  bound_fns: []
  supported_modes: *default_modes

  docs: "https://developer.mozilla.org/en-US/docs/WebAssembly/Reference/Numeric/Truncate_float_to_int"

i64_trunc_f64_s: &i64_trunc_f64_s
  name: i64.trunc_f64_s
  bound_vars:
    - name: opname
      type: str
      docs: The name of the activated opcode.
      lifetime: static
      derived_from: "\"i64.trunc_f64_s\""
    - name: bytecode
      type: u16
      docs: The byte(s) that identify this opcode in the Wasm binary format.
      lifetime: static
      derived_from: 0x00B0
    - *category_id_convert
    - *category_name_convert
    - *arg0_f64
  bound_fns: []
  supported_modes: *default_modes

  docs: "https://developer.mozilla.org/en-US/docs/WebAssembly/Reference/Numeric/Truncate_float_to_int"

i64_trunc_f64_u: &i64_trunc_f64_u
  name: i64.trunc_f64_u
  bound_vars:
    - name: opname
      type: str
      docs: The name of the activated opcode.
      lifetime: static
      derived_from: "\"i64.trunc_f64_u\""
    - name: bytecode
      type: u16
      docs: The byte(s) that identify this opcode in the Wasm binary format.
      lifetime: static
      derived_from: 0x00B1
    - *category_id_convert
    - *category_name_convert
    - *arg0_f64
  bound_fns: []
  supported_modes: *default_modes

  docs: "https://developer.mozilla.org/en-US/docs/WebAssembly/Reference/Numeric/Truncate_float_to_int"

f32_convert_i32_s: &f32_convert_i32_s
  name: f32.convert_i32_s
  bound_vars:
    - name: opname
      type: str
      docs: The name of the activated opcode.
      lifetime: static
      derived_from: "\"f32.convert_i32_s\""
    - name: bytecode
      type: u16
      docs: The byte(s) that identify this opcode in the Wasm binary format.
      lifetime: static
      derived_from: 0x00B2
    - *category_id_convert
    - *category_name_convert
    - *arg0_i32
  bound_fns: []
  supported_modes: *default_modes

  docs: "https://developer.mozilla.org/en-US/docs/WebAssembly/Reference/Numeric/Convert"

f32_convert_i32_u: &f32_convert_i32_u
  name: f32.convert_i32_u
  bound_vars:
    - name: opname
      type: str
      docs: The name of the activated opcode.
      lifetime: static
      derived_from: "\"f32.convert_i32_u\""
    - name: bytecode
      type: u16
      docs: The byte(s) that identify this opcode in the Wasm binary format.
      lifetime: static
      derived_from: 0x00B3
    - *category_id_convert
    - *category_name_convert
    - *arg0_u32
  bound_fns: []
  supported_modes: *default_modes

  docs: "https://developer.mozilla.org/en-US/docs/WebAssembly/Reference/Numeric/Convert"

f32_convert_i64_s: &f32_convert_i64_s
  name: f32.convert_i64_s
  bound_vars:
    - name: opname
      type: str
      docs: The name of the activated opcode.
      lifetime: static
      derived_from: "\"f32.convert_i64_s\""
    - name: bytecode
      type: u16
      docs: The byte(s) that identify this opcode in the Wasm binary format.
      lifetime: static
      derived_from: 0x00B4
    - *category_id_convert
    - *category_name_convert
    - *arg0_i64
  bound_fns: []
  supported_modes: *default_modes

  docs: "https://developer.mozilla.org/en-US/docs/WebAssembly/Reference/Numeric/Convert"

f32_convert_i64_u: &f32_convert_i64_u
  name: f32.convert_i64_u
  bound_vars:
    - name: opname
      type: str
      docs: The name of the activated opcode.
      lifetime: static
      derived_from: "\"f32.convert_i64_u\""
    - name: bytecode
      type: u16
      docs: The byte(s) that identify this opcode in the Wasm binary format.
      lifetime: static
      derived_from: 0x00B5
    - *category_id_convert
    - *category_name_convert
    - *arg0_u64
  bound_fns: []
  supported_modes: *default_modes

  docs: "https://developer.mozilla.org/en-US/docs/WebAssembly/Reference/Numeric/Convert"

f32_demote_f64: &f32_demote_f64
  name: f32.demote_f64
  bound_vars:
    - name: opname
      type: str
      docs: The name of the activated opcode.
      lifetime: static
      derived_from: "\"f32.demote_f64\""
    - name: bytecode
      type: u16
      docs: The byte(s) that identify this opcode in the Wasm binary format.
      lifetime: static
      derived_from: 0x00B6
    - *category_id_convert
    - *category_name_convert
    - *arg0_f64
  bound_fns: []
  supported_modes: *default_modes

  docs: "https://developer.mozilla.org/en-US/docs/WebAssembly/Reference/Numeric/Demote"

f64_convert_i32_s: &f64_convert_i32_s
  name: f64.convert_i32_s
  bound_vars:
    - name: opname
      type: str
      docs: The name of the activated opcode.
      lifetime: static
      derived_from: "\"f64.convert_i32_s\""
    - name: bytecode
      type: u16
      docs: The byte(s) that identify this opcode in the Wasm binary format.
      lifetime: static
      derived_from: 0x00B7
    - *category_id_convert
    - *category_name_convert
    - *arg0_i32
  bound_fns: []
  supported_modes: *default_modes

  docs: "https://developer.mozilla.org/en-US/docs/WebAssembly/Reference/Numeric/Convert"

f64_convert_i32_u: &f64_convert_i32_u
  name: f64.convert_i32_u
  bound_vars:
    - name: opname
      type: str
      docs: The name of the activated opcode.
      lifetime: static
      derived_from: "\"f64.convert_i32_u\""
    - name: bytecode
      type: u16
      docs: The byte(s) that identify this opcode in the Wasm binary format.
      lifetime: static
      derived_from: 0x00B8
    - *category_id_convert
    - *category_name_convert
    - *arg0_u32
  bound_fns: []
  supported_modes: *default_modes

  docs: "https://developer.mozilla.org/en-US/docs/WebAssembly/Reference/Numeric/Convert"

f64_convert_i64_s: &f64_convert_i64_s
  name: f64.convert_i64_s
  bound_vars:
    - name: opname
      type: str
      docs: The name of the activated opcode.
      lifetime: static
      derived_from: "\"f64.convert_i64_s\""
    - name: bytecode
      type: u16
      docs: The byte(s) that identify this opcode in the Wasm binary format.
      lifetime: static
      derived_from: 0x00B9
    - *category_id_convert
    - *category_name_convert
    - *arg0_i64
  bound_fns: []
  supported_modes: *default_modes

  docs: "https://developer.mozilla.org/en-US/docs/WebAssembly/Reference/Numeric/Convert"

f64_convert_i64_u: &f64_convert_i64_u
  name: f64.convert_i64_u
  bound_vars:
    - name: opname
      type: str
      docs: The name of the activated opcode.
      lifetime: static
      derived_from: "\"f64.convert_i64_u\""
    - name: bytecode
      type: u16
      docs: The byte(s) that identify this opcode in the Wasm binary format.
      lifetime: static
      derived_from: 0x00BA
    - *category_id_convert
    - *category_name_convert
    - *arg0_u64
  bound_fns: []
  supported_modes: *default_modes

  docs: "https://developer.mozilla.org/en-US/docs/WebAssembly/Reference/Numeric/Convert"

f64_promote_f32: &f64_promote_f32
  name: f64.promote_f32
  bound_vars:
    - name: opname
      type: str
      docs: The name of the activated opcode.
      lifetime: static
      derived_from: "\"f64.promote_f32\""
    - name: bytecode
      type: u16
      docs: The byte(s) that identify this opcode in the Wasm binary format.
      lifetime: static
      derived_from: 0x00BB
    - *category_id_convert
    - *category_name_convert
    - *arg0_f32
  bound_fns: []
  supported_modes: *default_modes

  docs: "https://developer.mozilla.org/en-US/docs/WebAssembly/Reference/Numeric/Promote"

i32_reinterpret_f32: &i32_reinterpret_f32
  name: i32.reinterpret_f32
  bound_vars:
    - name: opname
      type: str
      docs: The name of the activated opcode.
      lifetime: static
      derived_from: "\"i32.reinterpret_f32\""
    - name: bytecode
      type: u16
      docs: The byte(s) that identify this opcode in the Wasm binary format.
      lifetime: static
      derived_from: 0x00BC
    - *category_id_convert
    - *category_name_convert
    - *arg0_f32
  bound_fns: []
  supported_modes: *default_modes

  docs: "https://developer.mozilla.org/en-US/docs/WebAssembly/Reference/Numeric/Reinterpret"

i64_reinterpret_f64: &i64_reinterpret_f64
  name: i64.reinterpret_f64
  bound_vars:
    - name: opname
      type: str
      docs: The name of the activated opcode.
      lifetime: static
      derived_from: "\"i64.reinterpret_f64\""
    - name: bytecode
      type: u16
      docs: The byte(s) that identify this opcode in the Wasm binary format.
      lifetime: static
      derived_from: 0x00BD
    - *category_id_convert
    - *category_name_convert
    - *arg0_f64
  bound_fns: []
  supported_modes: *default_modes

  docs: "https://developer.mozilla.org/en-US/docs/WebAssembly/Reference/Numeric/Reinterpret"

f32_reinterpret_i32: &f32_reinterpret_i32
  name: f32.reinterpret_i32
  bound_vars:
    - name: opname
      type: str
      docs: The name of the activated opcode.
      lifetime: static
      derived_from: "\"f32.reinterpret_i32\""
    - name: bytecode
      type: u16
      docs: The byte(s) that identify this opcode in the Wasm binary format.
      lifetime: static
      derived_from: 0x00BE
    - *category_id_convert
    - *category_name_convert
    - *arg0_i32
  bound_fns: []
  supported_modes: *default_modes

  docs: "https://developer.mozilla.org/en-US/docs/WebAssembly/Reference/Numeric/Reinterpret"

f64_reinterpret_i64: &f64_reinterpret_i64
  name: f64.reinterpret_i64
  bound_vars:
    - name: opname
      type: str
      docs: The name of the activated opcode.
      lifetime: static
      derived_from: "\"f64.reinterpret_i64\""
    - name: bytecode
      type: u16
      docs: The byte(s) that identify this opcode in the Wasm binary format.
      lifetime: static
      derived_from: 0x00BF
    - *category_id_convert
    - *category_name_convert
    - *arg0_i64
  bound_fns: []
  supported_modes: *default_modes

  docs: "https://developer.mozilla.org/en-US/docs/WebAssembly/Reference/Numeric/Reinterpret"

i32_extend8_s: &i32_extend8_s
  name: i32.extend8_s
  bound_vars:
    - name: opname
      type: str
      docs: The name of the activated opcode.
      lifetime: static
      derived_from: "\"i32.extend8_s\""
    - name: bytecode
      type: u16
      docs: The byte(s) that identify this opcode in the Wasm binary format.
      lifetime: static
      derived_from: 0x00C0
    - *category_id_convert
    - *category_name_convert
    - *arg0_i32
  bound_fns: []
  supported_modes: *default_modes

  docs: "https://developer.mozilla.org/en-US/docs/WebAssembly/Reference/Numeric/Extend"

i32_extend16_s: &i32_extend16_s
  name: i32.extend16_s
  bound_vars:
    - name: opname
      type: str
      docs: The name of the activated opcode.
      lifetime: static
      derived_from: "\"i32.extend16_s\""
    - name: bytecode
      type: u16
      docs: The byte(s) that identify this opcode in the Wasm binary format.
      lifetime: static
      derived_from: 0x00C1
    - *category_id_convert
    - *category_name_convert
    - *arg0_i32
  bound_fns: []
  supported_modes: *default_modes

  docs: "https://developer.mozilla.org/en-US/docs/WebAssembly/Reference/Numeric/Extend"

i64_extend8_s: &i64_extend8_s
  name: i64.extend8_s
  bound_vars:
    - name: opname
      type: str
      docs: The name of the activated opcode.
      lifetime: static
      derived_from: "\"i64.extend8_s\""
    - name: bytecode
      type: u16
      docs: The byte(s) that identify this opcode in the Wasm binary format.
      lifetime: static
      derived_from: 0x00C2
    - *category_id_convert
    - *category_name_convert
    - *arg0_i64
  bound_fns: []
  supported_modes: *default_modes

  docs: "https://developer.mozilla.org/en-US/docs/WebAssembly/Reference/Numeric/Extend"

i64_extend16_s: &i64_extend16_s
  name: i64.extend16_s
  bound_vars:
    - name: opname
      type: str
      docs: The name of the activated opcode.
      lifetime: static
      derived_from: "\"i64.extend16_s\""
    - name: bytecode
      type: u16
      docs: The byte(s) that identify this opcode in the Wasm binary format.
      lifetime: static
      derived_from: 0x00C3
    - *category_id_convert
    - *category_name_convert
    - *arg0_i64
  bound_fns: []
  supported_modes: *default_modes

  docs: "https://developer.mozilla.org/en-US/docs/WebAssembly/Reference/Numeric/Extend"

i64_extend32_s: &i64_extend32_s
  name: i64.extend32_s
  bound_vars:
    - name: opname
      type: str
      docs: The name of the activated opcode.
      lifetime: static
      derived_from: "\"i64.extend32_s\""
    - name: bytecode
      type: u16
      docs: The byte(s) that identify this opcode in the Wasm binary format.
      lifetime: static
      derived_from: 0x00C4
    - *category_id_convert
    - *category_name_convert
    - *arg0_i64
  bound_fns: []
  supported_modes: *default_modes

  docs: "https://developer.mozilla.org/en-US/docs/WebAssembly/Reference/Numeric/Extend"

# TODO -- support pulling heaptype
#     RefNull { hty: $crate::HeapType } => visit_ref_null
ref_null: &ref_null
  name: ref.null
  bound_vars:
    - name: opname
      type: str
      docs: The name of the activated opcode.
      lifetime: static
      derived_from: "\"ref.null\""
    - name: bytecode
      type: u16
      docs: The byte(s) that identify this opcode in the Wasm binary format.
      lifetime: static
      derived_from: 0x00D0
    - *category_id_gc
    - *category_name_gc
  bound_fns: []
  supported_modes: *default_modes

  docs: "https://github.com/WebAssembly/reference-types/blob/master/proposals/reference-types/Overview.md"

# TODO -- support argN
ref_is_null: &ref_is_null
  name: ref.is_null
  bound_vars:
    - name: opname
      type: str
      docs: The name of the activated opcode.
      lifetime: static
      derived_from: "\"ref.is_null\""
    - name: bytecode
      type: u16
      docs: The byte(s) that identify this opcode in the Wasm binary format.
      lifetime: static
      derived_from: 0x00D1
    - *category_id_gc
    - *category_name_gc
    - *argN
  bound_fns: []
  supported_modes: *default_modes

  docs: "https://github.com/WebAssembly/reference-types/blob/master/proposals/reference-types/Overview.md"

ref_func: &ref_func
  name: ref.func
  bound_vars:
    - name: opname
      type: str
      docs: The name of the activated opcode.
      lifetime: static
      derived_from: "\"ref.func\""
    - name: bytecode
      type: u16
      docs: The byte(s) that identify this opcode in the Wasm binary format.
      lifetime: static
      derived_from: 0x00D2
    - *category_id_gc
    - *category_name_gc
    - *imm0_u32
  bound_fns: []
  supported_modes: *default_modes

  docs: "https://github.com/WebAssembly/reference-types/blob/master/proposals/reference-types/Overview.md"

ref_eq: &ref_eq
  name: ref.eq
  bound_vars:
    - name: opname
      type: str
      docs: The name of the activated opcode.
      lifetime: static
      derived_from: "\"ref.eq\""
    - name: bytecode
      type: u16
      docs: The byte(s) that identify this opcode in the Wasm binary format.
      lifetime: static
      derived_from: 0x00D3
    - *category_id_gc
    - *category_name_gc
    - *argN
  bound_fns: []
  supported_modes: *default_modes

  docs: "https://github.com/WebAssembly/reference-types/blob/master/proposals/reference-types/Overview.md"

ref_as_non_null: &ref_as_non_null
  name: ref.as_non_null
  bound_vars:
    - name: opname
      type: str
      docs: The name of the activated opcode.
      lifetime: static
      derived_from: "\"ref.as_non_null\""
    - name: bytecode
      type: u16
      docs: The byte(s) that identify this opcode in the Wasm binary format.
      lifetime: static
      derived_from: 0x00D4
    - *category_id_convert
    - *category_name_convert
    - *argN
  bound_fns: []
  supported_modes: *default_modes

  docs: "https://github.com/WebAssembly/gc/blob/main/proposals/function-references/Overview.md"

br_on_null: &br_on_null
  name: br_on_null
  bound_vars:
    - name: opname
      type: str
      docs: The name of the activated opcode.
      lifetime: static
      derived_from: "\"br_on_null\""
    - name: bytecode
      type: u16
      docs: The byte(s) that identify this opcode in the Wasm binary format.
      lifetime: static
      derived_from: 0x00D5
    - *category_id_control
    - *category_name_control
    - *argN
  bound_fns: []
  supported_modes: *default_modes

  docs: "https://github.com/WebAssembly/gc/blob/main/proposals/function-references/Overview.md"

br_on_non_null: &br_on_non_null
  name: br_on_non_null
  bound_vars:
    - name: opname
      type: str
      docs: The name of the activated opcode.
      lifetime: static
      derived_from: "\"br_on_non_null\""
    - name: bytecode
      type: u16
      docs: The byte(s) that identify this opcode in the Wasm binary format.
      lifetime: static
      derived_from: 0x00D6
    - *category_id_control
    - *category_name_control
    - *imm0_u32
    - *argN
  bound_fns: []
  supported_modes: *default_modes

  docs: "https://github.com/WebAssembly/gc/blob/main/proposals/function-references/Overview.md"

struct_new: &struct_new
  name: struct.new
  bound_vars:
    - name: opname
      type: str
      docs: The name of the activated opcode.
      lifetime: static
      derived_from: "\"struct.new\""
    - name: bytecode
      type: u16
      docs: The byte(s) that identify this opcode in the Wasm binary format.
      lifetime: static
      derived_from: 0xFB00
    - *category_id_gc
    - *category_name_gc
    - *imm0_u32
    - *struct_tid
    - *argN
  bound_fns: []
  supported_modes: *default_modes

  docs: "https://github.com/WebAssembly/gc/blob/main/proposals/gc/MVP.md"

struct_new_default: &struct_new_default
  name: struct.new_default
  bound_vars:
    - name: opname
      type: str
      docs: The name of the activated opcode.
      lifetime: static
      derived_from: "\"struct.new_default\""
    - name: bytecode
      type: u16
      docs: The byte(s) that identify this opcode in the Wasm binary format.
      lifetime: static
      derived_from: 0xFB01
    - *category_id_gc
    - *category_name_gc
    - *imm0_u32
    - *struct_tid
  bound_fns: []
  supported_modes: *default_modes

  docs: "https://github.com/WebAssembly/gc/blob/main/proposals/gc/MVP.md"

struct_get: &struct_get
  name: struct.get
  bound_vars:
    - name: opname
      type: str
      docs: The name of the activated opcode.
      lifetime: static
      derived_from: "\"struct.get\""
    - name: bytecode
      type: u16
      docs: The byte(s) that identify this opcode in the Wasm binary format.
      lifetime: static
      derived_from: 0xFB02
    - *category_id_gc
    - *category_name_gc
    - *imm0_u32
    - *imm1_u32
    - *struct_tid
    - *field_idx
    - *argN           # TODO -- there's no support for this arg type at the moment
  bound_fns: []
  supported_modes: *default_modes

  docs: "https://github.com/WebAssembly/gc/blob/main/proposals/gc/MVP.md"

struct_get_s: &struct_get_s
  name: struct.get_s
  bound_vars:
    - name: opname
      type: str
      docs: The name of the activated opcode.
      lifetime: static
      derived_from: "\"struct.get_s\""
    - name: bytecode
      type: u16
      docs: The byte(s) that identify this opcode in the Wasm binary format.
      lifetime: static
      derived_from: 0xFB03
    - *category_id_gc
    - *category_name_gc
    - *imm0_u32
    - *imm1_u32
    - *struct_tid
    - *field_idx
    - *argN           # TODO -- there's no support for this arg type at the moment
  bound_fns: []
  supported_modes: *default_modes

  docs: "https://github.com/WebAssembly/gc/blob/main/proposals/gc/MVP.md"

struct_get_u: &struct_get_u
  name: struct.get_u
  bound_vars:
    - name: opname
      type: str
      docs: The name of the activated opcode.
      lifetime: static
      derived_from: "\"struct.get_u\""
    - name: bytecode
      type: u16
      docs: The byte(s) that identify this opcode in the Wasm binary format.
      lifetime: static
      derived_from: 0xFB04
    - *category_id_gc
    - *category_name_gc
    - *imm0_u32
    - *imm1_u32
    - *struct_tid
    - *field_idx
    - *argN           # TODO -- there's no support for this arg type at the moment
  bound_fns: []
  supported_modes: *default_modes

  docs: "https://github.com/WebAssembly/gc/blob/main/proposals/gc/MVP.md"

struct_set: &struct_set
  name: struct.set
  bound_vars:
    - name: opname
      type: str
      docs: The name of the activated opcode.
      lifetime: static
      derived_from: "\"struct.set\""
    - name: bytecode
      type: u16
      docs: The byte(s) that identify this opcode in the Wasm binary format.
      lifetime: static
      derived_from: 0xFB05
    - *category_id_gc
    - *category_name_gc
    - *imm0_u32
    - *imm1_u32
    - *struct_tid
    - *field_idx
    - *argN           # TODO -- there's no support for this arg type at the moment
  bound_fns: []
  supported_modes: *default_modes

  docs: "https://github.com/WebAssembly/gc/blob/main/proposals/gc/MVP.md"

array_new: &array_new
  name: array.new
  bound_vars:
    - name: opname
      type: str
      docs: The name of the activated opcode.
      lifetime: static
      derived_from: "\"array.new\""
    - name: bytecode
      type: u16
      docs: The byte(s) that identify this opcode in the Wasm binary format.
      lifetime: static
      derived_from: 0xFB06
    - *category_id_gc
    - *category_name_gc
    - *imm0_u32
    - *array_tid
    - *arg0_u32
    - *argN
  bound_fns: []
  supported_modes: *default_modes

  docs: "https://github.com/WebAssembly/gc/blob/main/proposals/gc/MVP.md"

array_new_default: &array_new_default
  name: array.new_default
  bound_vars:
    - name: opname
      type: str
      docs: The name of the activated opcode.
      lifetime: static
      derived_from: "\"array.new_default\""
    - name: bytecode
      type: u16
      docs: The byte(s) that identify this opcode in the Wasm binary format.
      lifetime: static
      derived_from: 0xFB07
    - *category_id_gc
    - *category_name_gc
    - *imm0_u32
    - *array_tid
    - *arg0_u32
  bound_fns: []
  supported_modes: *default_modes

  docs: "https://github.com/WebAssembly/gc/blob/main/proposals/gc/MVP.md"

array_new_fixed: &array_new_fixed
  name: array.new_fixed
  bound_vars:
    - name: opname
      type: str
      docs: The name of the activated opcode.
      lifetime: static
      derived_from: "\"array.new_fixed\""
    - name: bytecode
      type: u16
      docs: The byte(s) that identify this opcode in the Wasm binary format.
      lifetime: static
      derived_from: 0xFB08
    - *category_id_gc
    - *category_name_gc
    - *imm0_u32
    - *array_tid
    - *imm1_u32
    - *argN
  bound_fns: []
  supported_modes: *default_modes

  docs: "https://github.com/WebAssembly/gc/blob/main/proposals/gc/MVP.md"

array_new_data: &array_new_data
  name: array.new_data
  bound_vars:
    - name: opname
      type: str
      docs: The name of the activated opcode.
      lifetime: static
      derived_from: "\"array.new_data\""
    - name: bytecode
      type: u16
      docs: The byte(s) that identify this opcode in the Wasm binary format.
      lifetime: static
      derived_from: 0xFB09
    - *category_id_gc
    - *category_name_gc
    - *imm0_u32
    - *array_tid
    - *imm1_u32
    - *arg0_i32
    - *arg1_i32
  bound_fns: []
  supported_modes: *default_modes

  docs: "https://github.com/WebAssembly/gc/blob/main/proposals/gc/MVP.md"

array_new_elem: &array_new_elem
  name: array.new_elem
  bound_vars:
    - name: opname
      type: str
      docs: The name of the activated opcode.
      lifetime: static
      derived_from: "\"array.new_elem\""
    - name: bytecode
      type: u16
      docs: The byte(s) that identify this opcode in the Wasm binary format.
      lifetime: static
      derived_from: 0xFB0A
    - *category_id_gc
    - *category_name_gc
    - *imm0_u32
    - *array_tid
    - *imm1_u32
    - *arg0_i32
    - *arg1_i32
  bound_fns: []
  supported_modes: *default_modes

  docs: "https://github.com/WebAssembly/gc/blob/main/proposals/gc/MVP.md"

array_get: &array_get
  name: array.get
  bound_vars:
    - name: opname
      type: str
      docs: The name of the activated opcode.
      lifetime: static
      derived_from: "\"array.get\""
    - name: bytecode
      type: u16
      docs: The byte(s) that identify this opcode in the Wasm binary format.
      lifetime: static
      derived_from: 0xFB0B
    - *category_id_gc
    - *category_name_gc
    - *imm0_u32
    - *array_tid
    - *argN               # TODO -- there's no support for this arg type at the moment
  bound_fns: []
  supported_modes: *default_modes

  docs: "https://github.com/WebAssembly/gc/blob/main/proposals/gc/MVP.md"

array_get_s: &array_get_s
  name: array.get_s
  bound_vars:
    - name: opname
      type: str
      docs: The name of the activated opcode.
      lifetime: static
      derived_from: "\"array.get_s\""
    - name: bytecode
      type: u16
      docs: The byte(s) that identify this opcode in the Wasm binary format.
      lifetime: static
      derived_from: 0xFB0C
    - *category_id_gc
    - *category_name_gc
    - *imm0_u32
    - *array_tid
    - *argN               # TODO -- there's no support for this arg type at the moment
  bound_fns: []
  supported_modes: *default_modes

  docs: "https://github.com/WebAssembly/gc/blob/main/proposals/gc/MVP.md"

array_get_u: &array_get_u
  name: array.get_u
  bound_vars:
    - name: opname
      type: str
      docs: The name of the activated opcode.
      lifetime: static
      derived_from: "\"array.get_u\""
    - name: bytecode
      type: u16
      docs: The byte(s) that identify this opcode in the Wasm binary format.
      lifetime: static
      derived_from: 0xFB0D
    - *category_id_gc
    - *category_name_gc
    - *imm0_u32
    - *array_tid
    - *argN               # TODO -- there's no support for this arg type at the moment
  bound_fns: []
  supported_modes: *default_modes

  docs: "https://github.com/WebAssembly/gc/blob/main/proposals/gc/MVP.md"

array_set: &array_set
  name: array.set
  bound_vars:
    - name: opname
      type: str
      docs: The name of the activated opcode.
      lifetime: static
      derived_from: "\"array.set\""
    - name: bytecode
      type: u16
      docs: The byte(s) that identify this opcode in the Wasm binary format.
      lifetime: static
      derived_from: 0xFB0E
    - *category_id_gc
    - *category_name_gc
    - *imm0_u32
    - *array_tid
    - *argN               # TODO -- there's no support for this arg type at the moment
  bound_fns: []
  supported_modes: *default_modes

  docs: "https://github.com/WebAssembly/gc/blob/main/proposals/gc/MVP.md"

array_len: &array_len
  name: array.len
  bound_vars:
    - name: opname
      type: str
      docs: The name of the activated opcode.
      lifetime: static
      derived_from: "\"array.len\""
    - name: bytecode
      type: u16
      docs: The byte(s) that identify this opcode in the Wasm binary format.
      lifetime: static
      derived_from: 0xFB0F
    - *category_id_gc
    - *category_name_gc
    - *imm0_u32
    - *array_tid
    - *argN               # TODO -- there's no support for this arg type at the moment
  bound_fns: []
  supported_modes: *default_modes

  docs: "https://github.com/WebAssembly/gc/blob/main/proposals/gc/MVP.md"

array_fill: &array_fill
  name: array.fill
  bound_vars:
    - name: opname
      type: str
      docs: The name of the activated opcode.
      lifetime: static
      derived_from: "\"array.fill\""
    - name: bytecode
      type: u16
      docs: The byte(s) that identify this opcode in the Wasm binary format.
      lifetime: static
      derived_from: 0xFB10
    - *category_id_gc
    - *category_name_gc
    - *imm0_u32
    - *array_tid
    - *argN               # TODO -- there's no support for this arg type at the moment
  bound_fns: []
  supported_modes: *default_modes

  docs: "https://github.com/WebAssembly/gc/blob/main/proposals/gc/MVP.md"

array_copy: &array_copy
  name: array.copy
  bound_vars:
    - name: opname
      type: str
      docs: The name of the activated opcode.
      lifetime: static
      derived_from: "\"array.copy\""
    - name: bytecode
      type: u16
      docs: The byte(s) that identify this opcode in the Wasm binary format.
      lifetime: static
      derived_from: 0xFB11
    - *category_id_gc
    - *category_name_gc
    - *imm0_u32
    - *imm1_u32
    - *argN
  bound_fns: []
  supported_modes: *default_modes

  docs: "https://github.com/WebAssembly/gc/blob/main/proposals/gc/MVP.md"

array_init_data: &array_init_data
  name: array.init_data
  bound_vars:
    - name: opname
      type: str
      docs: The name of the activated opcode.
      lifetime: static
      derived_from: "\"array.init_data\""
    - name: bytecode
      type: u16
      docs: The byte(s) that identify this opcode in the Wasm binary format.
      lifetime: static
      derived_from: 0xFB12
    - *category_id_gc
    - *category_name_gc
    - *imm0_u32
    - *array_tid
    - *imm1_u32
    - *argN
  bound_fns: []
  supported_modes: *default_modes

  docs: "https://github.com/WebAssembly/gc/blob/main/proposals/gc/MVP.md"

array_init_elem: &array_init_elem
  name: array.init_elem
  bound_vars:
    - name: opname
      type: str
      docs: The name of the activated opcode.
      lifetime: static
      derived_from: "\"array.init_elem\""
    - name: bytecode
      type: u16
      docs: The byte(s) that identify this opcode in the Wasm binary format.
      lifetime: static
      derived_from: 0xFB13
    - *category_id_gc
    - *category_name_gc
    - *imm0_u32
    - *array_tid
    - *imm1_u32
    - *argN
  bound_fns: []
  supported_modes: *default_modes

  docs: "https://github.com/WebAssembly/gc/blob/main/proposals/gc/MVP.md"

ref_test: &ref_test
  name: ref.test
  bound_vars:
    - name: opname
      type: str
      docs: The name of the activated opcode.
      lifetime: static
      derived_from: "\"ref.test\""
    - name: bytecode
      type: u16
      docs: The byte(s) that identify this opcode in the Wasm binary format.
      lifetime: static
      derived_from: 0xFB14
    - *category_id_gc
    - *category_name_gc
    - *immN
    - *argN
  bound_fns: []
  supported_modes: *default_modes

  docs: "https://github.com/WebAssembly/gc/blob/main/proposals/gc/MVP.md"

ref_test_null: &ref_test_null
  name: ref.test_null
  bound_vars:
    - name: opname
      type: str
      docs: The name of the activated opcode.
      lifetime: static
      derived_from: "\"ref.test_null\""
    - name: bytecode
      type: u16
      docs: The byte(s) that identify this opcode in the Wasm binary format.
      lifetime: static
      derived_from: 0xFB15
    - *category_id_gc
    - *category_name_gc
    - *immN
    - *argN
  bound_fns: []
  supported_modes: *default_modes

  docs: "https://github.com/WebAssembly/gc/blob/main/proposals/gc/MVP.md"

ref_cast: &ref_cast
  name: ref.cast
  bound_vars:
    - name: opname
      type: str
      docs: The name of the activated opcode.
      lifetime: static
      derived_from: "\"ref.cast\""
    - name: bytecode
      type: u16
      docs: The byte(s) that identify this opcode in the Wasm binary format.
      lifetime: static
      derived_from: 0xFB16
    - *category_id_gc
    - *category_name_gc
    - *immN
    - *argN
  bound_fns: []
  supported_modes: *default_modes

  docs: "https://github.com/WebAssembly/gc/blob/main/proposals/gc/MVP.md"

ref_cast_null: &ref_cast_null
  name: ref.cast_null
  bound_vars:
    - name: opname
      type: str
      docs: The name of the activated opcode.
      lifetime: static
      derived_from: "\"ref.cast_null\""
    - name: bytecode
      type: u16
      docs: The byte(s) that identify this opcode in the Wasm binary format.
      lifetime: static
      derived_from: 0xFB17
    - *category_id_gc
    - *category_name_gc
    - *immN
    - *argN
  bound_fns: []
  supported_modes: *default_modes

  docs: "https://github.com/WebAssembly/gc/blob/main/proposals/gc/MVP.md"

br_on_cast: &br_on_cast
  name: br_on_cast
  bound_vars:
    - name: opname
      type: str
      docs: The name of the activated opcode.
      lifetime: static
      derived_from: "\"br_on_cast\""
    - name: bytecode
      type: u16
      docs: The byte(s) that identify this opcode in the Wasm binary format.
      lifetime: static
      derived_from: 0xFB18
    - *category_id_control
    - *category_name_control
    - *imm0_u32
    - *imm1_unknown
    - *imm2_unknown
    - *argN
  bound_fns: []
  supported_modes: *default_modes

  docs: "https://github.com/WebAssembly/gc/blob/main/proposals/gc/MVP.md"

br_on_cast_fail: &br_on_cast_fail
  name: br_on_cast_fail
  bound_vars:
    - name: opname
      type: str
      docs: The name of the activated opcode.
      lifetime: static
      derived_from: "\"br_on_cast_fail\""
    - name: bytecode
      type: u16
      docs: The byte(s) that identify this opcode in the Wasm binary format.
      lifetime: static
      derived_from: 0xFB19
    - *category_id_control
    - *category_name_control
    - *imm0_u32
    - *imm1_unknown
    - *imm2_unknown
    - *argN
  bound_fns: []
  supported_modes: *default_modes

  docs: "https://github.com/WebAssembly/gc/blob/main/proposals/gc/MVP.md"

any_convert_extern: &any_convert_extern
  name: any.convert_extern
  bound_vars:
    - name: opname
      type: str
      docs: The name of the activated opcode.
      lifetime: static
      derived_from: "\"any.convert_extern\""
    - name: bytecode
      type: u16
      docs: The byte(s) that identify this opcode in the Wasm binary format.
      lifetime: static
      derived_from: 0xFB1A
    - *category_id_gc
    - *category_name_gc
    - *argN
  bound_fns: []
  supported_modes: *default_modes

  docs: "https://github.com/WebAssembly/gc/blob/main/proposals/gc/MVP.md"

extern_convert_any: &extern_convert_any
  name: extern.convert_any
  bound_vars:
    - name: opname
      type: str
      docs: The name of the activated opcode.
      lifetime: static
      derived_from: "\"extern.convert_any\""
    - name: bytecode
      type: u16
      docs: The byte(s) that identify this opcode in the Wasm binary format.
      lifetime: static
      derived_from: 0xFB1B
    - *category_id_gc
    - *category_name_gc
    - *argN
  bound_fns: []
  supported_modes: *default_modes

  docs: "https://github.com/WebAssembly/gc/blob/main/proposals/gc/MVP.md"

ref_i31: &ref_i31
  name: ref.i31
  bound_vars:
    - name: opname
      type: str
      docs: The name of the activated opcode.
      lifetime: static
      derived_from: "\"ref.i31\""
    - name: bytecode
      type: u16
      docs: The byte(s) that identify this opcode in the Wasm binary format.
      lifetime: static
      derived_from: 0xFB1C
    - *category_id_gc
    - *category_name_gc
    - *arg0_i32
  bound_fns: []
  supported_modes: *default_modes

  docs: "https://github.com/WebAssembly/gc/blob/main/proposals/gc/MVP.md"

i31_get_s: &i31_get_s
  name: i31.get_s
  bound_vars:
    - name: opname
      type: str
      docs: The name of the activated opcode.
      lifetime: static
      derived_from: "\"i31.get_s\""
    - name: bytecode
      type: u16
      docs: The byte(s) that identify this opcode in the Wasm binary format.
      lifetime: static
      derived_from: 0xFB1D
    - *category_id_gc
    - *category_name_gc
    - *argN
  bound_fns: []
  supported_modes: *default_modes

  docs: "https://github.com/WebAssembly/gc/blob/main/proposals/gc/MVP.md"

i31_get_u: &i31_get_u
  name: i31.get_u
  bound_vars:
    - name: opname
      type: str
      docs: The name of the activated opcode.
      lifetime: static
      derived_from: "\"i31.get_u\""
    - name: bytecode
      type: u16
      docs: The byte(s) that identify this opcode in the Wasm binary format.
      lifetime: static
      derived_from: 0xFB1E
    - *category_id_gc
    - *category_name_gc
    - *argN
  bound_fns: []
  supported_modes: *default_modes

  docs: "https://github.com/WebAssembly/gc/blob/main/proposals/gc/MVP.md"

i32_trunc_sat_f32_s: &i32_trunc_sat_f32_s
  name: i32.trunc_sat_f32_s
  bound_vars:
    - name: opname
      type: str
      docs: The name of the activated opcode.
      lifetime: static
      derived_from: "\"i32.trunc_sat_f32_s\""
    - name: bytecode
      type: u16
      docs: The byte(s) that identify this opcode in the Wasm binary format.
      lifetime: static
      derived_from: 0xFC00
    - *category_id_convert
    - *category_name_convert
    - *arg0_f32
  bound_fns: []
  supported_modes: *default_modes

  docs: "https://pengowray.github.io/wasm-ops/"

i32_trunc_sat_f32_u: &i32_trunc_sat_f32_u
  name: i32.trunc_sat_f32_u
  bound_vars:
    - name: opname
      type: str
      docs: The name of the activated opcode.
      lifetime: static
      derived_from: "\"i32.trunc_sat_f32_u\""
    - name: bytecode
      type: u16
      docs: The byte(s) that identify this opcode in the Wasm binary format.
      lifetime: static
      derived_from: 0xFC01
    - *category_id_convert
    - *category_name_convert
    - *arg0_f32
  bound_fns: []
  supported_modes: *default_modes

  docs: "https://pengowray.github.io/wasm-ops/"

i32_trunc_sat_f64_s: &i32_trunc_sat_f64_s
  name: i32.trunc_sat_f64_s
  bound_vars:
    - name: opname
      type: str
      docs: The name of the activated opcode.
      lifetime: static
      derived_from: "\"i32.trunc_sat_f64_s\""
    - name: bytecode
      type: u16
      docs: The byte(s) that identify this opcode in the Wasm binary format.
      lifetime: static
      derived_from: 0xFC02
    - *category_id_convert
    - *category_name_convert
    - *arg0_f64
  bound_fns: []
  supported_modes: *default_modes

  docs: "https://pengowray.github.io/wasm-ops/"

i32_trunc_sat_f64_u: &i32_trunc_sat_f64_u
  name: i32.trunc_sat_f64_u
  bound_vars:
    - name: opname
      type: str
      docs: The name of the activated opcode.
      lifetime: static
      derived_from: "\"i32.trunc_sat_f64_u\""
    - name: bytecode
      type: u16
      docs: The byte(s) that identify this opcode in the Wasm binary format.
      lifetime: static
      derived_from: 0xFC03
    - *category_id_convert
    - *category_name_convert
    - *arg0_f64
  bound_fns: []
  supported_modes: *default_modes

  docs: "https://pengowray.github.io/wasm-ops/"

i64_trunc_sat_f32_s: &i64_trunc_sat_f32_s
  name: i64.trunc_sat_f32_s
  bound_vars:
    - name: opname
      type: str
      docs: The name of the activated opcode.
      lifetime: static
      derived_from: "\"i64.trunc_sat_f32_s\""
    - name: bytecode
      type: u16
      docs: The byte(s) that identify this opcode in the Wasm binary format.
      lifetime: static
      derived_from: 0xFC04
    - *category_id_convert
    - *category_name_convert
    - *arg0_f32
  bound_fns: []
  supported_modes: *default_modes

  docs: "https://pengowray.github.io/wasm-ops/"

i64_trunc_sat_f32_u: &i64_trunc_sat_f32_u
  name: i64.trunc_sat_f32_u
  bound_vars:
    - name: opname
      type: str
      docs: The name of the activated opcode.
      lifetime: static
      derived_from: "\"i64.trunc_sat_f32_u\""
    - name: bytecode
      type: u16
      docs: The byte(s) that identify this opcode in the Wasm binary format.
      lifetime: static
      derived_from: 0xFC05
    - *category_id_convert
    - *category_name_convert
    - *arg0_f32
  bound_fns: []
  supported_modes: *default_modes

  docs: "https://pengowray.github.io/wasm-ops/"

i64_trunc_sat_f64_s: &i64_trunc_sat_f64_s
  name: i64.trunc_sat_f64_s
  bound_vars:
    - name: opname
      type: str
      docs: The name of the activated opcode.
      lifetime: static
      derived_from: "\"i64.trunc_sat_f64_s\""
    - name: bytecode
      type: u16
      docs: The byte(s) that identify this opcode in the Wasm binary format.
      lifetime: static
      derived_from: 0xFC06
    - *category_id_convert
    - *category_name_convert
    - *arg0_f64
  bound_fns: []
  supported_modes: *default_modes

  docs: "https://pengowray.github.io/wasm-ops/"

i64_trunc_sat_f64_u: &i64_trunc_sat_f64_u
  name: i64.trunc_sat_f64_u
  bound_vars:
    - name: opname
      type: str
      docs: The name of the activated opcode.
      lifetime: static
      derived_from: "\"i64.trunc_sat_f64_u\""
    - name: bytecode
      type: u16
      docs: The byte(s) that identify this opcode in the Wasm binary format.
      lifetime: static
      derived_from: 0xFC07
    - *category_id_convert
    - *category_name_convert
    - *arg0_f64
  bound_fns: []
  supported_modes: *default_modes

  docs: "https://pengowray.github.io/wasm-ops/"

memory_init: &memory_init
  name: memory.init
  bound_vars:
    - name: opname
      type: str
      docs: The name of the activated opcode.
      lifetime: static
      derived_from: "\"memory.init\""
    - name: bytecode
      type: u16
      docs: The byte(s) that identify this opcode in the Wasm binary format.
      lifetime: static
      derived_from: 0xFC08
    - *category_id_memory
    - *category_name_memory
    - *imm0_u32
    - *imm1_u32
  bound_fns: []
  supported_modes: *default_modes

  docs: "https://pengowray.github.io/wasm-ops/"

data_drop: &data_drop
  name: data.drop
  bound_vars:
    - name: opname
      type: str
      docs: The name of the activated opcode.
      lifetime: static
      derived_from: "\"data.drop\""
    - name: bytecode
      type: u16
      docs: The byte(s) that identify this opcode in the Wasm binary format.
      lifetime: static
      derived_from: 0xFC09
    - *category_id_memory
    - *category_name_memory
    - *imm0_u32
  bound_fns: []
  supported_modes: *default_modes

  docs: "https://pengowray.github.io/wasm-ops/"

memory_copy: &memory_copy
  name: memory.copy
  bound_vars:
    - name: opname
      type: str
      docs: The name of the activated opcode.
      lifetime: static
      derived_from: "\"memory.copy\""
    - name: bytecode
      type: u16
      docs: The byte(s) that identify this opcode in the Wasm binary format.
      lifetime: static
      derived_from: 0xFC0A
    - *category_id_memory
    - *category_name_memory
    - *imm0_u32
    - *arg0_i32
    - *arg1_i32
    - *arg2_i32
  bound_fns: []
  supported_modes: *default_modes

  docs: "https://developer.mozilla.org/en-US/docs/WebAssembly/Reference/Memory/Copy"

memory_fill: &memory_fill
  name: memory.fill
  bound_vars:
    - name: opname
      type: str
      docs: The name of the activated opcode.
      lifetime: static
      derived_from: "\"memory.fill\""
    - name: bytecode
      type: u16
      docs: The byte(s) that identify this opcode in the Wasm binary format.
      lifetime: static
      derived_from: 0xFC0B
    - *category_id_memory
    - *category_name_memory
    - *imm0_u32
    - *arg0_i32
    - *arg1_i32
    - *arg2_i32
  bound_fns: []
  supported_modes: *default_modes

  docs: "https://developer.mozilla.org/en-US/docs/WebAssembly/Reference/Memory/Fill"

table_init: &table_init
  name: table.init
  bound_vars:
    - name: opname
      type: str
      docs: The name of the activated opcode.
      lifetime: static
      derived_from: "\"table.init\""
    - name: bytecode
      type: u16
      docs: The byte(s) that identify this opcode in the Wasm binary format.
      lifetime: static
      derived_from: 0xFC0C
    - *category_id_table
    - *category_name_table
    - *imm0_u32
    - *imm1_u32
    - *arg0_i32
    - *arg1_i32
    - *arg2_i32
  bound_fns: []
  supported_modes: *default_modes

  docs: "https://github.com/WebAssembly/reference-types/blob/master/proposals/reference-types/Overview.md"

elem_drop: &elem_drop
  name: elem.drop
  bound_vars:
    - name: opname
      type: str
      docs: The name of the activated opcode.
      lifetime: static
      derived_from: "\"elem.drop\""
    - name: bytecode
      type: u16
      docs: The byte(s) that identify this opcode in the Wasm binary format.
      lifetime: static
      derived_from: 0xFC0D
    - *category_id_table
    - *category_name_table
    - *imm0_u32
  bound_fns: []
  supported_modes: *default_modes

  docs: "https://pengowray.github.io/wasm-ops/"

table_copy: &table_copy
  name: table.copy
  bound_vars:
    - name: opname
      type: str
      docs: The name of the activated opcode.
      lifetime: static
      derived_from: "\"table.copy\""
    - name: bytecode
      type: u16
      docs: The byte(s) that identify this opcode in the Wasm binary format.
      lifetime: static
      derived_from: 0xFC0E
    - *category_id_table
    - *category_name_table
    - *imm0_u32
    - *imm1_u32
    - *arg0_i32
    - *arg1_i32
    - *arg2_i32
  bound_fns: []
  supported_modes: *default_modes

  docs: "https://github.com/WebAssembly/reference-types/blob/master/proposals/reference-types/Overview.md"

table_grow: &table_grow
  name: table.grow
  bound_vars:
    - name: opname
      type: str
      docs: The name of the activated opcode.
      lifetime: static
      derived_from: "\"table.grow\""
    - name: bytecode
      type: u16
      docs: The byte(s) that identify this opcode in the Wasm binary format.
      lifetime: static
      derived_from: 0xFC0F
    - *category_id_table
    - *category_name_table
    - *imm0_u32
    - *argN
  bound_fns: []
  supported_modes: *default_modes

  docs: "https://github.com/WebAssembly/reference-types/blob/master/proposals/reference-types/Overview.md"

table_size: &table_size
  name: table.size
  bound_vars:
    - name: opname
      type: str
      docs: The name of the activated opcode.
      lifetime: static
      derived_from: "\"table.size\""
    - name: bytecode
      type: u16
      docs: The byte(s) that identify this opcode in the Wasm binary format.
      lifetime: static
      derived_from: 0xFC10
    - *category_id_table
    - *category_name_table
    - *imm0_u32
  bound_fns: []
  supported_modes: *default_modes

  docs: "https://github.com/WebAssembly/reference-types/blob/master/proposals/reference-types/Overview.md"

table_fill: &table_fill
  name: table.fill
  bound_vars:
    - name: opname
      type: str
      docs: The name of the activated opcode.
      lifetime: static
      derived_from: "\"table.fill\""
    - name: bytecode
      type: u16
      docs: The byte(s) that identify this opcode in the Wasm binary format.
      lifetime: static
      derived_from: 0xFC11
    - *category_id_table
    - *category_name_table
    - *imm0_u32
    - *argN
  bound_fns: []
  supported_modes: *default_modes

  docs: "https://github.com/WebAssembly/reference-types/blob/master/proposals/reference-types/Overview.md"

memory_atomic_notify: &memory_atomic_notify
  name: memory.atomic_notify
  bound_vars:
    - name: opname
      type: str
      docs: The name of the activated opcode.
      lifetime: static
      derived_from: "\"memory.atomic_notify\""
    - name: bytecode
      type: u16
      docs: The byte(s) that identify this opcode in the Wasm binary format.
      lifetime: static
      derived_from: 0xFE00
    - name: addr
      type: u32
      derived_from: arg1
      lifetime: dynamic
      docs: The memory address argument passed to the opcode.
    - *category_id_atomic
    - *category_name_atomic
    - *memory
    - *align
    - *effective_addr
    - *is_write_false
    - *offset
    - *arg0_i32
    - *arg1_u32
  bound_fns: []
  supported_modes: *default_modes

  docs: "https://github.com/WebAssembly/threads/blob/main/proposals/threads/Overview.md"

memory_atomic_wait32: &memory_atomic_wait32
  name: memory.atomic_wait32
  bound_vars:
    - name: opname
      type: str
      docs: The name of the activated opcode.
      lifetime: static
      derived_from: "\"memory.atomic_wait32\""
    - name: bytecode
      type: u16
      docs: The byte(s) that identify this opcode in the Wasm binary format.
      lifetime: static
      derived_from: 0xFE01
    - name: addr
      type: u32
      derived_from: arg2
      lifetime: dynamic
      docs: The memory address argument passed to the opcode.
    - *category_id_atomic
    - *category_name_atomic
    - *memory
    - *align
    - *effective_addr
    - *is_write_false
    - *offset
    - *arg0_i64
    - *arg1_i32
    - *arg2_u32
  bound_fns: []
  supported_modes: *default_modes

  docs: "https://github.com/WebAssembly/threads/blob/main/proposals/threads/Overview.md"

memory_atomic_wait64: &memory_atomic_wait64
  name: memory.atomic_wait64
  bound_vars:
    - name: opname
      type: str
      docs: The name of the activated opcode.
      lifetime: static
      derived_from: "\"memory.atomic_wait64\""
    - name: bytecode
      type: u16
      docs: The byte(s) that identify this opcode in the Wasm binary format.
      lifetime: static
      derived_from: 0xFE02
    - name: addr
      type: u32
      derived_from: arg2
      lifetime: dynamic
      docs: The memory address argument passed to the opcode.
    - *category_id_atomic
    - *category_name_atomic
    - *memory
    - *align
    - *effective_addr
    - *is_write_false
    - *offset
    - *arg0_i64
    - *arg1_i64
    - *arg2_u32
  bound_fns: []
  supported_modes: *default_modes

  docs: "https://github.com/WebAssembly/threads/blob/main/proposals/threads/Overview.md"

atomic_fence: &atomic_fence
  name: atomic.fence
  bound_vars:
    - name: opname
      type: str
      docs: The name of the activated opcode.
      lifetime: static
      derived_from: "\"atomic.fence\""
    - name: bytecode
      type: u16
      docs: The byte(s) that identify this opcode in the Wasm binary format.
      lifetime: static
      derived_from: 0xFE03
    - *category_id_atomic
    - *category_name_atomic
  bound_fns: []
  supported_modes: *default_modes

  docs: "https://github.com/WebAssembly/threads/blob/main/proposals/threads/Overview.md"

i32_atomic_load: &i32_atomic_load
  name: i32.atomic_load
  bound_vars:
    - name: opname
      type: str
      docs: The name of the activated opcode.
      lifetime: static
      derived_from: "\"i32.atomic_load\""
    - name: bytecode
      type: u16
      docs: The byte(s) that identify this opcode in the Wasm binary format.
      lifetime: static
      derived_from: 0xFE10
    - name: data_size
      type: u32
      derived_from: 4
      lifetime: static
      docs: The number of bytes that the memory operation is on, e.g. i32.load8_u is 1
    - name: addr
      type: u32
      derived_from: arg0
      lifetime: dynamic
      docs: The memory address argument passed to the opcode.
    - *category_id_atomic
    - *category_name_atomic
    - *memory
    - *align
    - *effective_addr
    - *is_write_false
    - *offset
    - *arg0_u32
    - *res0_i32
  bound_fns: []
  supported_modes: *default_modes

  docs: "https://github.com/WebAssembly/threads/blob/main/proposals/threads/Overview.md"

i64_atomic_load: &i64_atomic_load
  name: i64.atomic_load
  bound_vars:
    - name: opname
      type: str
      docs: The name of the activated opcode.
      lifetime: static
      derived_from: "\"i64.atomic_load\""
    - name: bytecode
      type: u16
      docs: The byte(s) that identify this opcode in the Wasm binary format.
      lifetime: static
      derived_from: 0xFE11
    - name: data_size
      type: u32
      derived_from: 8
      lifetime: static
      docs: The number of bytes that the memory operation is on, e.g. i32.load8_u is 1
    - name: addr
      type: u32
      derived_from: arg0
      lifetime: dynamic
      docs: The memory address argument passed to the opcode.
    - *category_id_atomic
    - *category_name_atomic
    - *memory
    - *align
    - *effective_addr
    - *is_write_false
    - *offset
    - *arg0_u32
    - *res0_i64
  bound_fns: []
  supported_modes: *default_modes

  docs: "https://github.com/WebAssembly/threads/blob/main/proposals/threads/Overview.md"

i32_atomic_load8_u: &i32_atomic_load8_u
  name: i32.atomic_load8_u
  bound_vars:
    - name: opname
      type: str
      docs: The name of the activated opcode.
      lifetime: static
      derived_from: "\"i32.atomic_load8_u\""
    - name: bytecode
      type: u16
      docs: The byte(s) that identify this opcode in the Wasm binary format.
      lifetime: static
      derived_from: 0xFE12
    - name: data_size
      type: u32
      derived_from: 1
      lifetime: static
      docs: The number of bytes that the memory operation is on, e.g. i32.load8_u is 1
    - name: addr
      type: u32
      derived_from: arg0
      lifetime: dynamic
      docs: The memory address argument passed to the opcode.
    - *category_id_atomic
    - *category_name_atomic
    - *memory
    - *align
    - *effective_addr
    - *is_write_false
    - *offset
    - *arg0_u32
    - *res0_i32
  bound_fns: []
  supported_modes: *default_modes

  docs: "https://github.com/WebAssembly/threads/blob/main/proposals/threads/Overview.md"

i32_atomic_load16_u: &i32_atomic_load16_u
  name: i32.atomic_load16_u
  bound_vars:
    - name: opname
      type: str
      docs: The name of the activated opcode.
      lifetime: static
      derived_from: "\"i32.atomic_load16_u\""
    - name: bytecode
      type: u16
      docs: The byte(s) that identify this opcode in the Wasm binary format.
      lifetime: static
      derived_from: 0xFE13
    - name: data_size
      type: u32
      derived_from: 2
      lifetime: static
      docs: The number of bytes that the memory operation is on, e.g. i32.load8_u is 1
    - name: addr
      type: u32
      derived_from: arg0
      lifetime: dynamic
      docs: The memory address argument passed to the opcode.
    - *category_id_atomic
    - *category_name_atomic
    - *memory
    - *align
    - *effective_addr
    - *is_write_false
    - *offset
    - *arg0_u32
    - *res0_i32
  bound_fns: []
  supported_modes: *default_modes

  docs: "https://github.com/WebAssembly/threads/blob/main/proposals/threads/Overview.md"

i64_atomic_load8_u: &i64_atomic_load8_u
  name: i64.atomic_load8_u
  bound_vars:
    - name: opname
      type: str
      docs: The name of the activated opcode.
      lifetime: static
      derived_from: "\"i64.atomic_load8_u\""
    - name: bytecode
      type: u16
      docs: The byte(s) that identify this opcode in the Wasm binary format.
      lifetime: static
      derived_from: 0xFE14
    - name: data_size
      type: u32
      derived_from: 1
      lifetime: static
      docs: The number of bytes that the memory operation is on, e.g. i32.load8_u is 1
    - name: addr
      type: u32
      derived_from: arg0
      lifetime: dynamic
      docs: The memory address argument passed to the opcode.
    - *category_id_atomic
    - *category_name_atomic
    - *memory
    - *align
    - *effective_addr
    - *is_write_false
    - *offset
    - *arg0_u32
    - *res0_i64
  bound_fns: []
  supported_modes: *default_modes

  docs: "https://github.com/WebAssembly/threads/blob/main/proposals/threads/Overview.md"

i64_atomic_load16_u: &i64_atomic_load16_u
  name: i64.atomic_load16_u
  bound_vars:
    - name: opname
      type: str
      docs: The name of the activated opcode.
      lifetime: static
      derived_from: "\"i64.atomic_load16_u\""
    - name: bytecode
      type: u16
      docs: The byte(s) that identify this opcode in the Wasm binary format.
      lifetime: static
      derived_from: 0xFE15
    - name: data_size
      type: u32
      derived_from: 2
      lifetime: static
      docs: The number of bytes that the memory operation is on, e.g. i32.load8_u is 1
    - name: addr
      type: u32
      derived_from: arg0
      lifetime: dynamic
      docs: The memory address argument passed to the opcode.
    - *category_id_atomic
    - *category_name_atomic
    - *memory
    - *align
    - *effective_addr
    - *is_write_false
    - *offset
    - *arg0_u32
    - *res0_i64
  bound_fns: []
  supported_modes: *default_modes

  docs: "https://github.com/WebAssembly/threads/blob/main/proposals/threads/Overview.md"

i64_atomic_load32_u: &i64_atomic_load32_u
  name: i64.atomic_load32_u
  bound_vars:
    - name: opname
      type: str
      docs: The name of the activated opcode.
      lifetime: static
      derived_from: "\"i64.atomic_load32_u\""
    - name: bytecode
      type: u16
      docs: The byte(s) that identify this opcode in the Wasm binary format.
      lifetime: static
      derived_from: 0xFE16
    - name: data_size
      type: u32
      derived_from: 4
      lifetime: static
      docs: The number of bytes that the memory operation is on, e.g. i32.load8_u is 1
    - name: addr
      type: u32
      derived_from: arg0
      lifetime: dynamic
      docs: The memory address argument passed to the opcode.
    - *category_id_atomic
    - *category_name_atomic
    - *memory
    - *align
    - *effective_addr
    - *is_write_false
    - *offset
    - *arg0_u32
    - *res0_i64
  bound_fns: []
  supported_modes: *default_modes

  docs: "https://github.com/WebAssembly/threads/blob/main/proposals/threads/Overview.md"

i32_atomic_store: &i32_atomic_store
  name: i32.atomic_store
  bound_vars:
    - name: opname
      type: str
      docs: The name of the activated opcode.
      lifetime: static
      derived_from: "\"i32.atomic_store\""
    - name: bytecode
      type: u16
      docs: The byte(s) that identify this opcode in the Wasm binary format.
      lifetime: static
      derived_from: 0xFE17
    - name: data_size
      type: u32
      derived_from: 4
      lifetime: static
      docs: The number of bytes that the memory operation is on, e.g. i32.store8_u is 1
    - name: addr
      type: u32
      derived_from: arg1
      lifetime: dynamic
      docs: The memory address argument passed to the opcode.
    - *category_id_atomic
    - *category_name_atomic
    - *memory
    - *align
    - *effective_addr
    - *is_write_true
    - *offset
    - *arg0_i32
    - *arg1_u32
  bound_fns: []
  supported_modes: *default_modes

  docs: "https://github.com/WebAssembly/threads/blob/main/proposals/threads/Overview.md"

i64_atomic_store: &i64_atomic_store
  name: i64.atomic_store
  bound_vars:
    - name: opname
      type: str
      docs: The name of the activated opcode.
      lifetime: static
      derived_from: "\"i64.atomic_store\""
    - name: bytecode
      type: u16
      docs: The byte(s) that identify this opcode in the Wasm binary format.
      lifetime: static
      derived_from: 0xFE18
    - name: data_size
      type: u32
      derived_from: 8
      lifetime: static
      docs: The number of bytes that the memory operation is on, e.g. i32.store8_u is 1
    - name: addr
      type: u32
      derived_from: arg1
      lifetime: dynamic
      docs: The memory address argument passed to the opcode.
    - *category_id_atomic
    - *category_name_atomic
    - *memory
    - *align
    - *effective_addr
    - *is_write_true
    - *offset
    - *arg0_i64
    - *arg1_u32
  bound_fns: []
  supported_modes: *default_modes

  docs: "https://github.com/WebAssembly/threads/blob/main/proposals/threads/Overview.md"

i32_atomic_store8: &i32_atomic_store8
  name: i32.atomic_store8
  bound_vars:
    - name: opname
      type: str
      docs: The name of the activated opcode.
      lifetime: static
      derived_from: "\"i32.atomic_store8\""
    - name: bytecode
      type: u16
      docs: The byte(s) that identify this opcode in the Wasm binary format.
      lifetime: static
      derived_from: 0xFE19
    - name: data_size
      type: u32
      derived_from: 1
      lifetime: static
      docs: The number of bytes that the memory operation is on, e.g. i32.store8_u is 1
    - name: addr
      type: u32
      derived_from: arg1
      lifetime: dynamic
      docs: The memory address argument passed to the opcode.
    - *category_id_atomic
    - *category_name_atomic
    - *memory
    - *align
    - *effective_addr
    - *is_write_true
    - *offset
    - *arg0_i32
    - *arg1_u32
  bound_fns: []
  supported_modes: *default_modes

  docs: "https://github.com/WebAssembly/threads/blob/main/proposals/threads/Overview.md"

i32_atomic_store16: &i32_atomic_store16
  name: i32.atomic_store16
  bound_vars:
    - name: opname
      type: str
      docs: The name of the activated opcode.
      lifetime: static
      derived_from: "\"i32.atomic_store16\""
    - name: bytecode
      type: u16
      docs: The byte(s) that identify this opcode in the Wasm binary format.
      lifetime: static
      derived_from: 0xFE1A
    - name: data_size
      type: u32
      derived_from: 2
      lifetime: static
      docs: The number of bytes that the memory operation is on, e.g. i32.store8_u is 1
    - name: addr
      type: u32
      derived_from: arg1
      lifetime: dynamic
      docs: The memory address argument passed to the opcode.
    - *category_id_atomic
    - *category_name_atomic
    - *memory
    - *align
    - *effective_addr
    - *is_write_true
    - *offset
    - *arg0_i32
    - *arg1_u32
  bound_fns: []
  supported_modes: *default_modes

  docs: "https://github.com/WebAssembly/threads/blob/main/proposals/threads/Overview.md"

i64_atomic_store8: &i64_atomic_store8
  name: i64.atomic_store8
  bound_vars:
    - name: opname
      type: str
      docs: The name of the activated opcode.
      lifetime: static
      derived_from: "\"i64.atomic_store8\""
    - name: bytecode
      type: u16
      docs: The byte(s) that identify this opcode in the Wasm binary format.
      lifetime: static
      derived_from: 0xFE1B
    - name: data_size
      type: u32
      derived_from: 1
      lifetime: static
      docs: The number of bytes that the memory operation is on, e.g. i32.store8_u is 1
    - name: addr
      type: u32
      derived_from: arg1
      lifetime: dynamic
      docs: The memory address argument passed to the opcode.
    - *category_id_atomic
    - *category_name_atomic
    - *memory
    - *align
    - *effective_addr
    - *is_write_true
    - *offset
    - *arg0_i64
    - *arg1_u32
  bound_fns: []
  supported_modes: *default_modes

  docs: "https://github.com/WebAssembly/threads/blob/main/proposals/threads/Overview.md"

i64_atomic_store16: &i64_atomic_store16
  name: i64.atomic_store16
  bound_vars:
    - name: opname
      type: str
      docs: The name of the activated opcode.
      lifetime: static
      derived_from: "\"i64.atomic_store16\""
    - name: bytecode
      type: u16
      docs: The byte(s) that identify this opcode in the Wasm binary format.
      lifetime: static
      derived_from: 0xFE1C
    - name: data_size
      type: u32
      derived_from: 2
      lifetime: static
      docs: The number of bytes that the memory operation is on, e.g. i32.store8_u is 1
    - name: addr
      type: u32
      derived_from: arg1
      lifetime: dynamic
      docs: The memory address argument passed to the opcode.
    - *category_id_atomic
    - *category_name_atomic
    - *memory
    - *align
    - *effective_addr
    - *is_write_true
    - *offset
    - *arg0_i64
    - *arg1_u32
  bound_fns: []
  supported_modes: *default_modes

  docs: "https://github.com/WebAssembly/threads/blob/main/proposals/threads/Overview.md"

i64_atomic_store32: &i64_atomic_store32
  name: i64.atomic_store32
  bound_vars:
    - name: opname
      type: str
      docs: The name of the activated opcode.
      lifetime: static
      derived_from: "\"i64.atomic_store32\""
    - name: bytecode
      type: u16
      docs: The byte(s) that identify this opcode in the Wasm binary format.
      lifetime: static
      derived_from: 0xFE1D
    - name: data_size
      type: u32
      derived_from: 4
      lifetime: static
      docs: The number of bytes that the memory operation is on, e.g. i32.store8_u is 1
    - name: addr
      type: u32
      derived_from: arg1
      lifetime: dynamic
      docs: The memory address argument passed to the opcode.
    - *category_id_atomic
    - *category_name_atomic
    - *memory
    - *align
    - *effective_addr
    - *is_write_true
    - *offset
    - *arg0_i64
    - *arg1_u32
  bound_fns: []
  supported_modes: *default_modes

  docs: "https://github.com/WebAssembly/threads/blob/main/proposals/threads/Overview.md"

i32_atomic_rmw_add: &i32_atomic_rmw_add
  name: i32.atomic_rmw_add
  bound_vars:
    - name: opname
      type: str
      docs: The name of the activated opcode.
      lifetime: static
      derived_from: "\"i32.atomic_rmw_add\""
    - name: bytecode
      type: u16
      docs: The byte(s) that identify this opcode in the Wasm binary format.
      lifetime: static
      derived_from: 0xFE1E
    - name: data_size
      type: u32
      derived_from: 4
      lifetime: static
      docs: The number of bytes that the memory operation is on, e.g. i32.load8_u is 1
    - name: addr
      type: u32
      derived_from: arg1
      lifetime: dynamic
      docs: The memory address argument passed to the opcode.
    - *category_id_atomic
    - *category_name_atomic
    - *memory
    - *align
    - *effective_addr
    - *is_write_true
    - *offset
    - *arg0_i32
    - *arg1_u32
  bound_fns: []
  supported_modes: *default_modes

  docs: "https://github.com/WebAssembly/threads/blob/main/proposals/threads/Overview.md"

i64_atomic_rmw_add: &i64_atomic_rmw_add
  name: i64.atomic_rmw_add
  bound_vars:
    - name: opname
      type: str
      docs: The name of the activated opcode.
      lifetime: static
      derived_from: "\"i64.atomic_rmw_add\""
    - name: bytecode
      type: u16
      docs: The byte(s) that identify this opcode in the Wasm binary format.
      lifetime: static
      derived_from: 0xFE1F
    - name: data_size
      type: u32
      derived_from: 8
      lifetime: static
      docs: The number of bytes that the memory operation is on, e.g. i32.load8_u is 1
    - name: addr
      type: u32
      derived_from: arg1
      lifetime: dynamic
      docs: The memory address argument passed to the opcode.
    - *category_id_atomic
    - *category_name_atomic
    - *memory
    - *align
    - *effective_addr
    - *is_write_true
    - *offset
    - *arg0_i64
    - *arg1_u32
  bound_fns: []
  supported_modes: *default_modes

  docs: "https://github.com/WebAssembly/threads/blob/main/proposals/threads/Overview.md"

i32_atomic_rmw8_add_u: &i32_atomic_rmw8_add_u
  name: i32.atomic_rmw8_add_u
  bound_vars:
    - name: opname
      type: str
      docs: The name of the activated opcode.
      lifetime: static
      derived_from: "\"i32.atomic_rmw8_add_u\""
    - name: bytecode
      type: u16
      docs: The byte(s) that identify this opcode in the Wasm binary format.
      lifetime: static
      derived_from: 0xFE20
    - name: data_size
      type: u32
      derived_from: 1
      lifetime: static
      docs: The number of bytes that the memory operation is on, e.g. i32.load8_u is 1
    - name: addr
      type: u32
      derived_from: arg1
      lifetime: dynamic
      docs: The memory address argument passed to the opcode.
    - *category_id_atomic
    - *category_name_atomic
    - *memory
    - *align
    - *effective_addr
    - *is_write_true
    - *offset
    - *arg0_i32
    - *arg1_u32
  bound_fns: []
  supported_modes: *default_modes

  docs: "https://github.com/WebAssembly/threads/blob/main/proposals/threads/Overview.md"

i32_atomic_rmw16_add_u: &i32_atomic_rmw16_add_u
  name: i32.atomic_rmw16_add_u
  bound_vars:
    - name: opname
      type: str
      docs: The name of the activated opcode.
      lifetime: static
      derived_from: "\"i32.atomic_rmw16_add_u\""
    - name: bytecode
      type: u16
      docs: The byte(s) that identify this opcode in the Wasm binary format.
      lifetime: static
      derived_from: 0xFE21
    - name: data_size
      type: u32
      derived_from: 2
      lifetime: static
      docs: The number of bytes that the memory operation is on, e.g. i32.load8_u is 1
    - name: addr
      type: u32
      derived_from: arg1
      lifetime: dynamic
      docs: The memory address argument passed to the opcode.
    - *category_id_atomic
    - *category_name_atomic
    - *memory
    - *align
    - *effective_addr
    - *is_write_true
    - *offset
    - *arg0_i32
    - *arg1_u32
  bound_fns: []
  supported_modes: *default_modes

  docs: "https://github.com/WebAssembly/threads/blob/main/proposals/threads/Overview.md"

i64_atomic_rmw8_add_u: &i64_atomic_rmw8_add_u
  name: i64.atomic_rmw8_add_u
  bound_vars:
    - name: opname
      type: str
      docs: The name of the activated opcode.
      lifetime: static
      derived_from: "\"i64.atomic_rmw8_add_u\""
    - name: bytecode
      type: u16
      docs: The byte(s) that identify this opcode in the Wasm binary format.
      lifetime: static
      derived_from: 0xFE22
    - name: data_size
      type: u32
      derived_from: 1
      lifetime: static
      docs: The number of bytes that the memory operation is on, e.g. i32.load8_u is 1
    - name: addr
      type: u32
      derived_from: arg1
      lifetime: dynamic
      docs: The memory address argument passed to the opcode.
    - *category_id_atomic
    - *category_name_atomic
    - *memory
    - *align
    - *effective_addr
    - *is_write_true
    - *offset
    - *arg0_i64
    - *arg1_u32
  bound_fns: []
  supported_modes: *default_modes

  docs: "https://github.com/WebAssembly/threads/blob/main/proposals/threads/Overview.md"

i64_atomic_rmw16_add_u: &i64_atomic_rmw16_add_u
  name: i64.atomic_rmw16_add_u
  bound_vars:
    - name: opname
      type: str
      docs: The name of the activated opcode.
      lifetime: static
      derived_from: "\"i64.atomic_rmw16_add_u\""
    - name: bytecode
      type: u16
      docs: The byte(s) that identify this opcode in the Wasm binary format.
      lifetime: static
      derived_from: 0xFE23
    - name: data_size
      type: u32
      derived_from: 2
      lifetime: static
      docs: The number of bytes that the memory operation is on, e.g. i32.load8_u is 1
    - name: addr
      type: u32
      derived_from: arg1
      lifetime: dynamic
      docs: The memory address argument passed to the opcode.
    - *category_id_atomic
    - *category_name_atomic
    - *memory
    - *align
    - *effective_addr
    - *is_write_true
    - *offset
    - *arg0_i64
    - *arg1_u32
  bound_fns: []
  supported_modes: *default_modes

  docs: "https://github.com/WebAssembly/threads/blob/main/proposals/threads/Overview.md"

i64_atomic_rmw32_add_u: &i64_atomic_rmw32_add_u
  name: i64.atomic_rmw32_add_u
  bound_vars:
    - name: opname
      type: str
      docs: The name of the activated opcode.
      lifetime: static
      derived_from: "\"i64.atomic_rmw32_add_u\""
    - name: bytecode
      type: u16
      docs: The byte(s) that identify this opcode in the Wasm binary format.
      lifetime: static
      derived_from: 0xFE24
    - name: data_size
      type: u32
      derived_from: 4
      lifetime: static
      docs: The number of bytes that the memory operation is on, e.g. i32.load8_u is 1
    - name: addr
      type: u32
      derived_from: arg1
      lifetime: dynamic
      docs: The memory address argument passed to the opcode.
    - *category_id_atomic
    - *category_name_atomic
    - *memory
    - *align
    - *effective_addr
    - *is_write_true
    - *offset
    - *arg0_i64
    - *arg1_u32
  bound_fns: []
  supported_modes: *default_modes

  docs: "https://github.com/WebAssembly/threads/blob/main/proposals/threads/Overview.md"

i32_atomic_rmw_sub: &i32_atomic_rmw_sub
  name: i32.atomic_rmw_sub
  bound_vars:
    - name: opname
      type: str
      docs: The name of the activated opcode.
      lifetime: static
      derived_from: "\"i32.atomic_rmw_sub\""
    - name: bytecode
      type: u16
      docs: The byte(s) that identify this opcode in the Wasm binary format.
      lifetime: static
      derived_from: 0xFE25
    - name: data_size
      type: u32
      derived_from: 4
      lifetime: static
      docs: The number of bytes that the memory operation is on, e.g. i32.load8_u is 1
    - name: addr
      type: u32
      derived_from: arg1
      lifetime: dynamic
      docs: The memory address argument passed to the opcode.
    - *category_id_atomic
    - *category_name_atomic
    - *memory
    - *align
    - *effective_addr
    - *is_write_true
    - *offset
    - *arg0_i32
    - *arg1_u32
  bound_fns: []
  supported_modes: *default_modes

  docs: "https://github.com/WebAssembly/threads/blob/main/proposals/threads/Overview.md"

i64_atomic_rmw_sub: &i64_atomic_rmw_sub
  name: i64.atomic_rmw_sub
  bound_vars:
    - name: opname
      type: str
      docs: The name of the activated opcode.
      lifetime: static
      derived_from: "\"i64.atomic_rmw_sub\""
    - name: bytecode
      type: u16
      docs: The byte(s) that identify this opcode in the Wasm binary format.
      lifetime: static
      derived_from: 0xFE26
    - name: data_size
      type: u32
      derived_from: 8
      lifetime: static
      docs: The number of bytes that the memory operation is on, e.g. i32.load8_u is 1
    - name: addr
      type: u32
      derived_from: arg1
      lifetime: dynamic
      docs: The memory address argument passed to the opcode.
    - *category_id_atomic
    - *category_name_atomic
    - *memory
    - *align
    - *effective_addr
    - *is_write_true
    - *offset
    - *arg0_i64
    - *arg1_u32
  bound_fns: []
  supported_modes: *default_modes

  docs: "https://github.com/WebAssembly/threads/blob/main/proposals/threads/Overview.md"

i32_atomic_rmw8_sub_u: &i32_atomic_rmw8_sub_u
  name: i32.atomic_rmw8_sub_u
  bound_vars:
    - name: opname
      type: str
      docs: The name of the activated opcode.
      lifetime: static
      derived_from: "\"i32.atomic_rmw8_sub_u\""
    - name: bytecode
      type: u16
      docs: The byte(s) that identify this opcode in the Wasm binary format.
      lifetime: static
      derived_from: 0xFE27
    - name: data_size
      type: u32
      derived_from: 1
      lifetime: static
      docs: The number of bytes that the memory operation is on, e.g. i32.load8_u is 1
    - name: addr
      type: u32
      derived_from: arg1
      lifetime: dynamic
      docs: The memory address argument passed to the opcode.
    - *category_id_atomic
    - *category_name_atomic
    - *memory
    - *align
    - *effective_addr
    - *is_write_true
    - *offset
    - *arg0_i32
    - *arg1_u32
  bound_fns: []
  supported_modes: *default_modes

  docs: "https://github.com/WebAssembly/threads/blob/main/proposals/threads/Overview.md"

i32_atomic_rmw16_sub_u: &i32_atomic_rmw16_sub_u
  name: i32.atomic_rmw16_sub_u
  bound_vars:
    - name: opname
      type: str
      docs: The name of the activated opcode.
      lifetime: static
      derived_from: "\"i32.atomic_rmw16_sub_u\""
    - name: bytecode
      type: u16
      docs: The byte(s) that identify this opcode in the Wasm binary format.
      lifetime: static
      derived_from: 0xFE28
    - name: data_size
      type: u32
      derived_from: 2
      lifetime: static
      docs: The number of bytes that the memory operation is on, e.g. i32.load8_u is 1
    - name: addr
      type: u32
      derived_from: arg1
      lifetime: dynamic
      docs: The memory address argument passed to the opcode.
    - *category_id_atomic
    - *category_name_atomic
    - *memory
    - *align
    - *effective_addr
    - *is_write_true
    - *offset
    - *arg0_i32
    - *arg1_u32
  bound_fns: []
  supported_modes: *default_modes

  docs: "https://github.com/WebAssembly/threads/blob/main/proposals/threads/Overview.md"

i64_atomic_rmw8_sub_u: &i64_atomic_rmw8_sub_u
  name: i64.atomic_rmw8_sub_u
  bound_vars:
    - name: opname
      type: str
      docs: The name of the activated opcode.
      lifetime: static
      derived_from: "\"i64.atomic_rmw8_sub_u\""
    - name: bytecode
      type: u16
      docs: The byte(s) that identify this opcode in the Wasm binary format.
      lifetime: static
      derived_from: 0xFE29
    - name: data_size
      type: u32
      derived_from: 1
      lifetime: static
      docs: The number of bytes that the memory operation is on, e.g. i32.load8_u is 1
    - name: addr
      type: u32
      derived_from: arg1
      lifetime: dynamic
      docs: The memory address argument passed to the opcode.
    - *category_id_atomic
    - *category_name_atomic
    - *memory
    - *align
    - *effective_addr
    - *is_write_true
    - *offset
    - *arg0_i64
    - *arg1_u32
  bound_fns: []
  supported_modes: *default_modes

  docs: "https://github.com/WebAssembly/threads/blob/main/proposals/threads/Overview.md"

i64_atomic_rmw16_sub_u: &i64_atomic_rmw16_sub_u
  name: i64.atomic_rmw16_sub_u
  bound_vars:
    - name: opname
      type: str
      docs: The name of the activated opcode.
      lifetime: static
      derived_from: "\"i64.atomic_rmw16_sub_u\""
    - name: bytecode
      type: u16
      docs: The byte(s) that identify this opcode in the Wasm binary format.
      lifetime: static
      derived_from: 0xFE2A
    - name: data_size
      type: u32
      derived_from: 2
      lifetime: static
      docs: The number of bytes that the memory operation is on, e.g. i32.load8_u is 1
    - name: addr
      type: u32
      derived_from: arg1
      lifetime: dynamic
      docs: The memory address argument passed to the opcode.
    - *category_id_atomic
    - *category_name_atomic
    - *memory
    - *align
    - *effective_addr
    - *is_write_true
    - *offset
    - *arg0_i64
    - *arg1_u32
  bound_fns: []
  supported_modes: *default_modes

  docs: "https://github.com/WebAssembly/threads/blob/main/proposals/threads/Overview.md"

i64_atomic_rmw32_sub_u: &i64_atomic_rmw32_sub_u
  name: i64.atomic_rmw32_sub_u
  bound_vars:
    - name: opname
      type: str
      docs: The name of the activated opcode.
      lifetime: static
      derived_from: "\"i64.atomic_rmw32_sub_u\""
    - name: bytecode
      type: u16
      docs: The byte(s) that identify this opcode in the Wasm binary format.
      lifetime: static
      derived_from: 0xFE2B
    - name: data_size
      type: u32
      derived_from: 4
      lifetime: static
      docs: The number of bytes that the memory operation is on, e.g. i32.load8_u is 1
    - name: addr
      type: u32
      derived_from: arg1
      lifetime: dynamic
      docs: The memory address argument passed to the opcode.
    - *category_id_atomic
    - *category_name_atomic
    - *memory
    - *align
    - *effective_addr
    - *is_write_true
    - *offset
    - *arg0_i64
    - *arg1_u32
  bound_fns: []
  supported_modes: *default_modes

  docs: "https://github.com/WebAssembly/threads/blob/main/proposals/threads/Overview.md"

i32_atomic_rmw_and: &i32_atomic_rmw_and
  name: i32.atomic_rmw_and
  bound_vars:
    - name: opname
      type: str
      docs: The name of the activated opcode.
      lifetime: static
      derived_from: "\"i32.atomic_rmw_and\""
    - name: bytecode
      type: u16
      docs: The byte(s) that identify this opcode in the Wasm binary format.
      lifetime: static
      derived_from: 0xFE2C
    - name: data_size
      type: u32
      derived_from: 4
      lifetime: static
      docs: The number of bytes that the memory operation is on, e.g. i32.load8_u is 1
    - name: addr
      type: u32
      derived_from: arg1
      lifetime: dynamic
      docs: The memory address argument passed to the opcode.
    - *category_id_atomic
    - *category_name_atomic
    - *memory
    - *align
    - *effective_addr
    - *is_write_true
    - *offset
    - *arg0_i32
    - *arg1_u32
  bound_fns: []
  supported_modes: *default_modes

  docs: "https://github.com/WebAssembly/threads/blob/main/proposals/threads/Overview.md"

i64_atomic_rmw_and: &i64_atomic_rmw_and
  name: i64.atomic_rmw_and
  bound_vars:
    - name: opname
      type: str
      docs: The name of the activated opcode.
      lifetime: static
      derived_from: "\"i64.atomic_rmw_and\""
    - name: bytecode
      type: u16
      docs: The byte(s) that identify this opcode in the Wasm binary format.
      lifetime: static
      derived_from: 0xFE2D
    - name: data_size
      type: u32
      derived_from: 8
      lifetime: static
      docs: The number of bytes that the memory operation is on, e.g. i32.load8_u is 1
    - name: addr
      type: u32
      derived_from: arg1
      lifetime: dynamic
      docs: The memory address argument passed to the opcode.
    - *category_id_atomic
    - *category_name_atomic
    - *memory
    - *align
    - *effective_addr
    - *is_write_true
    - *offset
    - *arg0_i64
    - *arg1_u32
  bound_fns: []
  supported_modes: *default_modes

  docs: "https://github.com/WebAssembly/threads/blob/main/proposals/threads/Overview.md"

i32_atomic_rmw8_and_u: &i32_atomic_rmw8_and_u
  name: i32.atomic_rmw8_and_u
  bound_vars:
    - name: opname
      type: str
      docs: The name of the activated opcode.
      lifetime: static
      derived_from: "\"i32.atomic_rmw8_and_u\""
    - name: bytecode
      type: u16
      docs: The byte(s) that identify this opcode in the Wasm binary format.
      lifetime: static
      derived_from: 0xFE2E
    - name: data_size
      type: u32
      derived_from: 1
      lifetime: static
      docs: The number of bytes that the memory operation is on, e.g. i32.load8_u is 1
    - name: addr
      type: u32
      derived_from: arg1
      lifetime: dynamic
      docs: The memory address argument passed to the opcode.
    - *category_id_atomic
    - *category_name_atomic
    - *memory
    - *align
    - *effective_addr
    - *is_write_true
    - *offset
    - *arg0_i32
    - *arg1_u32
  bound_fns: []
  supported_modes: *default_modes

  docs: "https://github.com/WebAssembly/threads/blob/main/proposals/threads/Overview.md"

i32_atomic_rmw16_and_u: &i32_atomic_rmw16_and_u
  name: i32.atomic_rmw16_and_u
  bound_vars:
    - name: opname
      type: str
      docs: The name of the activated opcode.
      lifetime: static
      derived_from: "\"i32.atomic_rmw16_and_u\""
    - name: bytecode
      type: u16
      docs: The byte(s) that identify this opcode in the Wasm binary format.
      lifetime: static
      derived_from: 0xFE2F
    - name: data_size
      type: u32
      derived_from: 2
      lifetime: static
      docs: The number of bytes that the memory operation is on, e.g. i32.load8_u is 1
    - name: addr
      type: u32
      derived_from: arg1
      lifetime: dynamic
      docs: The memory address argument passed to the opcode.
    - *category_id_atomic
    - *category_name_atomic
    - *memory
    - *align
    - *effective_addr
    - *is_write_true
    - *offset
    - *arg0_i32
    - *arg1_u32
  bound_fns: []
  supported_modes: *default_modes

  docs: "https://github.com/WebAssembly/threads/blob/main/proposals/threads/Overview.md"

i64_atomic_rmw8_and_u: &i64_atomic_rmw8_and_u
  name: i64.atomic_rmw8_and_u
  bound_vars:
    - name: opname
      type: str
      docs: The name of the activated opcode.
      lifetime: static
      derived_from: "\"i64.atomic_rmw8_and_u\""
    - name: bytecode
      type: u16
      docs: The byte(s) that identify this opcode in the Wasm binary format.
      lifetime: static
      derived_from: 0xFE30
    - name: data_size
      type: u32
      derived_from: 1
      lifetime: static
      docs: The number of bytes that the memory operation is on, e.g. i32.load8_u is 1
    - name: addr
      type: u32
      derived_from: arg1
      lifetime: dynamic
      docs: The memory address argument passed to the opcode.
    - *category_id_atomic
    - *category_name_atomic
    - *memory
    - *align
    - *effective_addr
    - *is_write_true
    - *offset
    - *arg0_i64
    - *arg1_u32
  bound_fns: []
  supported_modes: *default_modes

  docs: "https://github.com/WebAssembly/threads/blob/main/proposals/threads/Overview.md"

i64_atomic_rmw16_and_u: &i64_atomic_rmw16_and_u
  name: i64.atomic_rmw16_and_u
  bound_vars:
    - name: opname
      type: str
      docs: The name of the activated opcode.
      lifetime: static
      derived_from: "\"i64.atomic_rmw16_and_u\""
    - name: bytecode
      type: u16
      docs: The byte(s) that identify this opcode in the Wasm binary format.
      lifetime: static
      derived_from: 0xFE31
    - name: data_size
      type: u32
      derived_from: 2
      lifetime: static
      docs: The number of bytes that the memory operation is on, e.g. i32.load8_u is 1
    - name: addr
      type: u32
      derived_from: arg1
      lifetime: dynamic
      docs: The memory address argument passed to the opcode.
    - *category_id_atomic
    - *category_name_atomic
    - *memory
    - *align
    - *effective_addr
    - *is_write_true
    - *offset
    - *arg0_i64
    - *arg1_u32
  bound_fns: []
  supported_modes: *default_modes

  docs: "https://github.com/WebAssembly/threads/blob/main/proposals/threads/Overview.md"

i64_atomic_rmw32_and_u: &i64_atomic_rmw32_and_u
  name: i64.atomic_rmw32_and_u
  bound_vars:
    - name: opname
      type: str
      docs: The name of the activated opcode.
      lifetime: static
      derived_from: "\"i64.atomic_rmw32_and_u\""
    - name: bytecode
      type: u16
      docs: The byte(s) that identify this opcode in the Wasm binary format.
      lifetime: static
      derived_from: 0xFE32
    - name: data_size
      type: u32
      derived_from: 4
      lifetime: static
      docs: The number of bytes that the memory operation is on, e.g. i32.load8_u is 1
    - name: addr
      type: u32
      derived_from: arg1
      lifetime: dynamic
      docs: The memory address argument passed to the opcode.
    - *category_id_atomic
    - *category_name_atomic
    - *memory
    - *align
    - *effective_addr
    - *is_write_true
    - *offset
    - *arg0_i64
    - *arg1_u32
  bound_fns: []
  supported_modes: *default_modes

  docs: "https://github.com/WebAssembly/threads/blob/main/proposals/threads/Overview.md"

i32_atomic_rmw_or: &i32_atomic_rmw_or
  name: i32.atomic_rmw_or
  bound_vars:
    - name: opname
      type: str
      docs: The name of the activated opcode.
      lifetime: static
      derived_from: "\"i32.atomic_rmw_or\""
    - name: bytecode
      type: u16
      docs: The byte(s) that identify this opcode in the Wasm binary format.
      lifetime: static
      derived_from: 0xFE33
    - name: data_size
      type: u32
      derived_from: 4
      lifetime: static
      docs: The number of bytes that the memory operation is on, e.g. i32.load8_u is 1
    - name: addr
      type: u32
      derived_from: arg1
      lifetime: dynamic
      docs: The memory address argument passed to the opcode.
    - *category_id_atomic
    - *category_name_atomic
    - *memory
    - *align
    - *effective_addr
    - *is_write_true
    - *offset
    - *arg0_i32
    - *arg1_u32
  bound_fns: []
  supported_modes: *default_modes

  docs: "https://github.com/WebAssembly/threads/blob/main/proposals/threads/Overview.md"

i64_atomic_rmw_or: &i64_atomic_rmw_or
  name: i64.atomic_rmw_or
  bound_vars:
    - name: opname
      type: str
      docs: The name of the activated opcode.
      lifetime: static
      derived_from: "\"i64.atomic_rmw_or\""
    - name: bytecode
      type: u16
      docs: The byte(s) that identify this opcode in the Wasm binary format.
      lifetime: static
      derived_from: 0xFE34
    - name: data_size
      type: u32
      derived_from: 8
      lifetime: static
      docs: The number of bytes that the memory operation is on, e.g. i32.load8_u is 1
    - name: addr
      type: u32
      derived_from: arg1
      lifetime: dynamic
      docs: The memory address argument passed to the opcode.
    - *category_id_atomic
    - *category_name_atomic
    - *memory
    - *align
    - *effective_addr
    - *is_write_true
    - *offset
    - *arg0_i64
    - *arg1_u32
  bound_fns: []
  supported_modes: *default_modes

  docs: "https://github.com/WebAssembly/threads/blob/main/proposals/threads/Overview.md"

i32_atomic_rmw8_or_u: &i32_atomic_rmw8_or_u
  name: i32.atomic_rmw8_or_u
  bound_vars:
    - name: opname
      type: str
      docs: The name of the activated opcode.
      lifetime: static
      derived_from: "\"i32.atomic_rmw8_or_u\""
    - name: bytecode
      type: u16
      docs: The byte(s) that identify this opcode in the Wasm binary format.
      lifetime: static
      derived_from: 0xFE35
    - name: data_size
      type: u32
      derived_from: 1
      lifetime: static
      docs: The number of bytes that the memory operation is on, e.g. i32.load8_u is 1
    - name: addr
      type: u32
      derived_from: arg1
      lifetime: dynamic
      docs: The memory address argument passed to the opcode.
    - *category_id_atomic
    - *category_name_atomic
    - *memory
    - *align
    - *effective_addr
    - *is_write_true
    - *offset
    - *arg0_i32
    - *arg1_u32
  bound_fns: []
  supported_modes: *default_modes

  docs: "https://github.com/WebAssembly/threads/blob/main/proposals/threads/Overview.md"

i32_atomic_rmw16_or_u: &i32_atomic_rmw16_or_u
  name: i32.atomic_rmw16_or_u
  bound_vars:
    - name: opname
      type: str
      docs: The name of the activated opcode.
      lifetime: static
      derived_from: "\"i32.atomic_rmw16_or_u\""
    - name: bytecode
      type: u16
      docs: The byte(s) that identify this opcode in the Wasm binary format.
      lifetime: static
      derived_from: 0xFE36
    - name: data_size
      type: u32
      derived_from: 2
      lifetime: static
      docs: The number of bytes that the memory operation is on, e.g. i32.load8_u is 1
    - name: addr
      type: u32
      derived_from: arg1
      lifetime: dynamic
      docs: The memory address argument passed to the opcode.
    - *category_id_atomic
    - *category_name_atomic
    - *memory
    - *align
    - *effective_addr
    - *is_write_true
    - *offset
    - *arg0_i32
    - *arg1_u32
  bound_fns: []
  supported_modes: *default_modes

  docs: "https://github.com/WebAssembly/threads/blob/main/proposals/threads/Overview.md"

i64_atomic_rmw8_or_u: &i64_atomic_rmw8_or_u
  name: i64.atomic_rmw8_or_u
  bound_vars:
    - name: opname
      type: str
      docs: The name of the activated opcode.
      lifetime: static
      derived_from: "\"i64.atomic_rmw8_or_u\""
    - name: bytecode
      type: u16
      docs: The byte(s) that identify this opcode in the Wasm binary format.
      lifetime: static
      derived_from: 0xFE37
    - name: data_size
      type: u32
      derived_from: 1
      lifetime: static
      docs: The number of bytes that the memory operation is on, e.g. i32.load8_u is 1
    - name: addr
      type: u32
      derived_from: arg1
      lifetime: dynamic
      docs: The memory address argument passed to the opcode.
    - *category_id_atomic
    - *category_name_atomic
    - *memory
    - *align
    - *effective_addr
    - *is_write_true
    - *offset
    - *arg0_i64
    - *arg1_u32
  bound_fns: []
  supported_modes: *default_modes

  docs: "https://github.com/WebAssembly/threads/blob/main/proposals/threads/Overview.md"

i64_atomic_rmw16_or_u: &i64_atomic_rmw16_or_u
  name: i64.atomic_rmw16_or_u
  bound_vars:
    - name: opname
      type: str
      docs: The name of the activated opcode.
      lifetime: static
      derived_from: "\"i64.atomic_rmw16_or_u\""
    - name: bytecode
      type: u16
      docs: The byte(s) that identify this opcode in the Wasm binary format.
      lifetime: static
      derived_from: 0xFE38
    - name: data_size
      type: u32
      derived_from: 2
      lifetime: static
      docs: The number of bytes that the memory operation is on, e.g. i32.load8_u is 1
    - name: addr
      type: u32
      derived_from: arg1
      lifetime: dynamic
      docs: The memory address argument passed to the opcode.
    - *category_id_atomic
    - *category_name_atomic
    - *memory
    - *align
    - *effective_addr
    - *is_write_true
    - *offset
    - *arg0_i64
    - *arg1_u32
  bound_fns: []
  supported_modes: *default_modes

  docs: "https://github.com/WebAssembly/threads/blob/main/proposals/threads/Overview.md"

i64_atomic_rmw32_or_u: &i64_atomic_rmw32_or_u
  name: i64.atomic_rmw32_or_u
  bound_vars:
    - name: opname
      type: str
      docs: The name of the activated opcode.
      lifetime: static
      derived_from: "\"i64.atomic_rmw32_or_u\""
    - name: bytecode
      type: u16
      docs: The byte(s) that identify this opcode in the Wasm binary format.
      lifetime: static
      derived_from: 0xFE39
    - name: data_size
      type: u32
      derived_from: 4
      lifetime: static
      docs: The number of bytes that the memory operation is on, e.g. i32.load8_u is 1
    - name: addr
      type: u32
      derived_from: arg1
      lifetime: dynamic
      docs: The memory address argument passed to the opcode.
    - *category_id_atomic
    - *category_name_atomic
    - *memory
    - *align
    - *effective_addr
    - *is_write_true
    - *offset
    - *arg0_i64
    - *arg1_u32
  bound_fns: []
  supported_modes: *default_modes

  docs: "https://github.com/WebAssembly/threads/blob/main/proposals/threads/Overview.md"

i32_atomic_rmw_xor: &i32_atomic_rmw_xor
  name: i32.atomic_rmw_xor
  bound_vars:
    - name: opname
      type: str
      docs: The name of the activated opcode.
      lifetime: static
      derived_from: "\"i32.atomic_rmw_xor\""
    - name: bytecode
      type: u16
      docs: The byte(s) that identify this opcode in the Wasm binary format.
      lifetime: static
      derived_from: 0xFE3A
    - name: data_size
      type: u32
      derived_from: 4
      lifetime: static
      docs: The number of bytes that the memory operation is on, e.g. i32.load8_u is 1
    - name: addr
      type: u32
      derived_from: arg1
      lifetime: dynamic
      docs: The memory address argument passed to the opcode.
    - *category_id_atomic
    - *category_name_atomic
    - *memory
    - *align
    - *effective_addr
    - *is_write_true
    - *offset
    - *arg0_i32
    - *arg1_u32
  bound_fns: []
  supported_modes: *default_modes

  docs: "https://github.com/WebAssembly/threads/blob/main/proposals/threads/Overview.md"

i64_atomic_rmw_xor: &i64_atomic_rmw_xor
  name: i64.atomic_rmw_xor
  bound_vars:
    - name: opname
      type: str
      docs: The name of the activated opcode.
      lifetime: static
      derived_from: "\"i64.atomic_rmw_xor\""
    - name: bytecode
      type: u16
      docs: The byte(s) that identify this opcode in the Wasm binary format.
      lifetime: static
      derived_from: 0xFE3B
    - name: data_size
      type: u32
      derived_from: 8
      lifetime: static
      docs: The number of bytes that the memory operation is on, e.g. i32.load8_u is 1
    - name: addr
      type: u32
      derived_from: arg1
      lifetime: dynamic
      docs: The memory address argument passed to the opcode.
    - *category_id_atomic
    - *category_name_atomic
    - *memory
    - *align
    - *effective_addr
    - *is_write_true
    - *offset
    - *arg0_i64
    - *arg1_u32
  bound_fns: []
  supported_modes: *default_modes

  docs: "https://github.com/WebAssembly/threads/blob/main/proposals/threads/Overview.md"

i32_atomic_rmw8_xor_u: &i32_atomic_rmw8_xor_u
  name: i32.atomic_rmw8_xor_u
  bound_vars:
    - name: opname
      type: str
      docs: The name of the activated opcode.
      lifetime: static
      derived_from: "\"i32.atomic_rmw8_xor_u\""
    - name: bytecode
      type: u16
      docs: The byte(s) that identify this opcode in the Wasm binary format.
      lifetime: static
      derived_from: 0xFE3C
    - name: data_size
      type: u32
      derived_from: 1
      lifetime: static
      docs: The number of bytes that the memory operation is on, e.g. i32.load8_u is 1
    - name: addr
      type: u32
      derived_from: arg1
      lifetime: dynamic
      docs: The memory address argument passed to the opcode.
    - *category_id_atomic
    - *category_name_atomic
    - *memory
    - *align
    - *effective_addr
    - *is_write_true
    - *offset
    - *arg0_i32
    - *arg1_u32
  bound_fns: []
  supported_modes: *default_modes

  docs: "https://github.com/WebAssembly/threads/blob/main/proposals/threads/Overview.md"

i32_atomic_rmw16_xor_u: &i32_atomic_rmw16_xor_u
  name: i32.atomic_rmw16_xor_u
  bound_vars:
    - name: opname
      type: str
      docs: The name of the activated opcode.
      lifetime: static
      derived_from: "\"i32.atomic_rmw16_xor_u\""
    - name: bytecode
      type: u16
      docs: The byte(s) that identify this opcode in the Wasm binary format.
      lifetime: static
      derived_from: 0xFE3D
    - name: data_size
      type: u32
      derived_from: 2
      lifetime: static
      docs: The number of bytes that the memory operation is on, e.g. i32.load8_u is 1
    - name: addr
      type: u32
      derived_from: arg1
      lifetime: dynamic
      docs: The memory address argument passed to the opcode.
    - *category_id_atomic
    - *category_name_atomic
    - *memory
    - *align
    - *effective_addr
    - *is_write_true
    - *offset
    - *arg0_i32
    - *arg1_u32
  bound_fns: []
  supported_modes: *default_modes

  docs: "https://github.com/WebAssembly/threads/blob/main/proposals/threads/Overview.md"

i64_atomic_rmw8_xor_u: &i64_atomic_rmw8_xor_u
  name: i64.atomic_rmw8_xor_u
  bound_vars:
    - name: opname
      type: str
      docs: The name of the activated opcode.
      lifetime: static
      derived_from: "\"i64.atomic_rmw8_xor_u\""
    - name: bytecode
      type: u16
      docs: The byte(s) that identify this opcode in the Wasm binary format.
      lifetime: static
      derived_from: 0xFE3E
    - name: data_size
      type: u32
      derived_from: 1
      lifetime: static
      docs: The number of bytes that the memory operation is on, e.g. i32.load8_u is 1
    - name: addr
      type: u32
      derived_from: arg1
      lifetime: dynamic
      docs: The memory address argument passed to the opcode.
    - *category_id_atomic
    - *category_name_atomic
    - *memory
    - *align
    - *effective_addr
    - *is_write_true
    - *offset
    - *arg0_i64
    - *arg1_u32
  bound_fns: []
  supported_modes: *default_modes

  docs: "https://github.com/WebAssembly/threads/blob/main/proposals/threads/Overview.md"

i64_atomic_rmw16_xor_u: &i64_atomic_rmw16_xor_u
  name: i64.atomic_rmw16_xor_u
  bound_vars:
    - name: opname
      type: str
      docs: The name of the activated opcode.
      lifetime: static
      derived_from: "\"i64.atomic_rmw16_xor_u\""
    - name: bytecode
      type: u16
      docs: The byte(s) that identify this opcode in the Wasm binary format.
      lifetime: static
      derived_from: 0xFE3F
    - name: data_size
      type: u32
      derived_from: 2
      lifetime: static
      docs: The number of bytes that the memory operation is on, e.g. i32.load8_u is 1
    - name: addr
      type: u32
      derived_from: arg1
      lifetime: dynamic
      docs: The memory address argument passed to the opcode.
    - *category_id_atomic
    - *category_name_atomic
    - *memory
    - *align
    - *effective_addr
    - *is_write_true
    - *offset
    - *arg0_i64
    - *arg1_u32
  bound_fns: []
  supported_modes: *default_modes

  docs: "https://github.com/WebAssembly/threads/blob/main/proposals/threads/Overview.md"

i64_atomic_rmw32_xor_u: &i64_atomic_rmw32_xor_u
  name: i64.atomic_rmw32_xor_u
  bound_vars:
    - name: opname
      type: str
      docs: The name of the activated opcode.
      lifetime: static
      derived_from: "\"i64.atomic_rmw32_xor_u\""
    - name: bytecode
      type: u16
      docs: The byte(s) that identify this opcode in the Wasm binary format.
      lifetime: static
      derived_from: 0xFE40
    - name: data_size
      type: u32
      derived_from: 4
      lifetime: static
      docs: The number of bytes that the memory operation is on, e.g. i32.load8_u is 1
    - name: addr
      type: u32
      derived_from: arg1
      lifetime: dynamic
      docs: The memory address argument passed to the opcode.
    - *category_id_atomic
    - *category_name_atomic
    - *memory
    - *align
    - *effective_addr
    - *is_write_true
    - *offset
    - *arg0_i64
    - *arg1_u32
  bound_fns: []
  supported_modes: *default_modes

  docs: "https://github.com/WebAssembly/threads/blob/main/proposals/threads/Overview.md"

i32_atomic_rmw_xchg: &i32_atomic_rmw_xchg
  name: i32.atomic_rmw_xchg
  bound_vars:
    - name: opname
      type: str
      docs: The name of the activated opcode.
      lifetime: static
      derived_from: "\"i32.atomic_rmw_xchg\""
    - name: bytecode
      type: u16
      docs: The byte(s) that identify this opcode in the Wasm binary format.
      lifetime: static
      derived_from: 0xFE41
    - name: data_size
      type: u32
      derived_from: 4
      lifetime: static
      docs: The number of bytes that the memory operation is on, e.g. i32.load8_u is 1
    - name: addr
      type: u32
      derived_from: arg1
      lifetime: dynamic
      docs: The memory address argument passed to the opcode.
    - *category_id_atomic
    - *category_name_atomic
    - *memory
    - *align
    - *effective_addr
    - *is_write_true
    - *offset
    - *arg0_i32
    - *arg1_u32
  bound_fns: []
  supported_modes: *default_modes

  docs: "https://github.com/WebAssembly/threads/blob/main/proposals/threads/Overview.md"

i64_atomic_rmw_xchg: &i64_atomic_rmw_xchg
  name: i64.atomic_rmw_xchg
  bound_vars:
    - name: opname
      type: str
      docs: The name of the activated opcode.
      lifetime: static
      derived_from: "\"i64.atomic_rmw_xchg\""
    - name: bytecode
      type: u16
      docs: The byte(s) that identify this opcode in the Wasm binary format.
      lifetime: static
      derived_from: 0xFE42
    - name: data_size
      type: u32
      derived_from: 8
      lifetime: static
      docs: The number of bytes that the memory operation is on, e.g. i32.load8_u is 1
    - name: addr
      type: u32
      derived_from: arg1
      lifetime: dynamic
      docs: The memory address argument passed to the opcode.
    - *category_id_atomic
    - *category_name_atomic
    - *memory
    - *align
    - *effective_addr
    - *is_write_true
    - *offset
    - *arg0_i64
    - *arg1_u32
  bound_fns: []
  supported_modes: *default_modes

  docs: "https://github.com/WebAssembly/threads/blob/main/proposals/threads/Overview.md"

i32_atomic_rmw8_xchg_u: &i32_atomic_rmw8_xchg_u
  name: i32.atomic_rmw8_xchg_u
  bound_vars:
    - name: opname
      type: str
      docs: The name of the activated opcode.
      lifetime: static
      derived_from: "\"i32.atomic_rmw8_xchg_u\""
    - name: bytecode
      type: u16
      docs: The byte(s) that identify this opcode in the Wasm binary format.
      lifetime: static
      derived_from: 0xFE43
    - name: data_size
      type: u32
      derived_from: 1
      lifetime: static
      docs: The number of bytes that the memory operation is on, e.g. i32.load8_u is 1
    - name: addr
      type: u32
      derived_from: arg1
      lifetime: dynamic
      docs: The memory address argument passed to the opcode.
    - *category_id_atomic
    - *category_name_atomic
    - *memory
    - *align
    - *effective_addr
    - *is_write_true
    - *offset
    - *arg0_i32
    - *arg1_u32
  bound_fns: []
  supported_modes: *default_modes

  docs: "https://github.com/WebAssembly/threads/blob/main/proposals/threads/Overview.md"

i32_atomic_rmw16_xchg_u: &i32_atomic_rmw16_xchg_u
  name: i32.atomic_rmw16_xchg_u
  bound_vars:
    - name: opname
      type: str
      docs: The name of the activated opcode.
      lifetime: static
      derived_from: "\"i32.atomic_rmw16_xchg_u\""
    - name: bytecode
      type: u16
      docs: The byte(s) that identify this opcode in the Wasm binary format.
      lifetime: static
      derived_from: 0xFE44
    - name: data_size
      type: u32
      derived_from: 2
      lifetime: static
      docs: The number of bytes that the memory operation is on, e.g. i32.load8_u is 1
    - name: addr
      type: u32
      derived_from: arg1
      lifetime: dynamic
      docs: The memory address argument passed to the opcode.
    - *category_id_atomic
    - *category_name_atomic
    - *memory
    - *align
    - *effective_addr
    - *is_write_true
    - *offset
    - *arg0_i32
    - *arg1_u32
  bound_fns: []
  supported_modes: *default_modes

  docs: "https://github.com/WebAssembly/threads/blob/main/proposals/threads/Overview.md"

i64_atomic_rmw8_xchg_u: &i64_atomic_rmw8_xchg_u
  name: i64.atomic_rmw8_xchg_u
  bound_vars:
    - name: opname
      type: str
      docs: The name of the activated opcode.
      lifetime: static
      derived_from: "\"i64.atomic_rmw8_xchg_u\""
    - name: bytecode
      type: u16
      docs: The byte(s) that identify this opcode in the Wasm binary format.
      lifetime: static
      derived_from: 0xFE45
    - name: data_size
      type: u32
      derived_from: 1
      lifetime: static
      docs: The number of bytes that the memory operation is on, e.g. i32.load8_u is 1
    - name: addr
      type: u32
      derived_from: arg1
      lifetime: dynamic
      docs: The memory address argument passed to the opcode.
    - *category_id_atomic
    - *category_name_atomic
    - *memory
    - *align
    - *effective_addr
    - *is_write_true
    - *offset
    - *arg0_i64
    - *arg1_u32
  bound_fns: []
  supported_modes: *default_modes

  docs: "https://github.com/WebAssembly/threads/blob/main/proposals/threads/Overview.md"

i64_atomic_rmw16_xchg_u: &i64_atomic_rmw16_xchg_u
  name: i64.atomic_rmw16_xchg_u
  bound_vars:
    - name: opname
      type: str
      docs: The name of the activated opcode.
      lifetime: static
      derived_from: "\"i64.atomic_rmw16_xchg_u\""
    - name: bytecode
      type: u16
      docs: The byte(s) that identify this opcode in the Wasm binary format.
      lifetime: static
      derived_from: 0xFE46
    - name: data_size
      type: u32
      derived_from: 2
      lifetime: static
      docs: The number of bytes that the memory operation is on, e.g. i32.load8_u is 1
    - name: addr
      type: u32
      derived_from: arg1
      lifetime: dynamic
      docs: The memory address argument passed to the opcode.
    - *category_id_atomic
    - *category_name_atomic
    - *memory
    - *align
    - *effective_addr
    - *is_write_true
    - *offset
    - *arg0_i64
    - *arg1_u32
  bound_fns: []
  supported_modes: *default_modes

  docs: "https://github.com/WebAssembly/threads/blob/main/proposals/threads/Overview.md"

i64_atomic_rmw32_xchg_u: &i64_atomic_rmw32_xchg_u
  name: i64.atomic_rmw32_xchg_u
  bound_vars:
    - name: opname
      type: str
      docs: The name of the activated opcode.
      lifetime: static
      derived_from: "\"i64.atomic_rmw32_xchg_u\""
    - name: bytecode
      type: u16
      docs: The byte(s) that identify this opcode in the Wasm binary format.
      lifetime: static
      derived_from: 0xFE47
    - name: data_size
      type: u32
      derived_from: 4
      lifetime: static
      docs: The number of bytes that the memory operation is on, e.g. i32.load8_u is 1
    - name: addr
      type: u32
      derived_from: arg1
      lifetime: dynamic
      docs: The memory address argument passed to the opcode.
    - *category_id_atomic
    - *category_name_atomic
    - *memory
    - *align
    - *effective_addr
    - *is_write_true
    - *offset
    - *arg0_i64
    - *arg1_u32
  bound_fns: []
  supported_modes: *default_modes

  docs: "https://github.com/WebAssembly/threads/blob/main/proposals/threads/Overview.md"

i32_atomic_rmw_cmpxchg: &i32_atomic_rmw_cmpxchg
  name: i32.atomic_rmw_cmpxchg
  bound_vars:
    - name: opname
      type: str
      docs: The name of the activated opcode.
      lifetime: static
      derived_from: "\"i32.atomic_rmw_cmpxchg\""
    - name: bytecode
      type: u16
      docs: The byte(s) that identify this opcode in the Wasm binary format.
      lifetime: static
      derived_from: 0xFE48
    - name: data_size
      type: u32
      derived_from: 4
      lifetime: static
      docs: The number of bytes that the memory operation is on, e.g. i32.load8_u is 1
    - name: addr
      type: u32
      derived_from: arg1
      lifetime: dynamic
      docs: The memory address argument passed to the opcode.
    - *category_id_atomic
    - *category_name_atomic
    - *memory
    - *align
    - *effective_addr
    - *is_write_true
    - *offset
    - *arg0_i32
    - *arg1_u32
  bound_fns: []
  supported_modes: *default_modes

  docs: "https://github.com/WebAssembly/threads/blob/main/proposals/threads/Overview.md"

i64_atomic_rmw_cmpxchg: &i64_atomic_rmw_cmpxchg
  name: i64.atomic_rmw_cmpxchg
  bound_vars:
    - name: opname
      type: str
      docs: The name of the activated opcode.
      lifetime: static
      derived_from: "\"i64.atomic_rmw_cmpxchg\""
    - name: bytecode
      type: u16
      docs: The byte(s) that identify this opcode in the Wasm binary format.
      lifetime: static
      derived_from: 0xFE49
    - name: data_size
      type: u32
      derived_from: 8
      lifetime: static
      docs: The number of bytes that the memory operation is on, e.g. i32.load8_u is 1
    - name: addr
      type: u32
      derived_from: arg1
      lifetime: dynamic
      docs: The memory address argument passed to the opcode.
    - *category_id_atomic
    - *category_name_atomic
    - *memory
    - *align
    - *effective_addr
    - *is_write_true
    - *offset
    - *arg0_i64
    - *arg1_u32
  bound_fns: []
  supported_modes: *default_modes

  docs: "https://github.com/WebAssembly/threads/blob/main/proposals/threads/Overview.md"

i32_atomic_rmw8_cmpxchg_u: &i32_atomic_rmw8_cmpxchg_u
  name: i32.atomic_rmw8_cmpxchg_u
  bound_vars:
    - name: opname
      type: str
      docs: The name of the activated opcode.
      lifetime: static
      derived_from: "\"i32.atomic_rmw8_cmpxchg_u\""
    - name: bytecode
      type: u16
      docs: The byte(s) that identify this opcode in the Wasm binary format.
      lifetime: static
      derived_from: 0xFE4A
    - name: data_size
      type: u32
      derived_from: 1
      lifetime: static
      docs: The number of bytes that the memory operation is on, e.g. i32.load8_u is 1
    - name: addr
      type: u32
      derived_from: arg1
      lifetime: dynamic
      docs: The memory address argument passed to the opcode.
    - *category_id_atomic
    - *category_name_atomic
    - *memory
    - *align
    - *effective_addr
    - *is_write_true
    - *offset
    - *arg0_i32
    - *arg1_u32
  bound_fns: []
  supported_modes: *default_modes

  docs: "https://github.com/WebAssembly/threads/blob/main/proposals/threads/Overview.md"

i32_atomic_rmw16_cmpxchg_u: &i32_atomic_rmw16_cmpxchg_u
  name: i32.atomic_rmw16_cmpxchg_u
  bound_vars:
    - name: opname
      type: str
      docs: The name of the activated opcode.
      lifetime: static
      derived_from: "\"i32.atomic_rmw16_cmpxchg_u\""
    - name: bytecode
      type: u16
      docs: The byte(s) that identify this opcode in the Wasm binary format.
      lifetime: static
      derived_from: 0xFE4B
    - name: data_size
      type: u32
      derived_from: 2
      lifetime: static
      docs: The number of bytes that the memory operation is on, e.g. i32.load8_u is 1
    - name: addr
      type: u32
      derived_from: arg1
      lifetime: dynamic
      docs: The memory address argument passed to the opcode.
    - *category_id_atomic
    - *category_name_atomic
    - *memory
    - *align
    - *effective_addr
    - *is_write_true
    - *offset
    - *arg0_i32
    - *arg1_u32
  bound_fns: []
  supported_modes: *default_modes

  docs: "https://github.com/WebAssembly/threads/blob/main/proposals/threads/Overview.md"

i64_atomic_rmw8_cmpxchg_u: &i64_atomic_rmw8_cmpxchg_u
  name: i64.atomic_rmw8_cmpxchg_u
  bound_vars:
    - name: opname
      type: str
      docs: The name of the activated opcode.
      lifetime: static
      derived_from: "\"i64.atomic_rmw8_cmpxchg_u\""
    - name: bytecode
      type: u16
      docs: The byte(s) that identify this opcode in the Wasm binary format.
      lifetime: static
      derived_from: 0xFE4C
    - name: data_size
      type: u32
      derived_from: 1
      lifetime: static
      docs: The number of bytes that the memory operation is on, e.g. i32.load8_u is 1
    - name: addr
      type: u32
      derived_from: arg1
      lifetime: dynamic
      docs: The memory address argument passed to the opcode.
    - *category_id_atomic
    - *category_name_atomic
    - *memory
    - *align
    - *effective_addr
    - *is_write_true
    - *offset
    - *arg0_i64
    - *arg1_u32
  bound_fns: []
  supported_modes: *default_modes

  docs: "https://github.com/WebAssembly/threads/blob/main/proposals/threads/Overview.md"

i64_atomic_rmw16_cmpxchg_u: &i64_atomic_rmw16_cmpxchg_u
  name: i64.atomic_rmw16_cmpxchg_u
  bound_vars:
    - name: opname
      type: str
      docs: The name of the activated opcode.
      lifetime: static
      derived_from: "\"i64.atomic_rmw16_cmpxchg_u\""
    - name: bytecode
      type: u16
      docs: The byte(s) that identify this opcode in the Wasm binary format.
      lifetime: static
      derived_from: 0xFE4D
    - name: data_size
      type: u32
      derived_from: 2
      lifetime: static
      docs: The number of bytes that the memory operation is on, e.g. i32.load8_u is 1
    - name: addr
      type: u32
      derived_from: arg1
      lifetime: dynamic
      docs: The memory address argument passed to the opcode.
    - *category_id_atomic
    - *category_name_atomic
    - *memory
    - *align
    - *effective_addr
    - *is_write_true
    - *offset
    - *arg0_i64
    - *arg1_u32
  bound_fns: []
  supported_modes: *default_modes

  docs: "https://github.com/WebAssembly/threads/blob/main/proposals/threads/Overview.md"

i64_atomic_rmw32_cmpxchg_u: &i64_atomic_rmw32_cmpxchg_u
  name: i64.atomic_rmw32_cmpxchg_u
  bound_vars:
    - name: opname
      type: str
      docs: The name of the activated opcode.
      lifetime: static
      derived_from: "\"i64.atomic_rmw32_cmpxchg_u\""
    - name: bytecode
      type: u16
      docs: The byte(s) that identify this opcode in the Wasm binary format.
      lifetime: static
      derived_from: 0xFE4E
    - name: data_size
      type: u32
      derived_from: 4
      lifetime: static
      docs: The number of bytes that the memory operation is on, e.g. i32.load8_u is 1
    - name: addr
      type: u32
      derived_from: arg1
      lifetime: dynamic
      docs: The memory address argument passed to the opcode.
    - *category_id_atomic
    - *category_name_atomic
    - *memory
    - *align
    - *effective_addr
    - *is_write_true
    - *offset
    - *arg0_i64
    - *arg1_u32
  bound_fns: []
  supported_modes: *default_modes

  docs: "https://github.com/WebAssembly/threads/blob/main/proposals/threads/Overview.md"
