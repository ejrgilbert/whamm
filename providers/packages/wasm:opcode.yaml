# =====================
# ==== wasm:opcode ====
# =====================

opcode: &opcode
  name: opcode
  docs: This package within the wasm provider enables the instrumentation of WebAssembly bytecode instructions.
  bound_vars: []
  bound_fns:
    - name: drop_args
      params: ()
      results: ()
      req_args: -1
      lifetime: static
      docs: Drop the incoming arguments to the instrumented opcode.
  events:
    - *unreachable
    - *nop
    - *block
    - *loop
    - *if
    - *else
    - *try_table
    - *throw
    - *throw_ref
    - *end
    - *br
    - *br_if
    - *br_table
    - *return
    - *call
    - *call_indirect
    - *return_call
    - *return_call_indirect
    - *drop
    - *select
    - *typed_select
    - *local_get
    - *local_set
    - *local_tee
    - *global_get
    - *global_set
    - *i32_load
    - *i64_load
    - *f32_load
    - *f64_load
    - *i32_load8_s
    - *i32_load8_u
    - *i32_load16_s
    - *i32_load16_u
    - *i64_load8_s
    - *i64_load8_u
    - *i64_load16_s
    - *i64_load16_u
    - *i64_load32_s
    - *i64_load32_u
    - *i32_store
    - *i64_store
    - *f32_store
    - *f64_store
    - *i32_store8
    - *i32_store16
    - *i64_store8
    - *i64_store16
    - *i64_store32
    - *memory_size
    - *memory_grow
    - *i32_const
    - *i64_const
    - *f32_const
    - *f64_const
    - *ref_null
    - *ref_is_null
    - *ref_func
    - *ref_eq
    - *i32_eqz
    - *i32_eq
    - *i32_ne
    - *i32_lt_s
    - *i32_lt_u
    - *i32_gt_s
    - *i32_gt_u
    - *i32_le_s
    - *i32_le_u
    - *i32_ge_s
    - *i32_ge_u
    - *i64_eqz
    - *i64_eq
    - *i64_ne
    - *i64_lt_s
    - *i64_lt_u
    - *i64_gt_s
    - *i64_gt_u
    - *i64_le_s
    - *i64_le_u
    - *i64_ge_s
    - *i64_ge_u
    - *f32_eq
    - *f32_ne
    - *f32_lt
    - *f32_gt
    - *f32_le
    - *f32_ge
    - *f64_eq
    - *f64_ne
    - *f64_lt
    - *f64_gt
    - *f64_le
    - *f64_ge
    - *i32_clz
    - *i32_ctz
    - *i32_popcnt
    - *i32_add
    - *i32_sub
    - *i32_mul
    - *i32_div_s
    - *i32_div_u
    - *i32_rem_s
    - *i32_rem_u
    - *i32_and
    - *i32_or
    - *i32_xor
    - *i32_shl
    - *i32_shr_s
    - *i32_shr_u
    - *i32_rotl
    - *i32_rotr
    - *i64_clz
    - *i64_ctz
    - *i64_popcnt
    - *i64_add
    - *i64_sub
    - *i64_mul
    - *i64_div_s
    - *i64_div_u
    - *i64_rem_s
    - *i64_rem_u
    - *i64_and
    - *i64_or
    - *i64_xor
    - *i64_shl
    - *i64_shr_s
    - *i64_shr_u
    - *i64_rotl
    - *i64_rotr
    - *f32_abs
    - *f32_neg
    - *f32_ceil
    - *f32_floor
    - *f32_trunc
    - *f32_nearest
    - *f32_sqrt
    - *f32_add
    - *f32_sub
    - *f32_mul
    - *f32_div
    - *f32_min
    - *f32_max
    - *f32_copysign
    - *f64_abs
    - *f64_neg
    - *f64_ceil
    - *f64_floor
    - *f64_trunc
    - *f64_nearest
    - *f64_sqrt
    - *f64_add
    - *f64_sub
    - *f64_mul
    - *f64_div
    - *f64_min
    - *f64_max
    - *f64_copysign # GOOD
    - *i32_wrap_i64
    - *i32_trunc_f32_s
    - *i32_trunc_f32_u
    - *i32_trunc_f64_s
    - *i32_trunc_f64_u
    - *i64_extend_i32_s
    - *i64_extend_i32_u
    - *i64_trunc_f32_s
    - *i64_trunc_f32_u
    - *f32_convert_i32_s
    - *f32_convert_i32_u
    - *f32_convert_i64_s
    - *f32_convert_i64_u
    - *f32_demote_f64
    - *f64_convert_i32_s
    - *f64_convert_i32_u
    - *f64_convert_i64_s
    - *f64_convert_i64_u
    - *f64_promote_f32
    - *i32_reinterpret_f32
    - *i64_reinterpret_f64
    - *f32_reinterpret_i32
    - *f64_reinterpret_i64
    - *i32_extend8_s
    - *i32_extend16_s
    - *i64_extend8_s
    - *i64_extend16_s
    - *i64_extend32_s
    - *struct_new
    - *struct_new_default
    - *struct_get
    - *struct_get_s
    - *struct_get_u
    - *struct_set
    - *array_new
    - *array_new_default
    - *array_new_fixed
    - *array_new_data
    - *array_new_elem
    - *array_get
    - *array_get_s
    - *array_get_u
    - *array_set
    - *array_len
    - *array_fill
    - *array_copy
    - *array_init_data
    - *array_init_elem
    - *ref_test
    - *ref_test_null
    - *ref_cast
    - *ref_cast_null
    - *br_on_cast
    - *br_on_cast_fail
    - *any_convert_extern
    - *extern_convert_any
    - *ref_i31
    - *i31_get_s
    - *i31_get_u
    - *i32_trunc_sat_f32_s
    - *i32_trunc_sat_f32_u
    - *i32_trunc_sat_f64_s
    - *i32_trunc_sat_f64_u
    - *i64_trunc_sat_f32_s
    - *i64_trunc_sat_f32_u
    - *i64_trunc_sat_f64_s
    - *i64_trunc_sat_f64_u
    - *memory_init
    - *memory_copy
    - *memory_fill
    - *data_drop
    - *elem_drop
    - *table_copy
    - *table_init
    - *table_fill
    - *table_get
    - *table_set
    - *table_grow
    - *table_size
    - *memory_atomic_notify
    - *memory_atomic_wait32
    - *memory_atomic_wait64
    - *atomic_fence
    - *i32_atomic_load
    - *i64_atomic_load
    - *i32_atomic_load8_u
    - *i32_atomic_load16_u
    - *i64_atomic_load8_u
    - *i64_atomic_load16_u
    - *i64_atomic_load32_u
    - *i32_atomic_store
    - *i32_atomic_store8
    - *i32_atomic_store16
    - *i64_atomic_store
    - *i64_atomic_store8
    - *i64_atomic_store16
    - *i64_atomic_store32
    - *i32_atomic_rmw_add
    - *i32_atomic_rmw8_add_u
    - *i32_atomic_rmw16_add_u
    - *i64_atomic_rmw_add
    - *i64_atomic_rmw8_add_u
    - *i64_atomic_rmw16_add_u
    - *i64_atomic_rmw32_add_u
    - *i32_atomic_rmw_sub
    - *i32_atomic_rmw8_sub_u
    - *i32_atomic_rmw16_sub_u
    - *i64_atomic_rmw_sub
    - *i64_atomic_rmw8_sub_u
    - *i64_atomic_rmw16_sub_u
    - *i64_atomic_rmw32_sub_u
    - *i32_atomic_rmw_and
    - *i32_atomic_rmw8_and_u
    - *i32_atomic_rmw16_and_u
    - *i64_atomic_rmw_and
    - *i64_atomic_rmw8_and_u
    - *i64_atomic_rmw16_and_u
    - *i64_atomic_rmw32_and_u
    - *i32_atomic_rmw_or
    - *i32_atomic_rmw8_or_u
    - *i32_atomic_rmw16_or_u
    - *i64_atomic_rmw_or
    - *i64_atomic_rmw8_or_u
    - *i64_atomic_rmw16_or_u
    - *i64_atomic_rmw32_or_u
    - *i32_atomic_rmw_xor
    - *i32_atomic_rmw8_xor_u
    - *i32_atomic_rmw16_xor_u
    - *i64_atomic_rmw_xor
    - *i64_atomic_rmw8_xor_u
    - *i64_atomic_rmw16_xor_u
    - *i64_atomic_rmw32_xor_u
    - *i32_atomic_rmw_xchg
    - *i32_atomic_rmw8_xchg_u
    - *i32_atomic_rmw16_xchg_u
    - *i64_atomic_rmw_xchg
    - *i64_atomic_rmw8_xchg_u
    - *i64_atomic_rmw16_xchg_u
    - *i64_atomic_rmw32_xchg_u
    - *i32_atomic_rmw_cmpxchg
    - *i32_atomic_rmw8_cmpxchg_u
    - *i32_atomic_rmw16_cmpxchg_u
    - *i64_atomic_rmw_cmpxchg
    - *i64_atomic_rmw8_cmpxchg_u
    - *i64_atomic_rmw16_cmpxchg_u
    - *i64_atomic_rmw32_cmpxchg_u
    - *call_ref
    - *return_call_ref
    - *ref_as_non_null
    - *br_on_null
    - *br_on_non_null
