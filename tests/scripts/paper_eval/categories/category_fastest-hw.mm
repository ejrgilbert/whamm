report var const: u32;
report var misc: u32;
report var control: u32;
report var local: u32;
report var global: u32;
report var table: u32;
report var load: u32;
report var store: u32;
report var mem: u32;
report var arith: u32;
report var compare: u32;
report var convert: u32;
report var exn: u32;
report var gc: u32;
report var atomic: u32;

wasm:opcode:unreachable|nop|drop:before { misc++; }
wasm:opcode:block|_loop|_if|_else|end:before { control++; }
wasm:opcode:br|br_if|br_table|_return|*select:before { control++; }
wasm:opcode:call:before { control++; }
wasm:opcode:call_indirect:before { control++; }
wasm:opcode:return_call:before { control++; }
wasm:opcode:return_call_indirect:before { control++; }
wasm:opcode:throw*:before { exn++; }
wasm:opcode:local*:before { local++; }
wasm:opcode:global*:before { global++; }
wasm:opcode:i32_load:before { load++; }
wasm:opcode:i64_load:before { load++; }
wasm:opcode:f32_load:before { load++; }
wasm:opcode:f64_load:before { load++; }
wasm:opcode:i32_load8_u:before { load++; }
wasm:opcode:i32_load16_s:before { load++; }
wasm:opcode:i32_load16_u:before { load++; }
wasm:opcode:i64_load8_s:before { load++; }
wasm:opcode:i64_load8_u:before { load++; }
wasm:opcode:i64_load16_s:before { load++; }
wasm:opcode:i64_load16_u:before { load++; }
wasm:opcode:i64_load32_s:before { load++; }
wasm:opcode:i64_load32_u:before { load++; }
wasm:opcode:i32_store:before { store++; }
wasm:opcode:i64_store:before { store++; }
wasm:opcode:f32_store:before { store++; }
wasm:opcode:f64_store:before { store++; }
wasm:opcode:i32_store8:before { store++; }
wasm:opcode:i32_store16:before { store++; }
wasm:opcode:i64_store8:before { store++; }
wasm:opcode:i64_store16:before { store++; }
wasm:opcode:i64_store32:before { store++; }
wasm:opcode:memory_size:before { mem++; }
wasm:opcode:memory_grow:before { mem++; }
wasm:opcode:i32_const:before { const++; }
wasm:opcode:i64_const:before { const++; }
wasm:opcode:f32_const:before { const++; }
wasm:opcode:f64_const:before { const++; }
wasm:opcode:ref_null:before { gc++; }
wasm:opcode:ref_is_null:before { gc++; }
wasm:opcode:ref_func:before { gc++; }
wasm:opcode:ref_eq:before { gc++; }
wasm:opcode:i32_eqz:before { compare++; }
wasm:opcode:i32_eq:before { compare++; }
wasm:opcode:i32_ne:before { compare++; }
wasm:opcode:i32_lt_s:before { compare++; }
wasm:opcode:i32_lt_u:before { compare++; }
wasm:opcode:i32_gt_s:before { compare++; }
wasm:opcode:i32_gt_u:before { compare++; }
wasm:opcode:i32_le_s:before { compare++; }
wasm:opcode:i32_le_u:before { compare++; }
wasm:opcode:i32_ge_s:before { compare++; }
wasm:opcode:i32_ge_u:before { compare++; }
wasm:opcode:i64_eqz:before { compare++; }
wasm:opcode:i64_eq:before { compare++; }
wasm:opcode:i64_ne:before { compare++; }
wasm:opcode:i64_lt_s:before { compare++; }
wasm:opcode:i64_lt_u:before { compare++; }
wasm:opcode:i64_gt_s:before { compare++; }
wasm:opcode:i64_gt_u:before { compare++; }
wasm:opcode:i64_le_s:before { compare++; }
wasm:opcode:i64_le_u:before { compare++; }
wasm:opcode:i64_ge_s:before { compare++; }
wasm:opcode:i64_ge_u:before { compare++; }
wasm:opcode:f32_eq:before { compare++; }
wasm:opcode:f32_ne:before { compare++; }
wasm:opcode:f32_lt:before { compare++; }
wasm:opcode:f32_gt:before { compare++; }
wasm:opcode:f32_le:before { compare++; }
wasm:opcode:f32_ge:before { compare++; }
wasm:opcode:f64_eq:before { compare++; }
wasm:opcode:f64_ne:before { compare++; }
wasm:opcode:f64_lt:before { compare++; }
wasm:opcode:f64_gt:before { compare++; }
wasm:opcode:f64_le:before { compare++; }
wasm:opcode:f64_ge:before { compare++; }
wasm:opcode:i32_clz:before { arith++; }
wasm:opcode:i32_ctz:before { arith++; }
wasm:opcode:i32_popcnt:before { arith++; }
wasm:opcode:i32_add:before { arith++; }
wasm:opcode:i32_sub:before { arith++; }
wasm:opcode:i32_mul:before { arith++; }
wasm:opcode:i32_div_s:before { arith++; }
wasm:opcode:i32_div_u:before { arith++; }
wasm:opcode:i32_rem_s:before { arith++; }
wasm:opcode:i32_rem_u:before { arith++; }
wasm:opcode:i32_and:before { arith++; }
wasm:opcode:i32_or:before { arith++; }
wasm:opcode:i32_xor:before { arith++; }
wasm:opcode:i32_shl:before { arith++; }
wasm:opcode:i32_shr_s:before { arith++; }
wasm:opcode:i32_shr_u:before { arith++; }
wasm:opcode:i32_rotl:before { arith++; }
wasm:opcode:i32_rotr:before { arith++; }
wasm:opcode:i64_clz:before { arith++; }
wasm:opcode:i64_ctz:before { arith++; }
wasm:opcode:i64_popcnt:before { arith++; }
wasm:opcode:i64_add:before { arith++; }
wasm:opcode:i64_sub:before { arith++; }
wasm:opcode:i64_mul:before { arith++; }
wasm:opcode:i64_div_s:before { arith++; }
wasm:opcode:i64_div_u:before { arith++; }
wasm:opcode:i64_rem_s:before { arith++; }
wasm:opcode:i64_rem_u:before { arith++; }
wasm:opcode:i64_and:before { arith++; }
wasm:opcode:i64_or:before { arith++; }
wasm:opcode:i64_xor:before { arith++; }
wasm:opcode:i64_shl:before { arith++; }
wasm:opcode:i64_shr_s:before { arith++; }
wasm:opcode:i64_shr_u:before { arith++; }
wasm:opcode:i64_rotl:before { arith++; }
wasm:opcode:i64_rotr:before { arith++; }
wasm:opcode:f32_abs:before { arith++; }
wasm:opcode:f32_neg:before { arith++; }
wasm:opcode:f32_ceil:before { arith++; }
wasm:opcode:f32_floor:before { arith++; }
wasm:opcode:f32_trunc:before { arith++; }
wasm:opcode:f32_nearest:before { arith++; }
wasm:opcode:f32_sqrt:before { arith++; }
wasm:opcode:f32_add:before { arith++; }
wasm:opcode:f32_sub:before { arith++; }
wasm:opcode:f32_mul:before { arith++; }
wasm:opcode:f32_div:before { arith++; }
wasm:opcode:f32_min:before { arith++; }
wasm:opcode:f32_max:before { arith++; }
wasm:opcode:f32_copysign:before { arith++; }
wasm:opcode:f64_abs:before { arith++; }
wasm:opcode:f64_neg:before { arith++; }
wasm:opcode:f64_ceil:before { arith++; }
wasm:opcode:f64_floor:before { arith++; }
wasm:opcode:f64_trunc:before { arith++; }
wasm:opcode:f64_nearest:before { arith++; }
wasm:opcode:f64_sqrt:before { arith++; }
wasm:opcode:f64_add:before { arith++; }
wasm:opcode:f64_sub:before { arith++; }
wasm:opcode:f64_mul:before { arith++; }
wasm:opcode:f64_div:before { arith++; }
wasm:opcode:f64_min:before { arith++; }
wasm:opcode:f64_max:before { arith++; }
wasm:opcode:f64_copysign:before { arith++; }
wasm:opcode:i32_wrap_i64:before { convert++; }
wasm:opcode:i32_trunc_f32_s:before { convert++; }
wasm:opcode:i32_trunc_f32_u:before { convert++; }
wasm:opcode:i32_trunc_f64_s:before { convert++; }
wasm:opcode:i32_trunc_f64_u:before { convert++; }
wasm:opcode:i64_extend_i32_s:before { convert++; }
wasm:opcode:i64_extend_i32_u:before { convert++; }
wasm:opcode:i64_trunc_f32_s:before { convert++; }
wasm:opcode:i64_trunc_f32_u:before { convert++; }
wasm:opcode:f32_convert_i32_s:before { convert++; }
wasm:opcode:f32_convert_i32_u:before { convert++; }
wasm:opcode:f32_convert_i64_s:before { convert++; }
wasm:opcode:f32_convert_i64_u:before { convert++; }
wasm:opcode:f32_demote_f64:before { convert++; }
wasm:opcode:f64_convert_i32_s:before { convert++; }
wasm:opcode:f64_convert_i32_u:before { convert++; }
wasm:opcode:f64_convert_i64_s:before { convert++; }
wasm:opcode:f64_convert_i64_u:before { convert++; }
wasm:opcode:f64_promote_f32:before { convert++; }
wasm:opcode:i32_reinterpret_f32:before { convert++; }
wasm:opcode:i64_reinterpret_f64:before { convert++; }
wasm:opcode:f32_reinterpret_i32:before { convert++; }
wasm:opcode:f64_reinterpret_i64:before { convert++; }
wasm:opcode:i32_extend8_s:before { convert++; }
wasm:opcode:i32_extend16_s:before { convert++; }
wasm:opcode:i64_extend8_s:before { convert++; }
wasm:opcode:i64_extend16_s:before { convert++; }
wasm:opcode:i64_extend32_s:before { convert++; }
wasm:opcode:struct_new:before { gc++; }
wasm:opcode:struct_new_default:before { gc++; }
wasm:opcode:struct_get:before { gc++; }
wasm:opcode:struct_get_s:before { gc++; }
wasm:opcode:struct_get_u:before { gc++; }
wasm:opcode:struct_set:before { gc++; }
wasm:opcode:array_new:before { gc++; }
wasm:opcode:array_new_default:before { gc++; }
wasm:opcode:array_new_fixed:before { gc++; }
wasm:opcode:array_new_data:before { gc++; }
wasm:opcode:array_new_elem:before { gc++; }
wasm:opcode:array_get:before { gc++; }
wasm:opcode:array_get_s:before { gc++; }
wasm:opcode:array_get_u:before { gc++; }
wasm:opcode:array_set:before { gc++; }
wasm:opcode:array_len:before { gc++; }
wasm:opcode:array_fill:before { gc++; }
wasm:opcode:array_copy:before { gc++; }
wasm:opcode:array_init_data:before { gc++; }
wasm:opcode:array_init_elem:before { gc++; }
wasm:opcode:ref_test:before { gc++; }
wasm:opcode:ref_cast:before { gc++; }
wasm:opcode:br_on_cast:before { control++; }
wasm:opcode:br_on_cast_fail:before { control++; }
wasm:opcode:any_convert_extern:before { gc++; }
wasm:opcode:extern_convert_any:before { gc++; }
wasm:opcode:ref_i31:before { gc++; }
wasm:opcode:i31_get_s:before { gc++; }
wasm:opcode:i31_get_u:before { gc++; }
wasm:opcode:i32_trunc_sat_f32_s:before { convert++; }
wasm:opcode:i32_trunc_sat_f32_u:before { convert++; }
wasm:opcode:i32_trunc_sat_f64_s:before { convert++; }
wasm:opcode:i32_trunc_sat_f64_u:before { convert++; }
wasm:opcode:i64_trunc_sat_f32_s:before { convert++; }
wasm:opcode:i64_trunc_sat_f32_u:before { convert++; }
wasm:opcode:i64_trunc_sat_f64_s:before { convert++; }
wasm:opcode:i64_trunc_sat_f64_u:before { convert++; }
wasm:opcode:memory_init:before { mem++; }
wasm:opcode:memory_copy:before { mem++; }
wasm:opcode:memory_fill:before { mem++; }
wasm:opcode:data_drop:before { mem++; }
wasm:opcode:elem_drop:before { table++; }
wasm:opcode:try_table|table*:before { table++; }
wasm:opcode:memory_atomic_notify:before { atomic++; }
wasm:opcode:memory_atomic_wait32:before { atomic++; }
wasm:opcode:memory_atomic_wait64:before { atomic++; }
wasm:opcode:atomic_fence:before { atomic++; }
wasm:opcode:i32_atomic_load:before { atomic++; }
wasm:opcode:i64_atomic_load:before { atomic++; }
wasm:opcode:i32_atomic_load8_u:before { atomic++; }
wasm:opcode:i32_atomic_load16_u:before { atomic++; }
wasm:opcode:i64_atomic_load8_u:before { atomic++; }
wasm:opcode:i64_atomic_load16_u:before { atomic++; }
wasm:opcode:i64_atomic_load32_u:before { atomic++; }
wasm:opcode:i32_atomic_store:before { atomic++; }
wasm:opcode:i32_atomic_store8:before { atomic++; }
wasm:opcode:i32_atomic_store16:before { atomic++; }
wasm:opcode:i64_atomic_store:before { atomic++; }
wasm:opcode:i64_atomic_store8:before { atomic++; }
wasm:opcode:i64_atomic_store16:before { atomic++; }
wasm:opcode:i64_atomic_store32:before { atomic++; }
wasm:opcode:i32_atomic_rmw_add:before { atomic++; }
wasm:opcode:i32_atomic_rmw8_add_u:before { atomic++; }
wasm:opcode:i32_atomic_rmw16_add_u:before { atomic++; }
wasm:opcode:i64_atomic_rmw_add:before { atomic++; }
wasm:opcode:i64_atomic_rmw8_add_u:before { atomic++; }
wasm:opcode:i64_atomic_rmw16_add_u:before { atomic++; }
wasm:opcode:i64_atomic_rmw32_add_u:before { atomic++; }
wasm:opcode:i32_atomic_rmw_sub:before { atomic++; }
wasm:opcode:i32_atomic_rmw8_sub_u:before { atomic++; }
wasm:opcode:i32_atomic_rmw16_sub_u:before { atomic++; }
wasm:opcode:i64_atomic_rmw_sub:before { atomic++; }
wasm:opcode:i64_atomic_rmw8_sub_u:before { atomic++; }
wasm:opcode:i64_atomic_rmw16_sub_u:before { atomic++; }
wasm:opcode:i64_atomic_rmw32_sub_u:before { atomic++; }
wasm:opcode:i32_atomic_rmw_and:before { atomic++; }
wasm:opcode:i32_atomic_rmw8_and_u:before { atomic++; }
wasm:opcode:i32_atomic_rmw16_and_u:before { atomic++; }
wasm:opcode:i64_atomic_rmw_and:before { atomic++; }
wasm:opcode:i64_atomic_rmw8_and_u:before { atomic++; }
wasm:opcode:i64_atomic_rmw16_and_u:before { atomic++; }
wasm:opcode:i64_atomic_rmw32_and_u:before { atomic++; }
wasm:opcode:i32_atomic_rmw_or:before { atomic++; }
wasm:opcode:i32_atomic_rmw8_or_u:before { atomic++; }
wasm:opcode:i32_atomic_rmw16_or_u:before { atomic++; }
wasm:opcode:i64_atomic_rmw_or:before { atomic++; }
wasm:opcode:i64_atomic_rmw8_or_u:before { atomic++; }
wasm:opcode:i64_atomic_rmw16_or_u:before { atomic++; }
wasm:opcode:i64_atomic_rmw32_or_u:before { atomic++; }
wasm:opcode:i32_atomic_rmw_xor:before { atomic++; }
wasm:opcode:i32_atomic_rmw8_xor_u:before { atomic++; }
wasm:opcode:i32_atomic_rmw16_xor_u:before { atomic++; }
wasm:opcode:i64_atomic_rmw_xor:before { atomic++; }
wasm:opcode:i64_atomic_rmw8_xor_u:before { atomic++; }
wasm:opcode:i64_atomic_rmw16_xor_u:before { atomic++; }
wasm:opcode:i64_atomic_rmw32_xor_u:before { atomic++; }
wasm:opcode:i32_atomic_rmw_xchg:before { atomic++; }
wasm:opcode:i32_atomic_rmw8_xchg_u:before { atomic++; }
wasm:opcode:i32_atomic_rmw16_xchg_u:before { atomic++; }
wasm:opcode:i64_atomic_rmw_xchg:before { atomic++; }
wasm:opcode:i64_atomic_rmw8_xchg_u:before { atomic++; }
wasm:opcode:i64_atomic_rmw16_xchg_u:before { atomic++; }
wasm:opcode:i64_atomic_rmw32_xchg_u:before { atomic++; }
wasm:opcode:i32_atomic_rmw_cmpxchg:before { atomic++; }
wasm:opcode:i32_atomic_rmw8_cmpxchg_u:before { atomic++; }
wasm:opcode:i32_atomic_rmw16_cmpxchg_u:before { atomic++; }
wasm:opcode:i64_atomic_rmw_cmpxchg:before { atomic++; }
wasm:opcode:i64_atomic_rmw8_cmpxchg_u:before { atomic++; }
wasm:opcode:i64_atomic_rmw16_cmpxchg_u:before { atomic++; }
wasm:opcode:i64_atomic_rmw32_cmpxchg_u:before { atomic++; }
wasm:opcode:call_ref:before { control++; }
wasm:opcode:return_call_ref:before { control++; }
wasm:opcode:ref_as_non_null:before { convert++; }
wasm:opcode:br_on_null:before { control++; }
wasm:opcode:br_on_non_null:before { control++; }
